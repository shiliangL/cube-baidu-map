module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "0400":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_093bcea8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("9e9a");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_093bcea8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_093bcea8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_093bcea8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "0538":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");
var isObject = __webpack_require__("861d");

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "06c5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _unsupportedIterableToArray; });

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("fb6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js







function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "0823":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("76f3");






/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-map-type',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])('control')],
  props: ['type', 'mapTypes', 'anchor', 'offset'],
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    },
    type: function type() {
      this.reload();
    },
    mapTypes: function mapTypes() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset,
          type = this.type;
      var mapTypes = [];
      this.mapTypes && this.mapTypes.forEach(function (item) {
        return mapTypes.push(global[item]);
      });
      this.originInstance = new BMap.MapTypeControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_5__[/* createSize */ "e"])(BMap, offset),
        type: global[type],
        mapTypes: mapTypes
      });
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "0910":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("ecf2");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("1d36cae1", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "1148":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.repeat` method implementation
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
module.exports = ''.repeat || function repeat(count) {
  var str = String(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "1276":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var isRegExp = __webpack_require__("44e7");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var speciesConstructor = __webpack_require__("4840");
var advanceStringIndex = __webpack_require__("8aa5");
var toLength = __webpack_require__("50c4");
var callRegExpExec = __webpack_require__("14c3");
var regexpExec = __webpack_require__("9263");
var fails = __webpack_require__("d039");

var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, !SUPPORTS_Y);


/***/ }),

/***/ "129f":
/***/ (function(module, exports) {

// `SameValue` abstract operation
// https://tc39.github.io/ecma262/#sec-samevalue
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "14c3":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var regexpExec = __webpack_require__("9263");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "165e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a9e3");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("4fab");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("76f3");


//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-marker',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('overlay')],
  props: {
    position: {},
    offset: {},
    icon: {},
    massClear: {
      type: Boolean,
      default: true
    },
    dragging: {
      type: Boolean,
      default: false
    },
    clicking: {
      type: Boolean,
      default: true
    },
    raiseOnDrag: {
      type: Boolean,
      default: false
    },
    draggingCursor: {
      type: String
    },
    rotation: {
      type: Number
    },
    shadow: {
      type: Object
    },
    title: {
      type: String
    },
    label: {
      type: Object
    },
    animation: {
      type: String
    },
    top: {
      type: Boolean,
      default: false
    },
    zIndex: {
      type: Number,
      default: 0
    }
  },
  watch: {
    'position.lng': function positionLng(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance,
          position = this.position,
          renderByParent = this.renderByParent,
          $parent = this.$parent;

      if (val !== oldVal && val >= -180 && val <= 180) {
        originInstance.setPosition(Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, {
          lng: val,
          lat: position.lat
        }));
      }

      renderByParent && $parent.reload();
    },
    'position.lat': function positionLat(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance,
          position = this.position,
          renderByParent = this.renderByParent,
          $parent = this.$parent;

      if (val !== oldVal && val >= -74 && val <= 74) {
        originInstance.setPosition(Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, {
          lng: position.lng,
          lat: val
        }));
      }

      renderByParent && $parent.reload();
    },
    'offset.width': function offsetWidth(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance;

      if (val !== oldVal) {
        originInstance.setOffset(new BMap.Size(val, this.offset.height));
      }
    },
    'offset.height': function offsetHeight(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance;

      if (val !== oldVal) {
        originInstance.setOffset(new BMap.Size(this.offset.width, val));
      }
    },
    icon: {
      deep: true,
      handler: function handler(val) {
        var BMap = this.BMap,
            originInstance = this.originInstance,
            rotation = this.rotation;
        originInstance && originInstance.setIcon(Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createIcon */ "b"])(BMap, val));
        rotation && originInstance && originInstance.setRotation(rotation);
      }
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    },
    dragging: function dragging(val) {
      val ? this.originInstance.enableDragging() : this.originInstance.disableDragging();
    },
    clicking: function clicking() {
      this.reload();
    },
    raiseOnDrag: function raiseOnDrag() {
      this.reload();
    },
    draggingCursor: function draggingCursor(val) {
      this.originInstance.setDraggingCursor(val);
    },
    rotation: function rotation(val) {
      this.originInstance.setRotation(val);
    },
    shadow: function shadow(val) {
      this.originInstance.setShadow(val);
    },
    title: function title(val) {
      this.originInstance.setTitle(val);
    },
    label: function label(val) {
      this.reload();
    },
    animation: function animation(val) {
      this.originInstance.setAnimation(global[val]);
    },
    top: function top(val) {
      this.originInstance.setTop(val);
    },
    zIndex: function zIndex(val) {
      this.originInstance.setZIndex(val);
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          position = this.position,
          offset = this.offset,
          icon = this.icon,
          massClear = this.massClear,
          dragging = this.dragging,
          clicking = this.clicking,
          raiseOnDrag = this.raiseOnDrag,
          draggingCursor = this.draggingCursor,
          rotation = this.rotation,
          shadow = this.shadow,
          title = this.title,
          label = this.label,
          animation = this.animation,
          top = this.top,
          renderByParent = this.renderByParent,
          $parent = this.$parent,
          zIndex = this.zIndex;
      var overlay = new BMap.Marker(new BMap.Point(position.lng, position.lat), {
        offset: offset,
        icon: icon && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createIcon */ "b"])(BMap, icon),
        enableMassClear: massClear,
        enableDragging: dragging,
        enableClicking: clicking,
        raiseOnDrag: raiseOnDrag,
        draggingCursor: draggingCursor,
        rotation: rotation,
        shadow: shadow,
        title: title
      });
      this.originInstance = overlay;
      label && overlay && overlay.setLabel(Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createLabel */ "c"])(BMap, label));
      overlay.setTop(top);
      overlay.setZIndex(zIndex);
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].call(this, overlay);

      if (renderByParent) {
        $parent.reload();
      } else {
        map.addOverlay(overlay);
      }

      overlay.setAnimation(global[animation]);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "16d1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a9e3");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("ac1f");
/* harmony import */ var core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("841c");
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("76f3");
/* harmony import */ var _base_util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("33d3");
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("2da4");




//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-transit',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])('search')],
  props: {
    location: {
      type: [Object, String]
    },
    start: {
      type: [Object, String]
    },
    end: {
      type: [Object, String]
    },
    panel: {
      type: Boolean,
      default: true
    },
    policy: {
      type: String
    },
    pageCapacity: {
      type: Number
    },
    autoViewport: {
      type: Boolean
    },
    selectFirstResult: {
      type: Boolean
    }
  },
  watch: {
    location: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            map = this.map;
        originInstance.setLocation(val || map);
      },
      deep: true
    },
    start: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            end = this.end,
            BMap = this.BMap;
        originInstance.search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, val), Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, end));
      },
      deep: true
    },
    end: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            start = this.start,
            BMap = this.BMap;
        originInstance.search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, start), Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, val));
      },
      deep: true
    },
    panel: function panel() {
      this.reload();
    },
    policy: function policy(val) {
      this.originInstance.setPolicy(global[val]);
    },
    pageCapacity: function pageCapacity(val) {
      this.originInstance && this.originInstance.setPageCapacity(val);
    },
    autoViewport: function autoViewport(val) {
      this.originInstance && (val ? this.originInstance.enableAutoViewport() : this.originInstance.disableAutoViewport());
    },
    selectFirstResult: function selectFirstResult() {
      this.reload();
    },
    highlightMode: function highlightMode() {
      this.reload();
    }
  },
  methods: {
    search: function search(start, end) {
      var originInstance = this.originInstance;
      originInstance.search(start, end);
    },
    load: function load() {
      var instance = this;
      var map = this.map,
          BMap = this.BMap,
          location = this.location,
          policy = this.policy,
          pageCapacity = this.pageCapacity,
          selectFirstResult = this.selectFirstResult,
          autoViewport = this.autoViewport,
          highlightMode = this.highlightMode,
          search = this.search,
          start = this.start,
          end = this.end,
          originInstance = this.originInstance;

      var _location = location ? Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* isPoint */ "c"])(location) ? Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, location) : location : map;

      var route = this.originInstance = new BMap.TransitRoute(_location, {
        renderOptions: {
          map: map,
          // panel: panel && this.$el,
          panel: this.$el,
          selectFirstResult: selectFirstResult,
          autoViewport: autoViewport,
          highlightMode: highlightMode
        },
        policy: global[policy],
        pageCapacity: pageCapacity,
        onSearchComplete: function onSearchComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('searchcomplete', e);
        },
        onMarkersSet: function onMarkersSet(e) {
          instance.$emit('markersset', e);
        },
        onInfoHtmlSet: function onInfoHtmlSet(e) {
          instance.$emit('infohtmlset', e);
        },
        onPolylinesSet: function onPolylinesSet(e) {
          instance.$emit('polylinesset', e);
        },
        onResultsHtmlSet: function onResultsHtmlSet(e) {
          instance.$emit('resultshtmlset', e);
        }
      });
      search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* isPoint */ "c"])(start) ? Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, start) : start, Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* isPoint */ "c"])(end) ? Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, end) : end);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('forEach');
var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "18a5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createHTML = __webpack_require__("857a");
var forcedStringHTMLMethod = __webpack_require__("af03");

// `String.prototype.anchor` method
// https://tc39.github.io/ecma262/#sec-string.prototype.anchor
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {
  anchor: function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  }
});


/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1cdc":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var callWithSafeIterationClosing = __webpack_require__("9bdd");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
  var iterator, iterFn, index, length, result, next, step;

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = AS_ENTRIES
          ? boundFunction(anObject(step = iterable[index])[0], step[1])
          : boundFunction(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};

iterate.stop = function (result) {
  return new Result(true, result);
};


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "24fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "25f0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("6eeb");
var anObject = __webpack_require__("825a");
var fails = __webpack_require__("d039");
var flags = __webpack_require__("ad6d");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "2cf4":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");
var bind = __webpack_require__("0366");
var html = __webpack_require__("1be4");
var createElement = __webpack_require__("cc12");
var IS_IOS = __webpack_require__("1cdc");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (classof(process) == 'process') {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    !fails(post) &&
    location.protocol !== 'file:'
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2da4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const types = {
  control: {
    unload: 'removeControl'
  },
  layer: {
    unload: 'removeTileLayer'
  },
  overlay: {
    unload: 'removeOverlay'
  },
  contextMenu: {
    unload: 'removeContextMenu'
  }
}

const getParent = $component => ($component.abstract || $component.$el === $component.$children[0].$el) ? getParent($component.$parent) : $component

function destroyInstance () {
  const {unload, renderByParent, $parent} = this
  if (renderByParent) {
    $parent.reload()
  }
  unload()
}

class Mixin {
  constructor (prop) {
    this.methods = {
      ready () {
        const $parent = getParent(this.$parent)
        const BMap = this.BMap = $parent.BMap
        const map = this.map = $parent.map
        this.load()
        this.$emit('ready', {
          BMap,
          map
        })
      },
      transmitEvent (e) {
        this.$emit(e.type.replace(/^on/, ''), e)
      },
      reload () {
        this && this.BMap && this.$nextTick(() => {
          this.unload()
          this.$nextTick(this.load)
        })
      },
      unload () {
        const {map, originInstance} = this
        try {
          switch (prop.type) {
            case 'search':
              return originInstance.clearResults()
            case 'autoComplete':
            case 'lushu':
              return originInstance.dispose()
            case 'markerClusterer':
              return originInstance.clearMarkers()
            default:
              map[types[prop.type].unload](originInstance)
          }
        } catch (e) {}
      }
    }
    this.computed = {
      renderByParent () {
        return this.$parent.preventChildrenRender
      }
    }
    this.mounted = function () {
      const $parent = getParent(this.$parent)
      const map = $parent.map
      const {ready} = this
      map ? ready() : $parent.$on('ready', ready)
    }
    this.destroyed = destroyInstance
    this.beforeDestroy = destroyInstance
  }
}

/* harmony default export */ __webpack_exports__["a"] = (type => new Mixin({type}));


/***/ }),

/***/ "2ec5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MapTools_vue_vue_type_style_index_0_id_38552c8e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0910");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MapTools_vue_vue_type_style_index_0_id_38552c8e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MapTools_vue_vue_type_style_index_0_id_38552c8e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MapTools_vue_vue_type_style_index_0_id_38552c8e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "33d3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return checkType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getPosition; });
/* harmony import */ var _factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("76f3");


const isPoint = obj => obj.lng && obj.lat
const checkType = val => Object.prototype.toString.call(val).slice(8, -1)

const getPosition = (BMap, point) => isPoint(point) ? Object(_factory__WEBPACK_IMPORTED_MODULE_0__[/* createPoint */ "d"])(BMap, point) : point


/***/ }),

/***/ "3410":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toObject = __webpack_require__("7b0b");
var nativeGetPrototypeOf = __webpack_require__("e163");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "35eb":
/***/ (function(module, exports, __webpack_require__) {

(function (root, factory) {  
  if (true) {  
      module.exports = factory();
  } else {}  
})(this, function() {
  function CurveLine(points, opts) {
    try {
      BMap;
    } catch (e) {
      throw Error('Baidu Map JS API is not ready yet!');
    }
    var self = this;
    var curvePoints = getCurvePoints(points);
    var polyline = new BMap.Polyline(curvePoints, opts);

    polyline.addEventListener('lineupdate', function(){
      if (this.isEditing) {
        this.enableEditing();
      }
    });

    polyline.cornerPoints = points;
    polyline.editMarkers = []; //缂栬緫鍔熻兘鐨勯《鐐�

    /**
     * 閲嶅啓寮х嚎鐨勭紪杈戝姛鑳�
     */
    polyline.enableEditing = function () {
      var self = this;

      if (self.map) {
        self.disableEditing();
        for (var i = 0; i < self.cornerPoints.length; i++) {
          var marker = new BMap.Marker(self.cornerPoints[i], {
            icon: new BMap.Icon('http://api.map.baidu.com/library/CurveLine/1.5/src/circle.png', new BMap.Size(16,16)),
            enableDragging: true,
            raiseOnDrag: true
          });
          marker.addEventListener('dragend', function(){
            self.cornerPoints.length = 0;
            for (var i = 0; i < self.editMarkers.length; i++) {
              self.cornerPoints.push(self.editMarkers[i].getPosition());
            }
            var curvePoints = getCurvePoints(self.cornerPoints)
            self.setPath(curvePoints);
          });
          marker.index = i;
          self.editMarkers.push(marker);
          self.map.addOverlay(marker);
        }
      }
      self.isEditing = true;
    }

    /**
     * 閲嶅啓寮х嚎鐨勭紪杈戝姛鑳�
     */
    polyline.disableEditing = function() {
      this.isEditing = false;
      //娓呯┖涔嬪墠鐨勭紪杈戠偣
      for (var i = 0; i < this.editMarkers.length; i++) {
        this.map.removeOverlay(this.editMarkers[i]);
        this.editMarkers[i] = null;
      }
      this.editMarkers.length = 0;
    }

    /**
     * 鑾峰彇寮х嚎鐨勫潗鏍囩偣
     */
    polyline.getPath = function() {
      return curvePoints;
    }

    // polyline.points = points; //寮х嚎鐨勫潗鏍囬《鐐�
    // polyline.enableEditing = enableEditing;
    // polyline.disableEditing = disableEditing;
    // polyline.getPath = getPath;
    return polyline;
  }

  function extend(child, parent) {
    for (var p in parent) {
      if (parent.hasOwnProperty(p)) {
        child[p] = parent[p];
      }
    }
    
    return child;
  };

  function getCurvePoints(points) {
    var curvePoints = [];
    for (var i = 0; i < points.length - 1; i++) {
      var p = getCurveByTwoPoints(points[i], points[i + 1]);
      if (p && p.length > 0) {
        curvePoints = curvePoints.concat(p);
      }
    }
    return curvePoints;
  }

  function getCurveByTwoPoints(obj1, obj2) {
    var curveCoordinates = [];
    if (!obj1 || !obj2 || !(obj1 instanceof BMap.Point) || !(obj2 instanceof BMap.Point)) {
      return null;
    }

    var B1 = function(x) {
      return 1 - 2 * x + x * x;
    };
    var B2 = function(x) {
      return 2 * x - 2 * x * x;
    };
    var B3 = function(x) {
      return x * x;
    };

    var count=30; // 鏇茬嚎鏄敱涓€浜涘皬鐨勭嚎娈电粍鎴愮殑锛岃繖涓〃绀鸿繖涓洸绾挎墍鏈夊埌鐨勬姌绾跨殑涓暟
    var isFuture=false;
    var t, h, h2, lat3, lng3, j, t2;
    var LnArray = [];
    var i = 0;
    var inc = 0;

    if (typeof(obj2) == "undefined") {
      if (typeof(curveCoordinates) != "undefined") {
        curveCoordinates = [];
      }
      return;
    }

    var lat1 = parseFloat(obj1.lat);
    var lat2 = parseFloat(obj2.lat);
    var lng1 = parseFloat(obj1.lng);
    var lng2 = parseFloat(obj2.lng);
      
    // 璁＄畻鏇茬嚎瑙掑害鐨勬柟娉�
    if (lng2 > lng1) {
      if (parseFloat(lng2-lng1) > 180) {
        if (lng1 < 0) {
          lng1 = parseFloat(180 + 180 + lng1);
        }
      }
    }
    
    if (lng1 > lng2) {
      if (parseFloat(lng1-lng2) > 180) {
        if (lng2 < 0) {
          lng2 = parseFloat(180 + 180 + lng2);
        }
      }
    }
    j = 0;
    t2 = 0;
    if (lat2 == lat1) {
      t = 0;
      h = lng1 - lng2;
    } else if (lng2 == lng1) {
      t = Math.PI / 2;
      h = lat1 - lat2;
    } else {
      t = Math.atan((lat2 - lat1) / (lng2 - lng1));
      h = (lat2 - lat1) / Math.sin(t);
    }
    if (t2 == 0) {
      t2 = (t + (Math.PI / 5));
    }
    h2 = h / 2;
    lng3 = h2 * Math.cos(t2) + lng1;
    lat3 = h2 * Math.sin(t2) + lat1;

    for (i = 0; i < count + 1; i++) {
      curveCoordinates.push(new BMap.Point(
        (lng1 * B1(inc) + lng3 * B2(inc)) + lng2 * B3(inc),
        (lat1 * B1(inc) + lat3 * B2(inc) + lat2 * B3(inc))
      ));
      inc = inc + (1 / count);
    }
    return curveCoordinates;
  }
  return CurveLine;
});


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "39ea":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".cube-draw-map[data-v-093bcea8]{min-height:600px}.cube-draw-map[data-v-093bcea8],.cube-draw-map .bm-view[data-v-093bcea8]{width:100%;height:100%}.cube-draw-map .contextmenu[data-v-093bcea8]{margin:0;padding:0;background:#fff;list-style-type:none;border-radius:2px;font-size:12px;font-weight:400;color:#333;z-index:99999999;box-shadow:2px 2px 3px 0 rgba(0,0,0,.3);position:fixed;width:80px;text-align:left}.cube-draw-map .contextmenu li[data-v-093bcea8]{margin:0;padding:7px 16px;cursor:pointer}.cube-draw-map .contextmenu li[data-v-093bcea8]:hover{background:#eee;color:#1d6fff}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "408a":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `thisNumberValue` abstract operation
// https://tc39.github.io/ecma262/#sec-thisnumbervalue
module.exports = function (value) {
  if (typeof value != 'number' && classof(value) != 'Number') {
    throw TypeError('Incorrect invocation');
  }
  return +value;
};


/***/ }),

/***/ "4136":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-panorama',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  render: function render() {},
  props: ['anchor', 'offset'],
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset;
      this.originInstance = new BMap.PanoramaControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createSize */ "e"])(BMap, offset)
      });
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44de":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "4757":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("4fab");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("76f3");





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-geolocation',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  props: {
    anchor: {
      type: String
    },
    offset: {
      type: Object
    },
    showAddressBar: {
      type: Boolean
    },
    autoLocation: {
      type: Boolean
    },
    locationIcon: {
      type: Object
    }
  },
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    },
    showAddressBar: function showAddressBar() {
      this.reload();
    },
    autoLocation: function autoLocation() {
      this.reload();
    },
    locationIcon: function locationIcon() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          showAddressBar = this.showAddressBar,
          autoLocation = this.autoLocation,
          locationIcon = this.locationIcon,
          offset = this.offset;
      this.originInstance = new BMap.GeolocationControl({
        anchor: global[anchor],
        showAddressBar: showAddressBar,
        enableAutoLocation: autoLocation,
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createSize */ "e"])(BMap, offset),
        locationIcon: locationIcon && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createIcon */ "b"])(BMap, locationIcon)
      });
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].call(this, this.originInstance);
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "499e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ addStylesClient; });

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "4ae1":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var getBuiltIn = __webpack_require__("d066");
var aFunction = __webpack_require__("1c0b");
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var create = __webpack_require__("7c73");
var bind = __webpack_require__("0538");
var fails = __webpack_require__("d039");

var nativeConstruct = getBuiltIn('Reflect', 'construct');

// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "4b0c":
/***/ (function(module, exports, __webpack_require__) {

(function (root, factory) {  
    if (true) {  
        module.exports = factory();
    } else {}  
})(this, function() {
    var baidu = {};
    baidu.dom = {};
    baidu.dom.g = function(id) {
        if ('string' == typeof id || id instanceof String) {
            return document.getElementById(id);
        } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) {
            return id;
        }
        return null;
    };
    baidu.g = baidu.G = baidu.dom.g;
    baidu.lang = baidu.lang || {};
    baidu.lang.isString = function(source) {
        return '[object String]' == Object.prototype.toString.call(source);
    };
    baidu.isString = baidu.lang.isString;
    baidu.dom._g = function(id) {
        if (baidu.lang.isString(id)) {
            return document.getElementById(id);
        }
        return id;
    };
    baidu._g = baidu.dom._g;
    baidu.dom.getDocument = function(element) {
        element = baidu.dom.g(element);
        return element.nodeType == 9 ? element : element.ownerDocument || element.document;
    };
    baidu.browser = baidu.browser || {};
    baidu.browser.ie = baidu.ie = /msie (\d+\.\d+)/i.test(navigator.userAgent) ? (document.documentMode || + RegExp['\x241']) : undefined;
    baidu.dom.getComputedStyle = function(element, key) {
        element = baidu.dom._g(element);
        var doc = baidu.dom.getDocument(element),
            styles;
        if (doc.defaultView && doc.defaultView.getComputedStyle) {
            styles = doc.defaultView.getComputedStyle(element, null);
            if (styles) {
                return styles[key] || styles.getPropertyValue(key);
            }
        }
        return '';
    };
    baidu.dom._styleFixer = baidu.dom._styleFixer || {};
    baidu.dom._styleFilter = baidu.dom._styleFilter || [];
    baidu.dom._styleFilter.filter = function(key, value, method) {
        for (var i = 0, filters = baidu.dom._styleFilter, filter; filter = filters[i]; i++) {
            if (filter = filter[method]) {
                value = filter(key, value);
            }
        }
        return value;
    };
    baidu.string = baidu.string || {};
    baidu.string.toCamelCase = function(source) {

        if (source.indexOf('-') < 0 && source.indexOf('_') < 0) {
            return source;
        }
        return source.replace(/[-_][^-_]/g, function(match) {
            return match.charAt(1).toUpperCase();
        });
    };
    baidu.dom.getStyle = function(element, key) {
        var dom = baidu.dom;
        element = dom.g(element);
        key = baidu.string.toCamelCase(key);

        var value = element.style[key] ||
                    (element.currentStyle ? element.currentStyle[key] : '') ||
                    dom.getComputedStyle(element, key);

        if (!value) {
            var fixer = dom._styleFixer[key];
            if (fixer) {
                value = fixer.get ? fixer.get(element) : baidu.dom.getStyle(element, fixer);
            }
        }

        if (fixer = dom._styleFilter) {
            value = fixer.filter(key, value, 'get');
        }
        return value;
    };
    baidu.getStyle = baidu.dom.getStyle;
    baidu.dom._NAME_ATTRS = (function() {
        var result = {
            'cellpadding': 'cellPadding',
            'cellspacing': 'cellSpacing',
            'colspan': 'colSpan',
            'rowspan': 'rowSpan',
            'valign': 'vAlign',
            'usemap': 'useMap',
            'frameborder': 'frameBorder'
        };

        if (baidu.browser.ie < 8) {
            result['for'] = 'htmlFor';
            result['class'] = 'className';
        } else {
            result['htmlFor'] = 'for';
            result['className'] = 'class';
        }

        return result;
    })();
    baidu.dom.setAttr = function(element, key, value) {
        element = baidu.dom.g(element);
        if ('style' == key) {
            element.style.cssText = value;
        } else {
            key = baidu.dom._NAME_ATTRS[key] || key;
            element.setAttribute(key, value);
        }
        return element;
    };
    baidu.setAttr = baidu.dom.setAttr;
    baidu.dom.setAttrs = function(element, attributes) {
        element = baidu.dom.g(element);
        for (var key in attributes) {
            baidu.dom.setAttr(element, key, attributes[key]);
        }
        return element;
    };
    baidu.setAttrs = baidu.dom.setAttrs;
    baidu.dom.create = function(tagName, opt_attributes) {
        var el = document.createElement(tagName),
            attributes = opt_attributes || {};
        return baidu.dom.setAttrs(el, attributes);
    };
    baidu.object = baidu.object || {};
    baidu.extend =
    baidu.object.extend = function(target, source) {
        for (var p in source) {
            if (source.hasOwnProperty(p)) {
                target[p] = source[p];
            }
        }
        return target;
    };

    /**
     * @exports LuShu as BMapLib.LuShu
     */
    var LuShu = function(map, path, opts) {
        try {
            BMap;
        } catch (e) {
            throw Error('Baidu Map JS API is not ready yet!');
        }
        if (!path || path.length < 1) {
            return;
        }
        this._map = map;
        this._path = path;
        this.i = 0;
        this._setTimeoutQuene = [];
        this._projection = this._map.getMapType().getProjection();
        this._opts = {
            icon: null,
            speed: 4000,
            defaultContent: '',
            showInfoWindow: false
        };
        this._setOptions(opts);
        this._rotation = 0;

        if (!this._opts.icon instanceof BMap.Icon) {
            this._opts.icon = defaultIcon;
        }
    }
    LuShu.prototype._setOptions = function(opts) {
        if (!opts) {
            return;
        }
        for (var p in opts) {
            if (opts.hasOwnProperty(p)) {
                this._opts[p] = opts[p];
            }
        }
    }
    LuShu.prototype.start = function() {
        var me = this,
            len = me._path.length;
        this._opts.onstart && this._opts.onstart(me)
        if (me.i && me.i < len - 1) {
            if (!me._fromPause) {
                return;
            }else if(!me._fromStop){
	            me._moveNext(++me.i);
            }
        }else {
            !me._marker && me._addMarker();
            me._timeoutFlag = setTimeout(function() {
                    !me._overlay && me._addInfoWin();
                    me._moveNext(me.i);
            },400);
        }
        this._fromPause = false;
        this._fromStop = false;
    },
    LuShu.prototype.stop = function() {
        this.i = 0;
        this._fromStop = true;
        clearInterval(this._intervalFlag);
        this._clearTimeout();
        for (var i = 0, t = this._opts.landmarkPois, len = t.length; i < len; i++) {
            t[i].bShow = false;
        }
        this._opts.onstop && this._opts.onstop(this)
    };
    LuShu.prototype.pause = function() {
        clearInterval(this._intervalFlag);
        this._fromPause = true;
        this._clearTimeout();
        this._opts.onpause && this._opts.onpause(this)
    };
    LuShu.prototype.hideInfoWindow = function() {
        this._opts.showInfoWindow = false;
        this._overlay && (this._overlay._div.style.visibility = 'hidden');
    };
    LuShu.prototype.showInfoWindow = function() {
        this._opts.showInfoWindow = true;
        this._overlay && (this._overlay._div.style.visibility = 'visible');
    };
    LuShu.prototype.dispose = function () {
        clearInterval(this._intervalFlag);
        this._setTimeoutQuene && this._clearTimeout();
        if (this._map) {
            this._map.removeOverlay(this._overlay);
            this._map.removeOverlay(this._marker);
        }
    };
    baidu.object.extend(LuShu.prototype, {
        _addMarker: function(callback) {
            if (this._marker) {
                this.stop();
                this._map.removeOverlay(this._marker);
                clearTimeout(this._timeoutFlag);
            }
            this._overlay && this._map.removeOverlay(this._overlay);
            var marker = new BMap.Marker(this._path[0]);
            this._opts.icon && marker.setIcon(this._opts.icon);
            this._map.addOverlay(marker);
            marker.setAnimation(BMAP_ANIMATION_DROP);
            this._marker = marker;
        },
        _addInfoWin: function() {
            var me = this;
            !CustomOverlay.prototype.initialize && initCustomOverlay();
            var overlay = new CustomOverlay(me._marker.getPosition(), me._opts.defaultContent);
            overlay.setRelatedClass(this);
            this._overlay = overlay;
            this._map.addOverlay(overlay);
            this._opts.showInfoWindow ? this.showInfoWindow() : this.hideInfoWindow()
        },
        _getMercator: function(poi) {
            return this._map.getMapType().getProjection().lngLatToPoint(poi);
        },
        _getDistance: function(pxA, pxB) {
            return Math.sqrt(Math.pow(pxA.x - pxB.x, 2) + Math.pow(pxA.y - pxB.y, 2));
        },
        _move: function(initPos,targetPos,effect) {
            var me = this,
                currentCount = 0,
                timer = 10,
                step = this._opts.speed / (1000 / timer),
                init_pos = this._projection.lngLatToPoint(initPos),
                target_pos = this._projection.lngLatToPoint(targetPos),
                count = Math.round(me._getDistance(init_pos, target_pos) / step);
            if (count < 1) {
                me._moveNext(++me.i);
                return;
            }
            me._intervalFlag = setInterval(function() {
	            if (currentCount >= count) {
	                clearInterval(me._intervalFlag);
		        	if(me.i > me._path.length){
						return;
		        	}
	                me._moveNext(++me.i);
	            } else {
                    currentCount++;
                    var x = effect(init_pos.x, target_pos.x, currentCount, count),
                        y = effect(init_pos.y, target_pos.y, currentCount, count),
                        pos = me._projection.pointToLngLat(new BMap.Pixel(x, y));
                    if(currentCount == 1){
                        var proPos = null;
                        if(me.i - 1 >= 0){
                            proPos = me._path[me.i - 1];
                        }
                        if(me._opts.enableRotation == true){
                            me.setRotation(proPos,initPos,targetPos);
                        }
                        if(me._opts.autoView){
                            if(!me._map.getBounds().containsPoint(pos)){
                                me._map.setCenter(pos);
                            }   
                        }
                    }
                    me._marker.setPosition(pos);
                    me._setInfoWin(pos);
                }
	        },timer);
        },
        setRotation : function(prePos,curPos,targetPos){
            var me = this;
            var deg = 0;
            //start!
            curPos =  me._map.pointToPixel(curPos);
            targetPos =  me._map.pointToPixel(targetPos);   

            if(targetPos.x != curPos.x){
                var tan = (targetPos.y - curPos.y)/(targetPos.x - curPos.x),
                atan  = Math.atan(tan);
                deg = atan*360/(2*Math.PI);
                //degree  correction;
                if(targetPos.x < curPos.x){
                    deg = -deg + 90 + 90;

                } else {
                    deg = -deg;
                }

                me._marker.setRotation(-deg);   

            }else {
                var disy = targetPos.y- curPos.y ;
                var bias = 0;
                if(disy > 0)
                    bias=-1
                else
                    bias = 1
                me._marker.setRotation(-bias * 90);  
            }
            return;
        },
        linePixellength : function(from,to){ 
            return Math.sqrt(Math.abs(from.x- to.x) * Math.abs(from.x- to.x) + Math.abs(from.y- to.y) * Math.abs(from.y- to.y) );
        },
        pointToPoint : function(from,to ){
            return Math.abs(from.x- to.x) * Math.abs(from.x- to.x) + Math.abs(from.y- to.y) * Math.abs(from.y- to.y)
        },
        _moveNext: function(index) {
            var me = this;
            if (index < this._path.length - 1) {
                me._move(me._path[index], me._path[index + 1], me._tween.linear);
            } else {
                me.stop()
            }
        },
        _setInfoWin: function(pos) {
            var me = this;
            me._overlay.setPosition(pos, me._marker.getIcon().size);
            var index = me._troughPointIndex(pos);
            if (index != -1) {
                clearInterval(me._intervalFlag);
                me._overlay.setHtml(me._opts.landmarkPois[index].html);
                me._overlay.setPosition(pos, me._marker.getIcon().size);
                me._pauseForView(index);
            }else {
                me._overlay.setHtml(me._opts.defaultContent);
            }
        },
        _pauseForView: function(index) {
            var me = this;
            var t = setTimeout(function() {
                me._moveNext(++me.i);
            },me._opts.landmarkPois[index].pauseTime * 1000);
            me._setTimeoutQuene.push(t);
        },
        _clearTimeout: function() {
            for (var i in this._setTimeoutQuene) {
                clearTimeout(this._setTimeoutQuene[i]);
            }
            this._setTimeoutQuene.length = 0;
        },
        _tween: {
            linear: function(initPos, targetPos, currentCount, count) {
                var b = initPos, c = targetPos - initPos, t = currentCount,
                d = count;
                return c * t / d + b;
            }
        },
        _troughPointIndex: function(markerPoi) {
            var t = this._opts.landmarkPois, distance;
            for (var i = 0, len = t.length; i < len; i++) {
                if (!t[i].bShow) {
                    distance = this._map.getDistance(new BMap.Point(t[i].lng, t[i].lat), markerPoi);
                    if (distance < 10) {
                        t[i].bShow = true;
                        return i;
                    }
                }
            }
           return -1;
        }
    });
    function CustomOverlay(point,html) {
        this._point = point;
        this._html = html;
    }

    function initCustomOverlay() {
        CustomOverlay.prototype = new BMap.Overlay();
        CustomOverlay.prototype.initialize = function(map) {
            var div = this._div = baidu.dom.create('div', {style: 'border:solid 1px #ccc;width:auto;min-width:50px;text-align:center;position:absolute;background:#fff;color:#000;font-size:12px;border-radius: 10px;padding:5px;white-space: nowrap;'});
            div.innerHTML = this._html;
            map.getPanes().floatPane.appendChild(div);
            this._map = map;
            return div;
        }
        CustomOverlay.prototype.draw = function() {
            this.setPosition(this.lushuMain._marker.getPosition(), this.lushuMain._marker.getIcon().size);
        }
        baidu.object.extend(CustomOverlay.prototype, {
            setPosition: function(poi,markerSize) {
                var px = this._map.pointToOverlayPixel(poi),
                    styleW = baidu.dom.getStyle(this._div, 'width'),
                    styleH = baidu.dom.getStyle(this._div, 'height'),
                    overlayW = parseInt(this._div.clientWidth || styleW, 10),
                    overlayH = parseInt(this._div.clientHeight || styleH, 10);
                this._div.style.left = px.x - overlayW / 2 + 'px';
                this._div.style.bottom = -(px.y - markerSize.height) + 'px';
            },
            setHtml: function(html) {
                this._div.innerHTML = html;
            },
            setRelatedClass: function(lushuMain) {
                this.lushuMain = lushuMain;
            }
        });
    }

    return LuShu
});


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "4fab":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/base/events.js
/* harmony default export */ var events = ({
  'bm-map': [
    'click',
    'dblclick',
    'rightclick',
    'rightdblclick',
    'maptypechange',
    'mousemove',
    'mouseover',
    'mouseout',
    'movestart',
    'moving',
    'moveend',
    'zoomstart',
    'zoomend',
    'addoverlay',
    'addcontrol',
    'removecontrol',
    'removeoverlay',
    'clearoverlays',
    'dragstart',
    'dragging',
    'dragend',
    'addtilelayer',
    'removetilelayer',
    'load',
    'resize',
    'hotspotclick',
    'hotspotover',
    'hotspotout',
    'tilesloaded',
    'touchstart',
    'touchmove',
    'touchend',
    'longpress'
  ],
  'bm-geolocation': [
    'locationSuccess',
    'locationError'
  ],
  'bm-overview-map': [
    'viewchanged',
    'viewchanging'
  ],
  'bm-marker': [
    'click',
    'dblclick',
    'mousedown',
    'mouseup',
    'mouseout',
    'mouseover',
    'remove',
    'infowindowclose',
    'infowindowopen',
    'dragstart',
    'dragging',
    'dragend',
    'rightclick'
  ],
  'bm-polyline': [
    'click',
    'dblclick',
    'mousedown',
    'mouseup',
    'mouseout',
    'mouseover',
    'remove',
    'lineupdate'
  ],
  'bm-polygon': [
    'click',
    'dblclick',
    'mousedown',
    'mouseup',
    'mouseout',
    'mouseover',
    'remove',
    'lineupdate'
  ],
  'bm-circle': [
    'click',
    'dblclick',
    'mousedown',
    'mouseup',
    'mouseout',
    'mouseover',
    'remove',
    'lineupdate'
  ],
  'bm-label': [
    'click',
    'dblclick',
    'mousedown',
    'mouseup',
    'mouseout',
    'mouseover',
    'remove',
    'rightclick'
  ],
  'bm-info-window': [
    'close',
    'open',
    'maximize',
    'restore',
    'clickclose'
  ],
  'bm-ground': [
    'click',
    'dblclick'
  ],
  'bm-autocomplete': [
    'onconfirm',
    'onhighlight'
  ],
  'bm-point-collection': [
    'click',
    'mouseover',
    'mouseout'
  ]
});

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/base/bindEvent.js


/* harmony default export */ var bindEvent = __webpack_exports__["a"] = (function (instance, eventList) {
  const ev = eventList || events[this.$options.name]
  ev && ev.forEach(event => {
    const hasOn = event.slice(0, 2) === 'on'
    const eventName = hasOn ? event.slice(2) : event
    const listener = this.$listeners[eventName]
    listener && instance.addEventListener(event, listener.fns)
  })
});


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5319":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      if (
        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
      ) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;
      }

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

  // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return nativeReplace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.6.5',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "57ff":
/***/ (function(module, exports, __webpack_require__) {

(function (root, factory) {  
    if (true) {  
        module.exports = factory();
    } else {}  
})(this, function() {
    function inherits (subClass, superClass, className) {
        var key, proto,
            selfProps = subClass.prototype,
            clazz = new Function();

        clazz.prototype = superClass.prototype;
        proto = subClass.prototype = new clazz();
        for (key in selfProps) {
            proto[key] = selfProps[key];
        }
        subClass.prototype.constructor = subClass;
        subClass.superClass = superClass.prototype;

        // 类名标识，兼容Class的toString，基本没用
        if ("string" == typeof className) {
            proto._className = className;
        }
    };
    var heatmapFactory = (function(){
        // store object constructor
        // a heatmap contains a store
        // the store has to know about the heatmap in order to trigger heatmap updates when datapoints get added
        var store = function store(hmap){

            var _ = {
                // data is a two dimensional array
                // a datapoint gets saved as data[point-x-value][point-y-value]
                // the value at [point-x-value][point-y-value] is the occurrence of the datapoint
                data: [],
                // tight coupling of the heatmap object
                heatmap: hmap
            };
            // the max occurrence - the heatmaps radial gradient alpha transition is based on it
            this.max = 1;

            this.get = function(key){
                return _[key];
            };
            this.set = function(key, value){
                _[key] = value;
            };
        }

        store.prototype = {
            // function for adding datapoints to the store
            // datapoints are usually defined by x and y but could also contain a third parameter which represents the occurrence
            addDataPoint: function(x, y){
                if(x < 0 || y < 0)
                    return;

                var me = this,
                    heatmap = me.get("heatmap"),
                    data = me.get("data");

                if(!data[x])
                    data[x] = [];

                if(!data[x][y])
                    data[x][y] = 0;

                // if count parameter is set increment by count otherwise by 1
                data[x][y]+=(arguments.length<3)?1:arguments[2];
                
                me.set("data", data);
                // do we have a new maximum?
                if(me.max < data[x][y]){
                    // max changed, we need to redraw all existing(lower) datapoints
                    heatmap.get("actx").clearRect(0,0,heatmap.get("width"),heatmap.get("height"));
                    me.setDataSet({ max: data[x][y], data: data }, true);
                    return;
                }
                heatmap.drawAlpha(x, y, data[x][y], true);
            },
            setDataSet: function(obj, internal){
                var me = this,
                    heatmap = me.get("heatmap"),
                    data = [],
                    d = obj.data,
                    dlen = d.length;
                // clear the heatmap before the data set gets drawn
                heatmap.clear();
                this.max = obj.max;
                // if a legend is set, update it
                heatmap.get("legend") && heatmap.get("legend").update(obj.max);
                
                if(internal != null && internal){
                    for(var one in d){
                        // jump over undefined indexes
                        if(one === undefined)
                            continue;
                        for(var two in d[one]){
                            if(two === undefined)
                                continue;
                            // if both indexes are defined, push the values into the array
                            heatmap.drawAlpha(one, two, d[one][two], false);   
                        }
                    }
                }else{
                    while(dlen--){
                        var point = d[dlen];
                        heatmap.drawAlpha(point.x, point.y, point.count, false);
                        if(!data[point.x])
                            data[point.x] = [];

                        if(!data[point.x][point.y])
                            data[point.x][point.y] = 0;

                        data[point.x][point.y] = point.count;
                    }
                }
                heatmap.colorize();
                this.set("data", d);
            },
            exportDataSet: function(){
                var me = this,
                    data = me.get("data"),
                    exportData = [];

                for(var one in data){
                    // jump over undefined indexes
                    if(one === undefined)
                        continue;
                    for(var two in data[one]){
                        if(two === undefined)
                            continue;
                        // if both indexes are defined, push the values into the array
                        exportData.push({x: parseInt(one, 10), y: parseInt(two, 10), count: data[one][two]});
                    }
                }

                return { max: me.max, data: exportData };
            },
            generateRandomDataSet: function(points){
                var heatmap = this.get("heatmap"),
                w = heatmap.get("width"),
                h = heatmap.get("height");
                var randomset = {},
                max = Math.floor(Math.random()*1000+1);
                randomset.max = max;
                var data = [];
                while(points--){
                    data.push({x: Math.floor(Math.random()*w+1), y: Math.floor(Math.random()*h+1), count: Math.floor(Math.random()*max+1)});
                }
                randomset.data = data;
                this.setDataSet(randomset);
            }
        };

        var legend = function legend(config){
            this.config = config;

            var _ = {
                element: null,
                labelsEl: null,
                gradientCfg: null,
                ctx: null
            };
            this.get = function(key){
                return _[key];
            };
            this.set = function(key, value){
                _[key] = value;
            };
            this.init();
        };
        legend.prototype = {
            init: function(){
                var me = this,
                    config = me.config,
                    title = config.title || "Legend",
                    position = config.position,
                    offset = config.offset || 10,
                    gconfig = config.gradient,
                    labelsEl = document.createElement("ul"),
                    labelsHtml = "",
                    grad, element, gradient, positionCss = "";

                me.processGradientObject();
                
                // Positioning

                // top or bottom
                if(position.indexOf('t') > -1){
                    positionCss += 'top:'+offset+'px;';
                }else{
                    positionCss += 'bottom:'+offset+'px;';
                }

                // left or right
                if(position.indexOf('l') > -1){
                    positionCss += 'left:'+offset+'px;';
                }else{
                    positionCss += 'right:'+offset+'px;';
                }

                element = document.createElement("div");
                element.style.cssText = "border-radius:5px;position:absolute;"+positionCss+"font-family:Helvetica; width:256px;z-index:10000000000; background:rgba(255,255,255,1);padding:10px;border:1px solid black;margin:0;";
                element.innerHTML = "<h3 style='padding:0;margin:0;text-align:center;font-size:16px;'>"+title+"</h3>";
                // create gradient in canvas
                labelsEl.style.cssText = "position:relative;font-size:12px;display:block;list-style:none;list-style-type:none;margin:0;height:15px;";
                

                // create gradient element
                gradient = document.createElement("div");
                gradient.style.cssText = ["position:relative;display:block;width:256px;height:15px;border-bottom:1px solid black; background-image:url(",me.createGradientImage(),");"].join("");

                element.appendChild(labelsEl);
                element.appendChild(gradient);
                
                me.set("element", element);
                me.set("labelsEl", labelsEl);

                me.update(1);
            },
            processGradientObject: function(){
                // create array and sort it
                var me = this,
                    gradientConfig = this.config.gradient,
                    gradientArr = [];

                for(var key in gradientConfig){
                    if(gradientConfig.hasOwnProperty(key)){
                        gradientArr.push({ stop: key, value: gradientConfig[key] });
                    }
                }
                gradientArr.sort(function(a, b){
                    return (a.stop - b.stop);
                });
                gradientArr.unshift({ stop: 0, value: 'rgba(0,0,0,0)' });

                me.set("gradientArr", gradientArr);
            },
            createGradientImage: function(){
                var me = this,
                    gradArr = me.get("gradientArr"),
                    length = gradArr.length,
                    canvas = document.createElement("canvas"),
                    ctx = canvas.getContext("2d"),
                    grad;
                // the gradient in the legend including the ticks will be 256x15px
                canvas.width = "256";
                canvas.height = "15";

                grad = ctx.createLinearGradient(0,5,256,10);

                for(var i = 0; i < length; i++){
                    grad.addColorStop(1/(length-1) * i, gradArr[i].value);
                }

                ctx.fillStyle = grad;
                ctx.fillRect(0,5,256,10);
                ctx.strokeStyle = "black";
                ctx.beginPath();

                for(var i = 0; i < length; i++){
                    ctx.moveTo(((1/(length-1)*i*256) >> 0)+.5, 0);
                    ctx.lineTo(((1/(length-1)*i*256) >> 0)+.5, (i==0)?15:5);
                }
                ctx.moveTo(255.5, 0);
                ctx.lineTo(255.5, 15);
                ctx.moveTo(255.5, 4.5);
                ctx.lineTo(0, 4.5);
                
                ctx.stroke();

                // we re-use the context for measuring the legends label widths
                me.set("ctx", ctx);

                return canvas.toDataURL();
            },
            getElement: function(){
                return this.get("element");
            },
            update: function(max){
                var me = this,
                    gradient = me.get("gradientArr"),
                    ctx = me.get("ctx"),
                    labels = me.get("labelsEl"),
                    labelText, labelsHtml = "", offset;

                for(var i = 0; i < gradient.length; i++){

                    labelText = max*gradient[i].stop >> 0;
                    offset = (ctx.measureText(labelText).width/2) >> 0;

                    if(i == 0){
                        offset = 0;
                    }
                    if(i == gradient.length-1){
                        offset *= 2;
                    }
                    labelsHtml += '<li style="position:absolute;left:'+(((((1/(gradient.length-1)*i*256) || 0)) >> 0)-offset+.5)+'px">'+labelText+'</li>';
                }       
                labels.innerHTML = labelsHtml;
            }
        };

        // heatmap object constructor
        var heatmap = function heatmap(config){
            // private variables
            var _ = {
                radius : 40,
                element : {},
                canvas : {},
                acanvas: {},
                ctx : {},
                actx : {},
                legend: null,
                visible : true,
                width : 0,
                height : 0,
                max : false,
                gradient : false,
                opacity: 180,
                premultiplyAlpha: false,
                bounds: {
                    l: 1000,
                    r: 0,
                    t: 1000,
                    b: 0
                },
                debug: false
            };
            // heatmap store containing the datapoints and information about the maximum
            // accessible via instance.store
            this.store = new store(this);

            this.get = function(key){
                return _[key];
            };
            this.set = function(key, value){
                _[key] = value;
            };
            // configure the heatmap when an instance gets created
            this.configure(config);
            // and initialize it
            this.init();
        };

        // public functions
        heatmap.prototype = {
            configure: function(config){
                var me = this,
                    rout, rin;

                me.set("radius", config["radius"] || 40);
                me.set("element", (config.element instanceof Object)?config.element:document.getElementById(config.element));
                me.set("visible", (config.visible != null)?config.visible:true);
                me.set("max", config.max || false);
                me.set("gradient", config.gradient || { 0.45: "rgb(0,0,255)", 0.55: "rgb(0,255,255)", 0.65: "rgb(0,255,0)", 0.95: "yellow", 1.0: "rgb(255,0,0)"});    // default is the common blue to red gradient
                me.set("opacity", parseInt(255/(100/config.opacity), 10) || 180);
                me.set("width", config.width || 0);
                me.set("height", config.height || 0);
                me.set("debug", config.debug);

                if(config.legend){
                    var legendCfg = config.legend;
                    legendCfg.gradient = me.get("gradient");
                    me.set("legend", new legend(legendCfg));
                }
                    
            },
            resize: function () {
                var me = this,
                    element = me.get("element"),
                    canvas = me.get("canvas"),
                    acanvas = me.get("acanvas");
                canvas.width = acanvas.width = me.get("width") || element.style.width.replace(/px/, "") || me.getWidth(element);
                this.set("width", canvas.width);
                canvas.height = acanvas.height = me.get("height") || element.style.height.replace(/px/, "") || me.getHeight(element);
                this.set("height", canvas.height);
            },

            init: function(){
                var me = this,
                    canvas = document.createElement("canvas"),
                    acanvas = document.createElement("canvas"),
                    ctx = canvas.getContext("2d"),
                    actx = acanvas.getContext("2d"),
                    element = me.get("element");

                
                me.initColorPalette();

                me.set("canvas", canvas);
                me.set("ctx", ctx);
                me.set("acanvas", acanvas);
                me.set("actx", actx);

                me.resize();
                canvas.style.cssText = acanvas.style.cssText = "position:absolute;top:0;left:0;z-index:10000000;";
                
                if(!me.get("visible"))
                    canvas.style.display = "none";

                element.appendChild(canvas);
                if(me.get("legend")){
                    element.appendChild(me.get("legend").getElement());
                }
                
                // debugging purposes only
                if(me.get("debug"))
                    document.body.appendChild(acanvas);
                
                actx.shadowOffsetX = 15000; 
                actx.shadowOffsetY = 15000; 
                actx.shadowBlur = 15; 
            },
            initColorPalette: function(){

                var me = this,
                    canvas = document.createElement("canvas"),
                    gradient = me.get("gradient"),
                    ctx, grad, testData;

                canvas.width = "1";
                canvas.height = "256";
                ctx = canvas.getContext("2d");
                grad = ctx.createLinearGradient(0,0,1,256);

                // Test how the browser renders alpha by setting a partially transparent pixel
                // and reading the result.  A good browser will return a value reasonably close
                // to what was set.  Some browsers (e.g. on Android) will return a ridiculously wrong value.
                testData = ctx.getImageData(0,0,1,1);
                testData.data[0] = testData.data[3] = 64; // 25% red & alpha
                testData.data[1] = testData.data[2] = 0; // 0% blue & green
                ctx.putImageData(testData, 0, 0);
                testData = ctx.getImageData(0,0,1,1);
                me.set("premultiplyAlpha", (testData.data[0] < 60 || testData.data[0] > 70));
                
                for(var x in gradient){
                    grad.addColorStop(x, gradient[x]);
                }

                ctx.fillStyle = grad;
                ctx.fillRect(0,0,1,256);

                me.set("gradient", ctx.getImageData(0,0,1,256).data);
            },
            getWidth: function(element){
                var width = element.offsetWidth;
                if(element.style.paddingLeft){
                    width+=element.style.paddingLeft;
                }
                if(element.style.paddingRight){
                    width+=element.style.paddingRight;
                }

                return width;
            },
            getHeight: function(element){
                var height = element.offsetHeight;
                if(element.style.paddingTop){
                    height+=element.style.paddingTop;
                }
                if(element.style.paddingBottom){
                    height+=element.style.paddingBottom;
                }

                return height;
            },
            colorize: function(x, y){
                // get the private variables
                var me = this,
                    width = me.get("width"),
                    radius = me.get("radius"),
                    height = me.get("height"),
                    actx = me.get("actx"),
                    ctx = me.get("ctx"),
                    x2 = radius * 3,
                    premultiplyAlpha = me.get("premultiplyAlpha"),
                    palette = me.get("gradient"),
                    opacity = me.get("opacity"),
                    bounds = me.get("bounds"),
                    left, top, bottom, right, 
                    image, length, alpha, offset, finalAlpha;
                
                if(x != null && y != null){
                    if(x+x2>width){
                        x=width-x2;
                    }
                    if(x<0){
                        x=0;
                    }
                    if(y<0){
                        y=0;
                    }
                    if(y+x2>height){
                        y=height-x2;
                    }
                    left = x;
                    top = y;
                    right = x + x2;
                    bottom = y + x2;

                }else{
                    if(bounds['l'] < 0){
                        left = 0;
                    }else{
                        left = bounds['l'];
                    }
                    if(bounds['r'] > width){
                        right = width;
                    }else{
                        right = bounds['r'];
                    }
                    if(bounds['t'] < 0){
                        top = 0;
                    }else{
                        top = bounds['t'];
                    }
                    if(bounds['b'] > height){
                        bottom = height;
                    }else{
                        bottom = bounds['b'];
                    }    
                }

                image = actx.getImageData(left, top, right-left, bottom-top);
                length = image.data.length;
                // loop thru the area
                for(var i=3; i < length; i+=4){

                    // [0] -> r, [1] -> g, [2] -> b, [3] -> alpha
                    alpha = image.data[i],
                    offset = alpha*4;

                    if(!offset)
                        continue;

                    // we ve started with i=3
                    // set the new r, g and b values
                    finalAlpha = (alpha < opacity)?alpha:opacity;
                    image.data[i-3]=palette[offset];
                    image.data[i-2]=palette[offset+1];
                    image.data[i-1]=palette[offset+2];
                    
                    if (premultiplyAlpha) {
                    // To fix browsers that premultiply incorrectly, we'll pass in a value scaled
                    // appropriately so when the multiplication happens the correct value will result.
                    image.data[i-3] /= 255/finalAlpha;
                    image.data[i-2] /= 255/finalAlpha;
                    image.data[i-1] /= 255/finalAlpha;
                    }
                    
                    // we want the heatmap to have a gradient from transparent to the colors
                    // as long as alpha is lower than the defined opacity (maximum), we'll use the alpha value
                    image.data[i] = finalAlpha;
                }
                // the rgb data manipulation didn't affect the ImageData object(defined on the top)
                // after the manipulation process we have to set the manipulated data to the ImageData object
                // image.data = imageData;
                ctx.putImageData(image, left, top);
            },
            drawAlpha: function(x, y, count, colorize){
                // storing the variables because they will be often used
                var me = this,
                    radius = me.get("radius"),
                    ctx = me.get("actx"),
                    max = me.get("max"),
                    bounds = me.get("bounds"),
                    xb = x - (1.5 * radius) >> 0, yb = y - (1.5 * radius) >> 0,
                    xc = x + (1.5 * radius) >> 0, yc = y + (1.5 * radius) >> 0;

                ctx.shadowColor = ('rgba(0,0,0,'+((count)?(count/me.store.max):'0.1')+')');

                ctx.shadowOffsetX = 15000; 
                ctx.shadowOffsetY = 15000; 
                ctx.shadowBlur = 15; 

                ctx.beginPath();
                ctx.arc(x - 15000, y - 15000, radius, 0, Math.PI * 2, true);
                ctx.closePath();
                ctx.fill();
                if(colorize){
                    // finally colorize the area
                    me.colorize(xb,yb);
                }else{
                    // or update the boundaries for the area that then should be colorized
                    if(xb < bounds["l"]){
                        bounds["l"] = xb;
                    }
                    if(yb < bounds["t"]){
                        bounds["t"] = yb;
                    }
                    if(xc > bounds['r']){
                        bounds['r'] = xc;
                    }
                    if(yc > bounds['b']){
                        bounds['b'] = yc;
                    }
                }
            },
            toggleDisplay: function(){
                var me = this,
                    visible = me.get("visible"),
                canvas = me.get("canvas");

                if(!visible)
                    canvas.style.display = "block";
                else
                    canvas.style.display = "none";

                me.set("visible", !visible);
            },
            // dataURL export
            getImageData: function(){
                return this.get("canvas").toDataURL();
            },
            clear: function(){
                var me = this,
                    w = me.get("width"),
                    h = me.get("height");

                me.store.set("data",[]);
                // @TODO: reset stores max to 1
                //me.store.max = 1;
                me.get("ctx").clearRect(0,0,w,h);
                me.get("actx").clearRect(0,0,w,h);
            },
            cleanup: function(){
                var me = this;
                me.get("element").removeChild(me.get("canvas"));
            }
        };

        return {
            create: function(config){
                return new heatmap(config);
            }, 
            util: {
                mousePosition: function(ev){
                    // this doesn't work right
                    // rather use
                    /*
                        // this = element to observe
                        var x = ev.pageX - this.offsetLeft;
                        var y = ev.pageY - this.offsetTop;

                    */
                    var x, y;

                    if (ev.layerX) { // Firefox
                        x = ev.layerX;
                        y = ev.layerY;
                    } else if (ev.offsetX) { // Opera
                        x = ev.offsetX;
                        y = ev.offsetY;
                    }
                    if(typeof(x)=='undefined')
                        return;

                    return [x,y];
                }
            }
        };
    })();

    var HeatmapOverlay = function(opts) {
        try {
            BMap;
        } catch (e) {
            throw Error('Baidu Map JS API is not ready yet!');
        }
        if (!HeatmapOverlay._isExtended) {
            HeatmapOverlay._isExtended = true;
            inherits(HeatmapOverlay, BMap.Overlay, "HeatmapOverlay");
            var newHeatmap = new HeatmapOverlay(opts);
            this.__proto__ = newHeatmap.__proto__;
        }
        // HeatmapOverlay.prototype = new BMap.Overlay();
        this.conf = opts;
        this.heatmap = null;
        this.latlngs = [];
        this.bounds = null;
        this._moveendHandler = this._moveendHandler.bind(this);
    }

    HeatmapOverlay.prototype.initialize = function(map) {
        this._map = map;
        var el = document.createElement("div");
        el.style.position = "absolute";
        el.style.top = 0;
        el.style.left = 0;
        el.style.border = 0;
        el.style.width = this._map.getSize().width + "px";
        el.style.height = this._map.getSize().height + "px";
        this.conf.element = el;
        map.getPanes().mapPane.appendChild(el);
        this.heatmap = heatmapFactory.create(this.conf);
        this._div = el;
        return el;
    }

    HeatmapOverlay.prototype.draw = function() {
        var currentBounds = this._map.getBounds();

        if (currentBounds.equals(this.bounds)) {
            return;
        }
        this.bounds = currentBounds;

        var ne = this._map.pointToOverlayPixel(currentBounds.getNorthEast()),
            sw = this._map.pointToOverlayPixel(currentBounds.getSouthWest());
        if (!ne || !sw) {
            return
        }
        var topY = ne.y,
            leftX = sw.x,
            h = sw.y - ne.y,
            w = ne.x - sw.x;

        this.conf.element.style.left = leftX + 'px';
        this.conf.element.style.top = topY + 'px';
        this.conf.element.style.width = w + 'px';
        this.conf.element.style.height = h + 'px';
        this.heatmap.store.get("heatmap").resize();

        if (this.latlngs.length > 0) {
            this.heatmap.clear();

            var len = this.latlngs.length;
            var d = {
                max: this.heatmap.store.max,
                data: []
            };

            while (len--) {
                var latlng = this.latlngs[len].latlng;

                if (!currentBounds.containsPoint(latlng)) {
                    continue;
                }

                var divPixel = this._map.pointToOverlayPixel(latlng),
                    screenPixel = new BMap.Pixel(divPixel.x - leftX, divPixel.y - topY);
                var roundedPoint = this.pixelTransform(screenPixel);
                d.data.push({
                    x: roundedPoint.x,
                    y: roundedPoint.y,
                    count: this.latlngs[len].c
                });
            }
            this.heatmap.store.setDataSet(d);
        }
    }

    HeatmapOverlay.prototype.pixelTransform = function(p) {
        var w = this.heatmap.get("width"),
            h = this.heatmap.get("height");

        while (p.x < 0) {
            p.x += w;
        }

        while (p.x > w) {
            p.x -= w;
        }

        while (p.y < 0) {
            p.y += h;
        }

        while (p.y > h) {
            p.y -= h;
        }

        p.x = (p.x >> 0);
        p.y = (p.y >> 0);

        return p;
    }

    HeatmapOverlay.prototype._moveendHandler = function (e) {
        this.setDataSet(this._data);
        delete this._data;
        this._map.removeEventListener('moveend', this._moveendHandler);
    }

    HeatmapOverlay.prototype.setDataSet = function(data) {
        if (!this._map) {
            return;
        }
        var currentBounds = this._map.getBounds();

        var ne = this._map.pointToOverlayPixel(currentBounds.getNorthEast()),
            sw = this._map.pointToOverlayPixel(currentBounds.getSouthWest());
        if (!ne || !sw) {
            this._data = data
            this._map.addEventListener('moveend', this._moveendHandler);
        }

        var mapdata = {
            max: data.max,
            data: []
        };
        var d = data.data,
            dlen = d.length;


        this.latlngs = [];

        while (dlen--) {
            var latlng = new BMap.Point(d[dlen].lng, d[dlen].lat);
            this.latlngs.push({
                latlng: latlng,
                c: d[dlen].count
            });

            if (!currentBounds.containsPoint(latlng)) {
                continue;
            }

            var divPixel = this._map.pointToOverlayPixel(latlng),
                leftX = this._map.pointToOverlayPixel(currentBounds.getSouthWest()).x,
                topY = this._map.pointToOverlayPixel(currentBounds.getNorthEast()).y,
                screenPixel = new BMap.Pixel(divPixel.x - leftX, divPixel.y - topY);
            var point = this.pixelTransform(screenPixel);

            mapdata.data.push({
                x: point.x,
                y: point.y,
                count: d[dlen].count
            });
        }
        this.heatmap.clear();
        this.heatmap.store.setDataSet(mapdata);
    }

    HeatmapOverlay.prototype.addDataPoint = function(lng, lat, count) {
        var latlng = new BMap.Point(lng, lat),
            point = this.pixelTransform(this._map.pointToOverlayPixel(latlng));

        this.heatmap.store.addDataPoint(point.x, point.y, count);
        this.latlngs.push({
            latlng: latlng,
            c: count
        });
    }

    HeatmapOverlay.prototype.toggle = function() {
        this.heatmap.toggleDisplay();
    }

    return HeatmapOverlay;
});


/***/ }),

/***/ "5899":
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "58a8":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");
var whitespaces = __webpack_require__("5899");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "6160":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-city-list',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  props: {
    anchor: {
      type: String
    },
    offset: {
      type: Object
    }
  },
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset;
      var self = this;
      this.originInstance = new BMap.CityListControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createSize */ "e"])(BMap, offset),
        onChangeBefore: function onChangeBefore() {
          self.$emit('changeBefore');
        },
        onChangeAfter: function onChangeAfter() {
          self.$emit('changeAfter');
        }
      });
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6a21":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-scale',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  props: {
    anchor: {
      type: String
    },
    offset: {
      type: Object
    }
  },
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset;
      this.originInstance = new BMap.ScaleControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createSize */ "e"])(BMap, offset)
      });
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "7156":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var setPrototypeOf = __webpack_require__("d2bb");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "76f3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return createPoint; });
/* unused harmony export createPixel */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return createSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createLabel; });
function createPoint (BMap, options = {}) {
  const {lng, lat} = options
  return new BMap.Point(lng, lat)
}

function createPixel (BMap, options = {}) {
  const {x, y} = options
  return new BMap.Pixel(x, y)
}

function createBounds (BMap, options = {}) {
  const {sw, ne} = options
  return new BMap.Bounds(createPoint(BMap, sw), createPoint(BMap, ne))
}

function createSize (BMap, options = {}) {
  const {width, height} = options
  return new BMap.Size(width, height)
}

function createIcon (BMap, options = {}) {
  const {url, size, opts = {}} = options
  return new BMap.Icon(url, createSize(BMap, size), {
    anchor: opts.anchor && createSize(BMap, opts.anchor),
    imageSize: opts.imageSize && createSize(BMap, opts.imageSize),
    imageOffset: opts.imageOffset && createSize(BMap, opts.imageOffset),
    infoWindowAnchor: opts.infoWindowAnchor && createSize(BMap, opts.infoWindowAnchor),
    printImageUrl: opts.printImageUrl
  })
}

function createLabel (BMap, options = {}) {
  const {content, opts} = options
  return new BMap.Label(content, {
    offset: opts.offset && createSize(BMap, opts.offset),
    position: opts.position && createPoint(BMap, opts.position),
    enableMassClear: opts.enableMassClear
  })
}


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7a58":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");


//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-control',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  props: ['anchor', 'offset'],
  watch: {
    anchor: function anchor(val) {
      this.originInstance.setAnchor(val);
    },
    offset: function offset(val) {
      this.originInstance.setOffset(val);
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset,
          $el = this.$el;

      var Control = function Control() {
        this.defaultAnchor = global[anchor || 'BMAP_ANCHOR_TOP_LEFT'];
        this.defaultOffset = Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createSize */ "e"])(BMap, offset);
      };

      Control.prototype = new BMap.Control();

      Control.prototype.initialize = function (map) {
        return map.getContainer().appendChild($el);
      };

      this.originInstance = new Control(anchor, offset);
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7b51":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("a9e3");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("2da4");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("4fab");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("76f3");



//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-info-window',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])('overlay')],
  props: {
    show: {
      type: Boolean
    },
    position: {
      type: Object
    },
    title: {
      type: String
    },
    width: {
      type: Number
    },
    height: {
      type: Number
    },
    maxWidth: {
      type: Number
    },
    offset: {
      type: Object
    },
    maximize: {
      type: Boolean
    },
    autoPan: {
      type: Boolean
    },
    closeOnClick: {
      type: Boolean,
      default: true
    },
    message: {
      type: String
    }
  },
  watch: {
    show: function show(val) {
      val ? this.openInfoWindow() : this.closeInfoWindow();
    },
    'position.lng': function positionLng(val, oldVal) {
      this.reload();
    },
    'position.lat': function positionLat(val, oldVal) {
      this.reload();
    },
    'offset.width': function offsetWidth(val, oldVal) {
      this.reload();
    },
    'offset.height': function offsetHeight(val) {
      this.reload();
    },
    maxWidth: function maxWidth() {
      this.reload();
    },
    width: function width(val) {
      this.originInstance.setWidth(val);
    },
    height: function height(val) {
      this.originInstance.setHeight(val);
    },
    title: function title(val) {
      this.originInstance.setTitle(val);
    },
    maximize: function maximize(val) {
      val ? this.originInstance.enableMaximize() : this.originInstance.disableMaximize();
    },
    autoPan: function autoPan(val) {
      val ? this.originInstance.enableAutoPan() : this.originInstance.disableAutoPan();
    },
    closeOnClick: function closeOnClick(val) {
      val ? this.originInstance.enableCloseOnClick() : this.originInstance.disableCloseOnClick();
    }
  },
  methods: {
    redraw: function redraw() {
      this.originInstance.redraw();
    },
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          show = this.show,
          title = this.title,
          width = this.width,
          height = this.height,
          maxWidth = this.maxWidth,
          offset = this.offset,
          autoPan = this.autoPan,
          closeOnClick = this.closeOnClick,
          message = this.message,
          maximize = this.maximize,
          bindObserver = this.bindObserver,
          $parent = this.$parent;
      var $content = this.$el;
      var overlay = new BMap.InfoWindow($content, {
        width: width,
        height: height,
        title: title,
        maxWidth: maxWidth,
        offset: Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_5__[/* createSize */ "e"])(BMap, offset),
        enableAutoPan: autoPan,
        enableCloseOnClick: closeOnClick,
        enableMessage: typeof message === 'undefined',
        message: message
      });
      maximize ? overlay.enableMaximize() : overlay.disableMaximize();
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"].call(this, overlay);
      this.originInstance = overlay;
      overlay.redraw();
      [].forEach.call($content.querySelectorAll('img'), function ($img) {
        $img.onload = function () {
          return overlay.redraw();
        };
      });
      bindObserver();
      this.$container = $parent.originInstance && $parent.originInstance.openInfoWindow ? $parent.originInstance : map;
      show && this.openInfoWindow();
    },
    bindObserver: function bindObserver() {
      var MutationObserver = global.MutationObserver;

      if (!MutationObserver) {
        return;
      }

      var $el = this.$el,
          originInstance = this.originInstance;
      this.observer = new MutationObserver(function (mutations) {
        return originInstance.redraw();
      });
      this.observer.observe($el, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    },
    openInfoWindow: function openInfoWindow() {
      var BMap = this.BMap,
          $container = this.$container,
          position = this.position,
          originInstance = this.originInstance;
      $container.openInfoWindow(originInstance, Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_5__[/* createPoint */ "d"])(BMap, position));
    },
    closeInfoWindow: function closeInfoWindow() {
      this.$container.closeInfoWindow(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7f25":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a9e3");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("d3b7");
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("e6cf");
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_shiliangl_vue_library_dev_cube_map_draw_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("b85c");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("4fab");
/* harmony import */ var _base_util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("33d3");





//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-map',
  props: {
    ak: {
      type: String
    },
    center: {
      type: [Object, String]
    },
    zoom: {
      type: Number
    },
    minZoom: {
      type: Number
    },
    maxZoom: {
      type: Number
    },
    highResolution: {
      type: Boolean,
      default: true
    },
    mapClick: {
      type: Boolean,
      default: true
    },
    mapType: {
      type: String
    },
    dragging: {
      type: Boolean,
      default: true
    },
    scrollWheelZoom: {
      type: Boolean,
      default: false
    },
    doubleClickZoom: {
      type: Boolean,
      default: true
    },
    keyboard: {
      type: Boolean,
      default: true
    },
    inertialDragging: {
      type: Boolean,
      default: true
    },
    continuousZoom: {
      type: Boolean,
      default: true
    },
    pinchToZoom: {
      type: Boolean,
      default: true
    },
    autoResize: {
      type: Boolean,
      default: true
    },
    theme: {
      type: Array
    },
    mapStyle: {
      type: Object
    }
  },
  watch: {
    center: function center(val, oldVal) {
      var map = this.map,
          zoom = this.zoom;

      if (Object(_base_util_js__WEBPACK_IMPORTED_MODULE_6__[/* checkType */ "a"])(val) === 'String' && val !== oldVal) {
        map.centerAndZoom(val, zoom);
      }
    },
    'center.lng': function centerLng(val, oldVal) {
      var BMap = this.BMap,
          map = this.map,
          zoom = this.zoom,
          center = this.center;

      if (val !== oldVal && val >= -180 && val <= 180) {
        map.centerAndZoom(new BMap.Point(val, center.lat), zoom);
      }
    },
    'center.lat': function centerLat(val, oldVal) {
      var BMap = this.BMap,
          map = this.map,
          zoom = this.zoom,
          center = this.center;

      if (val !== oldVal && val >= -74 && val <= 74) {
        map.centerAndZoom(new BMap.Point(center.lng, val), zoom);
      }
    },
    zoom: function zoom(val, oldVal) {
      var map = this.map;

      if (val !== oldVal && val >= 3 && val <= 19) {
        map.setZoom(val);
      }
    },
    minZoom: function minZoom(val) {
      var map = this.map;
      map.setMinZoom(val);
    },
    maxZoom: function maxZoom(val) {
      var map = this.map;
      map.setMaxZoom(val);
    },
    highResolution: function highResolution() {
      this.reset();
    },
    mapClick: function mapClick() {
      this.reset();
    },
    mapType: function mapType(val) {
      var map = this.map;
      map.setMapType(global[val]);
    },
    dragging: function dragging(val) {
      var map = this.map;
      val ? map.enableDragging() : map.disableDragging();
    },
    scrollWheelZoom: function scrollWheelZoom(val) {
      var map = this.map;
      val ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom();
    },
    doubleClickZoom: function doubleClickZoom(val) {
      var map = this.map;
      val ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom();
    },
    keyboard: function keyboard(val) {
      var map = this.map;
      val ? map.enableKeyboard() : map.disableKeyboard();
    },
    inertialDragging: function inertialDragging(val) {
      var map = this.map;
      val ? map.enableInertialDragging() : map.disableInertialDragging();
    },
    continuousZoom: function continuousZoom(val) {
      var map = this.map;
      val ? map.enableContinuousZoom() : map.disableContinuousZoom();
    },
    pinchToZoom: function pinchToZoom(val) {
      var map = this.map;
      val ? map.enablePinchToZoom() : map.disablePinchToZoom();
    },
    autoResize: function autoResize(val) {
      var map = this.map;
      val ? map.enableAutoResize() : map.disableAutoResize();
    },
    theme: function theme(val) {
      var map = this.map;
      map.setMapStyle({
        styleJson: val
      });
    },
    'mapStyle.features': {
      handler: function handler(val, oldVal) {
        var map = this.map,
            mapStyle = this.mapStyle;
        var style = mapStyle.style,
            styleJson = mapStyle.styleJson;
        map.setMapStyle({
          styleJson: styleJson,
          features: val,
          style: style
        });
      },
      deep: true
    },
    'mapStyle.style': function mapStyleStyle(val, oldVal) {
      var map = this.map,
          mapStyle = this.mapStyle;
      var features = mapStyle.features,
          styleJson = mapStyle.styleJson;
      map.setMapStyle({
        styleJson: styleJson,
        features: features,
        style: val
      });
    },
    'mapStyle.styleJson': {
      handler: function handler(val, oldVal) {
        var map = this.map,
            mapStyle = this.mapStyle;
        var features = mapStyle.features,
            style = mapStyle.style;
        map.setMapStyle({
          styleJson: val,
          features: features,
          style: style
        });
      },
      deep: true
    },
    mapStyle: function mapStyle(val) {
      var map = this.map,
          theme = this.theme;
      !theme && map.setMapStyle(val);
    }
  },
  methods: {
    setMapOptions: function setMapOptions() {
      var map = this.map,
          minZoom = this.minZoom,
          maxZoom = this.maxZoom,
          mapType = this.mapType,
          dragging = this.dragging,
          scrollWheelZoom = this.scrollWheelZoom,
          doubleClickZoom = this.doubleClickZoom,
          keyboard = this.keyboard,
          inertialDragging = this.inertialDragging,
          continuousZoom = this.continuousZoom,
          pinchToZoom = this.pinchToZoom,
          autoResize = this.autoResize;
      minZoom && map.setMinZoom(minZoom);
      maxZoom && map.setMaxZoom(maxZoom);
      mapType && map.setMapType(global[mapType]);
      dragging ? map.enableDragging() : map.disableDragging();
      scrollWheelZoom ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom();
      doubleClickZoom ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom();
      keyboard ? map.enableKeyboard() : map.disableKeyboard();
      inertialDragging ? map.enableInertialDragging() : map.disableInertialDragging();
      continuousZoom ? map.enableContinuousZoom() : map.disableContinuousZoom();
      pinchToZoom ? map.enablePinchToZoom() : map.disablePinchToZoom();
      autoResize ? map.enableAutoResize() : map.disableAutoResize();
    },
    init: function init(BMap) {
      if (this.map) {
        return;
      }

      var $el = this.$refs.view;

      var _iterator = Object(_Users_shiliangl_vue_library_dev_cube_map_draw_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(this.$slots.default || []),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var $node = _step.value;

          if ($node.componentOptions && $node.componentOptions.tag === 'bm-view') {
            this.hasBmView = true;
            $el = $node.elm;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var map = new BMap.Map($el, {
        enableHighResolution: this.highResolution,
        enableMapClick: this.mapClick
      });
      this.map = map;
      var setMapOptions = this.setMapOptions,
          zoom = this.zoom,
          getCenterPoint = this.getCenterPoint,
          theme = this.theme,
          mapStyle = this.mapStyle;
      theme ? map.setMapStyle({
        styleJson: theme
      }) : map.setMapStyle(mapStyle);
      setMapOptions();
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"].call(this, map); // 此处强行初始化一次地图 回避一个由于错误的 center 字符串导致初始化失败抛出的错误

      map.reset();
      map.centerAndZoom(getCenterPoint(), zoom);
      this.$emit('ready', {
        BMap: BMap,
        map: map
      }); // Debug
      // global.map = map
      // global.mapComponent = this
    },
    getCenterPoint: function getCenterPoint() {
      var center = this.center,
          BMap = this.BMap;

      switch (Object(_base_util_js__WEBPACK_IMPORTED_MODULE_6__[/* checkType */ "a"])(center)) {
        case 'String':
          return center;

        case 'Object':
          return new BMap.Point(center.lng, center.lat);

        default:
          return new BMap.Point();
      }
    },
    initMap: function initMap(BMap) {
      this.BMap = BMap;
      this.init(BMap);
    },
    getMapScript: function getMapScript() {
      if (!global.BMap) {
        var ak = this.ak || this._BMap().ak;

        global.BMap = {};
        global.BMap._preloader = new Promise(function (resolve, reject) {
          global._initBaiduMap = function () {
            resolve(global.BMap);
            global.document.body.removeChild($script);
            global.BMap._preloader = null;
            global._initBaiduMap = null;
          };

          var $script = document.createElement('script');
          global.document.body.appendChild($script);
          $script.src = "https://api.map.baidu.com/api?v=2.0&ak=".concat(ak, "&callback=_initBaiduMap");
        });
        return global.BMap._preloader;
      } else if (!global.BMap._preloader) {
        return Promise.resolve(global.BMap);
      } else {
        return global.BMap._preloader;
      }
    },
    reset: function reset() {
      var getMapScript = this.getMapScript,
          initMap = this.initMap;
      getMapScript().then(initMap);
    }
  },
  mounted: function mounted() {
    this.reset();
  },
  data: function data() {
    return {
      hasBmView: false
    };
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "8409":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("76f3");
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("2da4");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("4fab");







/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-overview-map',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])('control')],
  render: function render() {},
  props: {
    anchor: {
      type: String
    },
    offset: {
      type: Object
    },
    size: {
      type: Object
    },
    isOpen: {
      type: Boolean
    }
  },
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    },
    size: function size() {
      this.reload();
    },
    isOpen: function isOpen() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          isOpen = this.isOpen,
          size = this.size,
          offset = this.offset,
          anchor = this.anchor;
      var mapTypes = [];
      this.mapTypes && this.mapTypes.forEach(function (item) {
        mapTypes.push(global[item]);
      });
      this.originInstance = new BMap.OverviewMapControl({
        anchor: global[anchor],
        offset: Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createSize */ "e"])(BMap, offset),
        size: Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createSize */ "e"])(BMap, size),
        isOpen: isOpen
      });
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"].call(this, this.originInstance);
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "841c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var sameValue = __webpack_require__("129f");
var regExpExec = __webpack_require__("14c3");

// @@search logic
fixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible(this);
      var searcher = regexp == undefined ? undefined : regexp[SEARCH];
      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative(nativeSearch, regexp, this);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "857a":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

var quot = /"/g;

// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
// https://tc39.github.io/ecma262/#sec-createhtml
module.exports = function (string, tag, attribute, value) {
  var S = String(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "8aa5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "9263":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = String(str).slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9e9a":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("39ea");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("70bd97f1", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f7f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__("d039");

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s, f) {
  return RegExp(s, f);
}

exports.UNSUPPORTED_Y = fails(function () {
  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var re = RE('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = RE('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "a15b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IndexedObject = __webpack_require__("44ad");
var toIndexedObject = __webpack_require__("fc6a");
var arrayMethodIsStrict = __webpack_require__("a640");

var nativeJoin = [].join;

var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
  join: function join(separator) {
    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "a434":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toAbsoluteIndex = __webpack_require__("23cb");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var toObject = __webpack_require__("7b0b");
var arraySpeciesCreate = __webpack_require__("65f0");
var createProperty = __webpack_require__("8418");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
var USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a630":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var from = __webpack_require__("4df4");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a9e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var has = __webpack_require__("5135");
var classof = __webpack_require__("c6b6");
var inheritIfRequired = __webpack_require__("7156");
var toPrimitive = __webpack_require__("c04e");
var fails = __webpack_require__("d039");
var create = __webpack_require__("7c73");
var getOwnPropertyNames = __webpack_require__("241c").f;
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var defineProperty = __webpack_require__("9bf2").f;
var trim = __webpack_require__("58a8").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "abed":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("76f3");






/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-copyright',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])('control')],
  props: ['anchor', 'offset', 'copyright'],
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    },
    copyright: function copyright() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          offset = this.offset,
          anchor = this.anchor,
          updateCopyrightList = this.updateCopyrightList;
      this.originInstance = new BMap.CopyrightControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_5__[/* createSize */ "e"])(BMap, offset)
      });
      updateCopyrightList();
      map.addControl(this.originInstance);
    },
    updateCopyrightList: function updateCopyrightList() {
      var _this = this;

      var BMap = this.BMap,
          map = this.map;
      var _this$originInstance = this.originInstance,
          removeCopyright = _this$originInstance.removeCopyright,
          getCopyrightCollection = _this$originInstance.getCopyrightCollection;
      var copyrightList = getCopyrightCollection();
      copyrightList && copyrightList.forEach(function (item) {
        removeCopyright(item.id);
      });
      this.copyright && this.copyright.forEach(function (item) {
        var bounds = item.bounds ? new BMap.Bounds(new BMap.Point(item.bounds.sw.lng, item.bounds.sw.lat), new BMap.Point(item.bounds.ne.lng, item.bounds.ne.lat)) : map.getBounds();

        _this.originInstance.addCopyright({
          id: item.id,
          content: item.content,
          bounds: bounds
        });

        _this.originInstance.getCopyrightCollection();
      });
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "ac1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var exec = __webpack_require__("9263");

$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae40":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "af03":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
module.exports = function (METHOD_NAME) {
  return fails(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b0f5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a9e3");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("ac1f");
/* harmony import */ var core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("841c");
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("76f3");
/* harmony import */ var _base_util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("33d3");
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("2da4");




//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-driving',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])('search')],
  props: {
    location: {
      type: [Object, String]
    },
    start: {
      type: [Object, String]
    },
    end: {
      type: [Object, String]
    },
    startCity: {
      type: [String, Number]
    },
    endCity: {
      type: [String, Number]
    },
    waypoints: {
      type: Array
    },
    policy: {
      type: String
    },
    panel: {
      type: Boolean,
      default: true
    },
    autoViewport: {
      type: Boolean
    },
    selectFirstResult: {
      type: Boolean
    }
  },
  watch: {
    location: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            map = this.map;
        originInstance.setLocation(val || map);
      },
      deep: true
    },
    start: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            end = this.end,
            startCity = this.startCity,
            endCity = this.endCity,
            waypoints = this.waypoints,
            BMap = this.BMap,
            getWaypoints = this.getWaypoints;
        originInstance.search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, val), Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, end), {
          startCity: startCity,
          endCity: endCity,
          waypoints: getWaypoints(waypoints)
        });
      },
      deep: true
    },
    end: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            start = this.start,
            startCity = this.startCity,
            endCity = this.endCity,
            waypoints = this.waypoints,
            BMap = this.BMap,
            getWaypoints = this.getWaypoints;
        originInstance.search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, start), Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, val), {
          startCity: startCity,
          endCity: endCity,
          waypoints: getWaypoints(waypoints)
        });
      },
      deep: true
    },
    startCity: function startCity(val) {
      var originInstance = this.originInstance,
          start = this.start,
          end = this.end,
          endCity = this.endCity,
          waypoints = this.waypoints,
          getWaypoints = this.getWaypoints;
      originInstance.search(start, end, {
        val: val,
        endCity: endCity,
        waypoints: getWaypoints(waypoints)
      });
    },
    endCity: function endCity(val) {
      var originInstance = this.originInstance,
          start = this.start,
          end = this.end,
          startCity = this.startCity,
          waypoints = this.waypoints,
          getWaypoints = this.getWaypoints;
      originInstance.search(start, end, {
        startCity: startCity,
        val: val,
        waypoints: getWaypoints(waypoints)
      });
    },
    waypoints: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            start = this.start,
            end = this.end,
            startCity = this.startCity,
            endCity = this.endCity,
            getWaypoints = this.getWaypoints;
        originInstance.search(start, end, {
          startCity: startCity,
          endCity: endCity,
          waypoints: getWaypoints(val)
        });
      },
      deep: true
    },
    panel: function panel() {
      this.reload();
    },
    policy: function policy(val) {
      this.reload();
    },
    autoViewport: function autoViewport() {
      this.reload();
    },
    selectFirstResult: function selectFirstResult() {
      this.reload();
    },
    highlightMode: function highlightMode() {
      this.reload();
    }
  },
  methods: {
    search: function search(start, end, _ref) {
      var startCity = _ref.startCity,
          endCity = _ref.endCity,
          waypoints = _ref.waypoints;
      var originInstance = this.originInstance,
          getWaypoints = this.getWaypoints;
      originInstance.search(start, end, {
        startCity: startCity,
        endCity: endCity,
        waypoints: getWaypoints(waypoints)
      });
    },
    getWaypoints: function getWaypoints(waypoints) {
      var BMap = this.BMap;

      if (waypoints) {
        return waypoints.map(function (position) {
          return Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, position);
        });
      }
    },
    load: function load() {
      var instance = this;
      var map = this.map,
          BMap = this.BMap,
          location = this.location,
          policy = this.policy,
          selectFirstResult = this.selectFirstResult,
          autoViewport = this.autoViewport,
          highlightMode = this.highlightMode,
          search = this.search,
          start = this.start,
          end = this.end,
          startCity = this.startCity,
          endCity = this.endCity,
          waypoints = this.waypoints,
          originInstance = this.originInstance,
          getWaypoints = this.getWaypoints;

      var _location = location ? Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* isPoint */ "c"])(location) ? Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_4__[/* createPoint */ "d"])(BMap, location) : location : map;

      var route = this.originInstance = new BMap.DrivingRoute(_location, {
        renderOptions: {
          map: map,
          // panel: panel && this.$el,
          panel: this.$el,
          selectFirstResult: selectFirstResult,
          autoViewport: autoViewport,
          highlightMode: highlightMode
        },
        policy: global[policy],
        onSearchComplete: function onSearchComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('searchcomplete', e);
        },
        onMarkersSet: function onMarkersSet(e) {
          instance.$emit('markersset', e);
        },
        onInfoHtmlSet: function onInfoHtmlSet(e) {
          instance.$emit('infohtmlset', e);
        },
        onPolylinesSet: function onPolylinesSet(e) {
          instance.$emit('polylinesset', e);
        },
        onResultsHtmlSet: function onResultsHtmlSet(e) {
          instance.$emit('resultshtmlset', e);
        }
      });
      search(Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, start), Object(_base_util_js__WEBPACK_IMPORTED_MODULE_5__[/* getPosition */ "b"])(BMap, end), {
        startCity: startCity,
        endCity: endCity,
        waypoints: getWaypoints(waypoints)
      });
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "b575":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var classof = __webpack_require__("c6b6");
var macrotask = __webpack_require__("2cf4").set;
var IS_IOS = __webpack_require__("1cdc");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  } else if (MutationObserver && !IS_IOS) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "b5c1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("18a5");
/* harmony import */ var core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_anchor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2da4");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bm-navigation',
  render: function render() {},
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])('control')],
  props: {
    anchor: {
      type: String
    },
    offset: {
      type: Object
    },
    type: {
      type: String
    },
    showZoomInfo: {
      type: Boolean
    },
    enableGeolocation: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    anchor: function anchor() {
      this.reload();
    },
    offset: function offset() {
      this.reload();
    },
    type: function type() {
      this.reload();
    },
    showZoomInfo: function showZoomInfo() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          anchor = this.anchor,
          offset = this.offset,
          type = this.type,
          showZoomInfo = this.showZoomInfo,
          enableGeolocation = this.enableGeolocation;
      this.originInstance = new BMap.NavigationControl({
        anchor: global[anchor],
        offset: offset && Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createSize */ "e"])(BMap, offset),
        type: global[type],
        showZoomInfo: showZoomInfo,
        enableGeolocation: enableGeolocation
      });
      map.addControl(this.originInstance);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b680":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toInteger = __webpack_require__("a691");
var thisNumberValue = __webpack_require__("408a");
var repeat = __webpack_require__("1148");
var fails = __webpack_require__("d039");

var nativeToFixed = 1.0.toFixed;
var floor = Math.floor;

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var FORCED = nativeToFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToFixed.call({});
});

// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  // eslint-disable-next-line max-statements
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toInteger(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    var multiply = function (n, c) {
      var index = -1;
      var c2 = c;
      while (++index < 6) {
        c2 += n * data[index];
        data[index] = c2 % 1e7;
        c2 = floor(c2 / 1e7);
      }
    };

    var divide = function (n) {
      var index = 6;
      var c = 0;
      while (--index >= 0) {
        c += data[index];
        data[index] = floor(c / n);
        c = (c % n) * 1e7;
      }
    };

    var dataToString = function () {
      var index = 6;
      var s = '';
      while (--index >= 0) {
        if (s !== '' || index === 0 || data[index] !== 0) {
          var t = String(data[index]);
          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;
        }
      } return s;
    };

    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        result = dataToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        result = dataToString() + repeat.call('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat.call('0', fractDigits - k) + result
        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ }),

/***/ "b85c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _createForOfIteratorHelper; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("a4d3");
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("e01a");
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("d28b");
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("e260");
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("d3b7");
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("3ca3");
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("ddb0");
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("06c5");








function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"])(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

/***/ }),

/***/ "bb2f":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "bfa3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _base_mixins_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2da4");
/* harmony import */ var _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("4fab");
/* harmony import */ var _base_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("76f3");




/* harmony default export */ __webpack_exports__["a"] = ({
  render: function render() {},
  name: 'bm-point-collection',
  mixins: [Object(_base_mixins_common_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])('overlay')],
  props: {
    points: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    shape: {
      type: String,
      default: 'BMAP_POINT_SHAPE_CIRCLE'
    },
    color: {
      type: String
    },
    size: {
      type: String,
      default: 'BMAP_POINT_SIZE_NORMAL'
    }
  },
  watch: {
    shape: function shape(val) {
      var originInstance = this.originInstance,
          color = this.color,
          size = this.size;
      originInstance.setStyles({
        shape: global[val],
        color: color,
        size: global[size]
      });
    },
    size: function size(val) {
      var originInstance = this.originInstance,
          color = this.color,
          shape = this.shape;
      originInstance.setStyles({
        shape: global[shape],
        color: color,
        size: global[val]
      });
    },
    color: function color(val) {
      var originInstance = this.originInstance,
          shape = this.shape,
          size = this.size;
      originInstance.setStyles({
        shape: global[shape],
        color: val,
        size: global[size]
      });
    },
    points: {
      deep: true,
      handler: function handler(val) {
        var originInstance = this.originInstance;
        originInstance.clear();
        originInstance.setPoints(val);
      }
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          points = this.points,
          shape = this.shape,
          color = this.color,
          size = this.size;
      var overlay = this.originInstance = new BMap.PointCollection(points.map(function (p) {
        return Object(_base_factory_js__WEBPACK_IMPORTED_MODULE_3__[/* createPoint */ "d"])(BMap, p);
      }), {
        shape: global[shape],
        color: color,
        size: global[size]
      });
      _base_bindEvent_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].call(this, overlay);
      map.addOverlay(overlay);
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c296":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var __commonjs_global = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this;
function __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports, __commonjs_global), module.exports; }


var index$1 = __commonjs(function (module, exports, global) {
(function (root, factory) {  
    if (typeof exports === 'object') {  
        module.exports = factory();
    } else if (true) {  
        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));  
    } else {}  
})(__commonjs_global, function() {
    var T,
    baidu = T = baidu || {version: "1.3.8"}; 
    var context = {};
    //提出guid，防止在与老版本Tangram混用时
    //在下一行错误的修改context[undefined]
    baidu.guid = "$BAIDU$";

    //Tangram可能被放在闭包中
    //一些页面级别唯一的属性，需要挂载在context[baidu.guid]上
    context[baidu.guid] = context[baidu.guid] || {};

    /**         
    * @ignore
    * @namespace baidu.dom 操作dom的方法。
    */
    baidu.dom = baidu.dom || {};

    
    /**
     * 从文档中获取指定的DOM元素
     * @name baidu.dom.g
     * @function
     * @grammar baidu.dom.g(id)
     * @param {string|HTMLElement} id 元素的id或DOM元素
     * @shortcut g,T.G
     * @meta standard
     * @see baidu.dom.q
     *             
     * @returns {HTMLElement|null} 获取的元素，查找不到时返回null,如果参数不合法，直接返回参数
     */
    baidu.dom.g = function (id) {
        if ('string' == typeof id || id instanceof String) {
            return document.getElementById(id);
        } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) {
            return id;
        }
        return null;
    };

    // 声明快捷方法
    baidu.g = baidu.G = baidu.dom.g;

    /**
     * 获取目标元素所属的document对象
     * @name baidu.dom.getDocument
     * @function
     * @grammar baidu.dom.getDocument(element)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @meta standard
     * @see baidu.dom.getWindow
     *             
     * @returns {HTMLDocument} 目标元素所属的document对象
     */
    baidu.dom.getDocument = function (element) {
        element = baidu.dom.g(element);
        return element.nodeType == 9 ? element : element.ownerDocument || element.document;
    };

    /**
         * @ignore
     * @namespace baidu.lang 对语言层面的封装，包括类型判断、模块扩展、继承基类以及对象自定义事件的支持。
    */
    baidu.lang = baidu.lang || {};

    /**
     * 判断目标参数是否string类型或String对象
     * @name baidu.lang.isString
     * @function
     * @grammar baidu.lang.isString(source)
     * @param {Any} source 目标参数
     * @shortcut isString
     * @meta standard
     * @see baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate
     *             
     * @returns {boolean} 类型判断结果
     */
    baidu.lang.isString = function (source) {
        return '[object String]' == Object.prototype.toString.call(source);
    };

    // 声明快捷方法
    baidu.isString = baidu.lang.isString;

    /**
     * 从文档中获取指定的DOM元素
     * **内部方法**
     * 
     * @param {string|HTMLElement} id 元素的id或DOM元素
     * @meta standard
     * @return {HTMLElement} DOM元素，如果不存在，返回null，如果参数不合法，直接返回参数
     */
    baidu.dom._g = function (id) {
        if (baidu.lang.isString(id)) {
            return document.getElementById(id);
        }
        return id;
    };

    // 声明快捷方法
    baidu._g = baidu.dom._g;

    /**
     * @ignore
     * @namespace baidu.browser 判断浏览器类型和特性的属性。
     */
    baidu.browser = baidu.browser || {};

    if (/msie (\d+\.\d)/i.test(navigator.userAgent)) {
        //IE 8下，以documentMode为准
        //在百度模板中，可能会有$，防止冲突，将$1 写成 \x241
        /**
         * 判断是否为ie浏览器
         * @property ie ie版本号
         * @grammar baidu.browser.ie
         * @meta standard
         * @shortcut ie
         * @see baidu.browser.firefox,baidu.browser.safari,baidu.browser.opera,baidu.browser.chrome,baidu.browser.maxthon 
         */
        baidu.browser.ie = baidu.ie = document.documentMode || + RegExp['\x241'];
    }

    /**
     * 获取目标元素的computed style值。如果元素的样式值不能被浏览器计算，则会返回空字符串（IE）
     *
     * @author berg
     * @name baidu.dom.getComputedStyle
     * @function
     * @grammar baidu.dom.getComputedStyle(element, key)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @param {string} key 要获取的样式名
     *
     * @see baidu.dom.getStyle
     *             
     * @returns {string} 目标元素的computed style值
     */

    baidu.dom.getComputedStyle = function(element, key){
        element = baidu.dom._g(element);
        var doc = baidu.dom.getDocument(element),
            styles;
        if (doc.defaultView && doc.defaultView.getComputedStyle) {
            styles = doc.defaultView.getComputedStyle(element, null);
            if (styles) {
                return styles[key] || styles.getPropertyValue(key);
            }
        }
        return ''; 
    };

    /**
     * 提供给setStyle与getStyle使用
     */
    baidu.dom._styleFixer = baidu.dom._styleFixer || {};

    /**
     * 提供给setStyle与getStyle使用
     */
    baidu.dom._styleFilter = baidu.dom._styleFilter || [];

    /**
     * 为获取和设置样式的过滤器
     * @private
     * @meta standard
     */
    baidu.dom._styleFilter.filter = function (key, value, method) {
        for (var i = 0, filters = baidu.dom._styleFilter, filter; filter = filters[i]; i++) {
            if (filter = filter[method]) {
                value = filter(key, value);
            }
        }
        return value;
    };

    /**
         * @ignore
     * @namespace baidu.string 操作字符串的方法。
     */
    baidu.string = baidu.string || {};

    /**
     * 将目标字符串进行驼峰化处理
     * @name baidu.string.toCamelCase
     * @function
     * @grammar baidu.string.toCamelCase(source)
     * @param {string} source 目标字符串
     * @remark
     * 支持单词以“-_”分隔
     * @meta standard
     *             
     * @returns {string} 驼峰化处理后的字符串
     */
    baidu.string.toCamelCase = function (source) {
        //提前判断，提高getStyle等的效率 thanks xianwei
        if (source.indexOf('-') < 0 && source.indexOf('_') < 0) {
            return source;
        }
        return source.replace(/[-_][^-_]/g, function (match) {
            return match.charAt(1).toUpperCase();
        });
    };

    /**
     * 获取目标元素的样式值
     * @name baidu.dom.getStyle
     * @function
     * @grammar baidu.dom.getStyle(element, key)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @param {string} key 要获取的样式名
     * @remark
     * 
     * 为了精简代码，本模块默认不对任何浏览器返回值进行归一化处理（如使用getStyle时，不同浏览器下可能返回rgb颜色或hex颜色），也不会修复浏览器的bug和差异性（如设置IE的float属性叫styleFloat，firefox则是cssFloat）。<br />
     * baidu.dom._styleFixer和baidu.dom._styleFilter可以为本模块提供支持。<br />
     * 其中_styleFilter能对颜色和px进行归一化处理，_styleFixer能对display，float，opacity，textOverflow的浏览器兼容性bug进行处理。	
     * @shortcut getStyle
     * @meta standard
     * @see baidu.dom.setStyle,baidu.dom.setStyles, baidu.dom.getComputedStyle
     *             
     * @returns {string} 目标元素的样式值
     */
    baidu.dom.getStyle = function (element, key) {
        var dom = baidu.dom;

        element = dom.g(element);
        key = baidu.string.toCamelCase(key);
        //computed style, then cascaded style, then explicitly set style.
        var value = element.style[key] ||
                    (element.currentStyle ? element.currentStyle[key] : "") || 
                    dom.getComputedStyle(element, key);

        // 在取不到值的时候，用fixer进行修正
        if (!value) {
            var fixer = dom._styleFixer[key];
            if(fixer){
                value = fixer.get ? fixer.get(element) : baidu.dom.getStyle(element, fixer);
            }
        }

        /* 检查结果过滤器 */
        if (fixer = dom._styleFilter) {
            value = fixer.filter(key, value, 'get');
        }

        return value;
    };

    // 声明快捷方法
    baidu.getStyle = baidu.dom.getStyle;


    if (/opera\/(\d+\.\d)/i.test(navigator.userAgent)) {
    /**
     * 判断是否为opera浏览器
     * @property opera opera版本号
     * @grammar baidu.browser.opera
     * @meta standard
     * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.safari,baidu.browser.chrome 
     */
        baidu.browser.opera = + RegExp['\x241'];
    }

    /**
     * 判断是否为webkit内核
     * @property isWebkit 
     * @grammar baidu.browser.isWebkit
     * @meta standard
     * @see baidu.browser.isGecko
     */
    baidu.browser.isWebkit = /webkit/i.test(navigator.userAgent);

    /**
     * 判断是否为gecko内核
     * @property isGecko 
     * @grammar baidu.browser.isGecko
     * @meta standard
     * @see baidu.browser.isWebkit
     */
    baidu.browser.isGecko = /gecko/i.test(navigator.userAgent) && !/like gecko/i.test(navigator.userAgent);

    /**
     * 判断是否严格标准的渲染模式
     * @property isStrict 
     * @grammar baidu.browser.isStrict
     * @meta standard
     */
    baidu.browser.isStrict = document.compatMode == "CSS1Compat";

    /**
     * 获取目标元素相对于整个文档左上角的位置
     * @name baidu.dom.getPosition
     * @function
     * @grammar baidu.dom.getPosition(element)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @meta standard
     *             
     * @returns {Object} 目标元素的位置，键值为top和left的Object。
     */
    baidu.dom.getPosition = function (element) {
        element = baidu.dom.g(element);
        var doc = baidu.dom.getDocument(element), 
            browser = baidu.browser,
            getStyle = baidu.dom.getStyle,
        // Gecko 1.9版本以下用getBoxObjectFor计算位置
        // 但是某些情况下是有bug的
        // 对于这些有bug的情况
        // 使用递归查找的方式
            BUGGY_GECKO_BOX_OBJECT = browser.isGecko > 0 && 
                                        doc.getBoxObjectFor &&
                                        getStyle(element, 'position') == 'absolute' &&
                                        (element.style.top === '' || element.style.left === ''),
            pos = {"left":0,"top":0},
            viewport = (browser.ie && !browser.isStrict) ? doc.body : doc.documentElement,
            parent,
            box;

        if(element == viewport){
            return pos;
        }

        if(element.getBoundingClientRect){ // IE and Gecko 1.9+
    
            //当HTML或者BODY有border width时, 原生的getBoundingClientRect返回值是不符合预期的
            //考虑到通常情况下 HTML和BODY的border只会设成0px,所以忽略该问题.
            box = element.getBoundingClientRect();

            pos.left = Math.floor(box.left) + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft);
            pos.top  = Math.floor(box.top)  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop);
    
            // IE会给HTML元素添加一个border，默认是medium（2px）
            // 但是在IE 6 7 的怪异模式下，可以被html { border: 0; } 这条css规则覆盖
            // 在IE7的标准模式下，border永远是2px，这个值通过clientLeft 和 clientTop取得
            // 但是。。。在IE 6 7的怪异模式，如果用户使用css覆盖了默认的medium
            // clientTop和clientLeft不会更新
            pos.left -= doc.documentElement.clientLeft;
            pos.top  -= doc.documentElement.clientTop;
    
            var htmlDom = doc.body,
                // 在这里，不使用element.style.borderLeftWidth，只有computedStyle是可信的
                htmlBorderLeftWidth = parseInt(getStyle(htmlDom, 'borderLeftWidth')),
                htmlBorderTopWidth = parseInt(getStyle(htmlDom, 'borderTopWidth'));
            if(browser.ie && !browser.isStrict){
                pos.left -= isNaN(htmlBorderLeftWidth) ? 2 : htmlBorderLeftWidth;
                pos.top  -= isNaN(htmlBorderTopWidth) ? 2 : htmlBorderTopWidth;
            }
        } else { 
            // safari/opera/firefox
            parent = element;

            do {
                pos.left += parent.offsetLeft;
                pos.top  += parent.offsetTop;
    
                // safari里面，如果遍历到了一个fixed的元素，后面的offset都不准了
                if (browser.isWebkit > 0 && getStyle(parent, 'position') == 'fixed') {
                    pos.left += doc.body.scrollLeft;
                    pos.top  += doc.body.scrollTop;
                    break;
                }
        
                parent = parent.offsetParent;
            } while (parent && parent != element);

            // 对body offsetTop的修正
            if(browser.opera > 0 || (browser.isWebkit > 0 && getStyle(element, 'position') == 'absolute')){
                pos.top  -= doc.body.offsetTop;
            }

            // 计算除了body的scroll
            parent = element.offsetParent;
            while (parent && parent != doc.body) {
                pos.left -= parent.scrollLeft;
                // see https://bugs.opera.com/show_bug.cgi?id=249965
                if (!browser.opera || parent.tagName != 'TR') {
                    pos.top -= parent.scrollTop;
                }
                parent = parent.offsetParent;
            }
        }

        return pos;
    };

    /**
     * @ignore
     * @namespace baidu.event 屏蔽浏览器差异性的事件封装。
     * @property target 	事件的触发元素
     * @property pageX 		鼠标事件的鼠标x坐标
     * @property pageY 		鼠标事件的鼠标y坐标
     * @property keyCode 	键盘事件的键值
     */
    baidu.event = baidu.event || {};

    /**
     * 事件监听器的存储表
     * @private
     * @meta standard
     */
    baidu.event._listeners = baidu.event._listeners || [];

    /**
     * 为目标元素添加事件监听器
     * @name baidu.event.on
     * @function
     * @grammar baidu.event.on(element, type, listener)
     * @param {HTMLElement|string|window} element 目标元素或目标元素id
     * @param {string} type 事件类型
     * @param {Function} listener 需要添加的监听器
     * @remark
     * 
    1. 不支持跨浏览器的鼠标滚轮事件监听器添加<br>
    2. 改方法不为监听器灌入事件对象，以防止跨iframe事件挂载的事件对象获取失败

        * @shortcut on
        * @meta standard
        * @see baidu.event.un
        *             
        * @returns {HTMLElement|window} 目标元素
        */
    baidu.event.on = function (element, type, listener) {
        type = type.replace(/^on/i, '');
        element = baidu.dom._g(element);

        var realListener = function (ev) {
                // 1. 这里不支持EventArgument,  原因是跨frame的事件挂载
                // 2. element是为了修正this
                listener.call(element, ev);
            },
            lis = baidu.event._listeners,
            filter = baidu.event._eventFilter,
            afterFilter,
            realType = type;
        type = type.toLowerCase();
        // filter过滤
        if(filter && filter[type]){
            afterFilter = filter[type](element, type, realListener);
            realType = afterFilter.type;
            realListener = afterFilter.listener;
        }

        // 事件监听器挂载
        if (element.addEventListener) {
            element.addEventListener(realType, realListener, false);
        } else if (element.attachEvent) {
            element.attachEvent('on' + realType, realListener);
        }

        // 将监听器存储到数组中
        lis[lis.length] = [element, type, listener, realListener, realType];
        return element;
    };

    // 声明快捷方法
    baidu.on = baidu.event.on;

    /**
     * 返回一个当前页面的唯一标识字符串。
     * @name baidu.lang.guid
     * @function
     * @grammar baidu.lang.guid()
     * @version 1.1.1
     * @meta standard
     *             
     * @returns {String} 当前页面的唯一标识字符串
     */

    (function(){
        //不直接使用window，可以提高3倍左右性能
        var guid = context[baidu.guid];

        baidu.lang.guid = function() {
            return "TANGRAM__" + (guid._counter ++).toString(36);
        };

        guid._counter = guid._counter || 1;
    })();

    /**
     * 所有类的实例的容器
     * key为每个实例的guid
     * @meta standard
     */

    context[baidu.guid]._instances = context[baidu.guid]._instances || {};

    /**
     * 判断目标参数是否为function或Function实例
     * @name baidu.lang.isFunction
     * @function
     * @grammar baidu.lang.isFunction(source)
     * @param {Any} source 目标参数
     * @version 1.2
     * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate
     * @meta standard
     * @returns {boolean} 类型判断结果
     */
    baidu.lang.isFunction = function (source) {
        // chrome下,'function' == typeof /a/ 为true.
        return '[object Function]' == Object.prototype.toString.call(source);
    };

    /**
     *    
     * @ignore
     * @class  Tangram继承机制提供的一个基类，用户可以通过继承baidu.lang.Class来获取它的属性及方法。
     * @name 	baidu.lang.Class
     * @grammar baidu.lang.Class(guid)
     * @param 	{string}	guid	对象的唯一标识
     * @meta standard
     * @remark baidu.lang.Class和它的子类的实例均包含一个全局唯一的标识guid。guid是在构造函数中生成的，因此，继承自baidu.lang.Class的类应该直接或者间接调用它的构造函数。<br>baidu.lang.Class的构造函数中产生guid的方式可以保证guid的唯一性，及每个实例都有一个全局唯一的guid。
     * @meta standard
     * @see baidu.lang.inherits,baidu.lang.Event
     */
    baidu.lang.Class = function(guid) {
        this.guid = guid || baidu.lang.guid();
        context[baidu.guid]._instances[this.guid] = this;
    };
    context[baidu.guid]._instances = context[baidu.guid]._instances || {};

    /**
     * 释放对象所持有的资源，主要是自定义事件。
     * @name dispose
     * @grammar obj.dispose()
     */
    baidu.lang.Class.prototype.dispose = function(){
        delete context[baidu.guid]._instances[this.guid];

        for(var property in this){
            if (!baidu.lang.isFunction(this[property])) {
                delete this[property];
            }
        }
        this.disposed = true;
    };

    /**
     * 重载了默认的toString方法，使得返回信息更加准确一些。
     * @return {string} 对象的String表示形式
     */
    baidu.lang.Class.prototype.toString = function(){
        return "[object " + (this._className || "Object" ) + "]";
    };

    /**
     * @ignore
     * @class   自定义的事件对象。
     * @name 	baidu.lang.Event
     * @grammar baidu.lang.Event(type[, target])
     * @param 	{string} type	 事件类型名称。为了方便区分事件和一个普通的方法，事件类型名称必须以"on"(小写)开头。
     * @param 	{Object} [target]触发事件的对象
     * @meta standard
     * @remark 引入该模块，会自动为Class引入3个事件扩展方法：addEventListener、removeEventListener和dispatchEvent。
     * @meta standard
     * @see baidu.lang.Class
     */
    baidu.lang.Event = function (type, target) {
        this.type = type;
        this.returnValue = true;
        this.target = target || null;
        this.currentTarget = null;
    };

    /**
     * 注册对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.addEventListener(type, handler[, key])
     * @param 	{string}   type         自定义事件的名称
     * @param 	{Function} handler      自定义事件被触发时应该调用的回调函数
     * @param 	{string}   [key]		为事件监听函数指定的名称，可在移除时使用。如果不提供，方法会默认为它生成一个全局唯一的key。
     * @remark 	事件类型区分大小写。如果自定义事件名称不是以小写"on"开头，该方法会给它加上"on"再进行判断，即"click"和"onclick"会被认为是同一种事件。 
     */
    baidu.lang.Class.prototype.addEventListener = function (type, handler, key) {
        if (!baidu.lang.isFunction(handler)) {
            return;
        }

        !this.__listeners && (this.__listeners = {});

        var t = this.__listeners, id;
        if (typeof key == "string" && key) {
            if (/[^\w\-]/.test(key)) {
                throw("nonstandard key:" + key);
            } else {
                handler.hashCode = key; 
                id = key;
            }
        }
        type.indexOf("on") != 0 && (type = "on" + type);

        typeof t[type] != "object" && (t[type] = {});
        id = id || baidu.lang.guid();
        handler.hashCode = id;
        t[type][id] = handler;
    };

    /**
     * 移除对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.removeEventListener(type, handler)
     * @param {string}   type     事件类型
     * @param {Function|string} handler  要移除的事件监听函数或者监听函数的key
     * @remark 	如果第二个参数handler没有被绑定到对应的自定义事件中，什么也不做。
     */
    baidu.lang.Class.prototype.removeEventListener = function (type, handler) {
        if (typeof handler != "undefined") {
            if ( (baidu.lang.isFunction(handler) && ! (handler = handler.hashCode))
                || (! baidu.lang.isString(handler))
            ){
                return;
            }
        }

        !this.__listeners && (this.__listeners = {});

        type.indexOf("on") != 0 && (type = "on" + type);

        var t = this.__listeners;
        if (!t[type]) {
            return;
        }
        if (typeof handler != "undefined") {
            t[type][handler] && delete t[type][handler];
        } else {
            for(var guid in t[type]){
                delete t[type][guid];
            }
        }
    };

    /**
     * 派发自定义事件，使得绑定到自定义事件上面的函数都会被执行。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.dispatchEvent(event, options)
     * @param {baidu.lang.Event|String} event 	Event对象，或事件名称(1.1.1起支持)
     * @param {Object} 					options 扩展参数,所含属性键值会扩展到Event对象上(1.2起支持)
     * @remark 处理会调用通过addEventListenr绑定的自定义事件回调函数之外，还会调用直接绑定到对象上面的自定义事件。例如：<br>
    myobj.onMyEvent = function(){}<br>
    myobj.addEventListener("onMyEvent", function(){});
        */
    baidu.lang.Class.prototype.dispatchEvent = function (event, options) {
        if (baidu.lang.isString(event)) {
            event = new baidu.lang.Event(event);
        }
        !this.__listeners && (this.__listeners = {});

        // 20100603 添加本方法的第二个参数，将 options extend到event中去传递
        options = options || {};
        for (var i in options) {
            event[i] = options[i];
        }

        var i, t = this.__listeners, p = event.type;
        event.target = event.target || this;
        event.currentTarget = this;

        p.indexOf("on") != 0 && (p = "on" + p);

        baidu.lang.isFunction(this[p]) && this[p].apply(this, arguments);

        if (typeof t[p] == "object") {
            for (i in t[p]) {
                t[p][i].apply(this, arguments);
            }
        }
        return event.returnValue;
    };


    baidu.lang.inherits = function (subClass, superClass, className) {
        var key, proto,
            selfProps = subClass.prototype,
            clazz = new Function();

        clazz.prototype = superClass.prototype;
        proto = subClass.prototype = new clazz();
        for (key in selfProps) {
            proto[key] = selfProps[key];
        }
        subClass.prototype.constructor = subClass;
        subClass.superClass = superClass.prototype;

        // 类名标识，兼容Class的toString，基本没用
        if ("string" == typeof className) {
            proto._className = className;
        }
    };
    // 声明快捷方法
    baidu.inherits = baidu.lang.inherits;


    /**
    
     * 图片的路径

     * @private
     * @type {String}
    
     */
    var _IMAGE_PATH = 'http://api.map.baidu.com/library/TextIconOverlay/1.2/src/images/m';

    /**
    
     * 图片的后缀名

      * @private
     * @type {String}
    
     */
    var _IMAGE_EXTENSION  = 'png';

    /**
     *@exports TextIconOverlay as BMapLib.TextIconOverlay
     */
    
    /**
    * TextIconOverlay
    * @class 此类表示地图上的一个覆盖物，该覆盖物由文字和图标组成，从Overlay继承。文字通常是数字（0-9）或字母（A-Z ），而文字与图标之间有一定的映射关系。
    *该覆盖物适用于以下类似的场景：需要在地图上添加一系列覆盖物，这些覆盖物之间用不同的图标和文字来区分，文字可能表示了该覆盖物的某一属性值，根据该文字和一定的映射关系，自动匹配相应颜色和大小的图标。
    *
    *@constructor
    *@param {Point} position 表示一个经纬度坐标位置。
    *@param {String} text 表示该覆盖物显示的文字信息。
    *@param {Json Object} options 可选参数，可选项包括：<br />
    *"<b>styles</b>":{Array<IconStyle>} 一组图标风格。单个图表风格包括以下几个属性：<br />
    *   url	{String}	 图片的url地址。(必选)<br />
    *   size {Size}	图片的大小。（必选）<br />
    *   anchor {Size} 图标定位在地图上的位置相对于图标左上角的偏移值，默认偏移值为图标的中心位置。（可选）<br />
    *   offset {Size} 图片相对于可视区域的偏移值，此功能的作用等同于CSS中的background-position属性。（可选）<br />
    *   textSize {Number} 文字的大小。（可选，默认10）<br />
    *   textColor {String} 文字的颜色。（可选，默认black）<br />
    */
    var TextIconOverlay = function(position, text, options){
        try {
            BMap;
        } catch (e) {
            throw Error('Baidu Map JS API is not ready yet!');
        }
        T.lang.inherits(TextIconOverlay, BMap.Overlay, "TextIconOverlay");
        this._position = position;
        this._text = text;
        this._options = options || {};
        this._styles = this._options['styles'] || [];
        (!this._styles.length) && this._setupDefaultStyles();                  
    };


    TextIconOverlay.prototype._setupDefaultStyles = function(){  
        var sizes = [53, 56, 66, 78, 90];
        for(var i = 0, size; size = sizes[i]; i++){
            this._styles.push({
                url:_IMAGE_PATH + i + '.' + _IMAGE_EXTENSION,
                size: new BMap.Size(size, size)
            });
        }//for循环的简洁写法
    };

    /**
    *继承Overlay的intialize方法，自定义覆盖物时必须。
    *@param {Map} map BMap.Map的实例化对象。
    *@return {HTMLElement} 返回覆盖物对应的HTML元素。
    */
    TextIconOverlay.prototype.initialize = function(map){
        this._map = map;
    
        this._domElement = document.createElement('div');     
        this._updateCss();    
        this._updateText();
        this._updatePosition(); 
        
        this._bind();

        this._map.getPanes().markerMouseTarget.appendChild(this._domElement);
        return this._domElement;   
    };

    /**
    *继承Overlay的draw方法，自定义覆盖物时必须。
    *@return 无返回值。
    */
    TextIconOverlay.prototype.draw = function(){
        this._map && this._updatePosition();
    };
    
    /**
    *获取该覆盖物上的文字。
    *@return {String} 该覆盖物上的文字。
    */
    TextIconOverlay.prototype.getText = function(){
        return this._text;
    };

    /**
    *设置该覆盖物上的文字。
    *@param {String} text 要设置的文字，通常是字母A-Z或数字0-9。
    *@return 无返回值。
    */
    TextIconOverlay.prototype.setText = function(text){
        if(text && (!this._text || (this._text.toString() != text.toString()))){
            this._text = text;
            this._updateText();
            this._updateCss();
            this._updatePosition(); 
        }
    };

    /**
    *获取该覆盖物的位置。
    *@return {Point} 该覆盖物的经纬度坐标。
    */
    TextIconOverlay.prototype.getPosition = function () {
        return this._position;
    };
   
    /**
    *设置该覆盖物的位置。
    *@param {Point}  position 要设置的经纬度坐标。
    *@return 无返回值。
    */
    TextIconOverlay.prototype.setPosition = function (position) {
        if(position && (!this._position || !this._position.equals(position))){
            this._position = position;  
            this._updatePosition();
        }
    };

    /**
    *由文字信息获取风格数组的对应索引值。
    *内部默认的对应函数为文字转换为数字除以10的结果，比如文字8返回索引0，文字25返回索引2.
    *如果需要自定义映射关系，请覆盖该函数。
    *@param {String} text  文字。
    *@param {Array<IconStyle>}  styles 一组图标风格。
    *@return {Number} 对应的索引值。
    */
    TextIconOverlay.prototype.getStyleByText = function(text, styles){
        var count = parseInt(text);
        var index = parseInt(count / 10);
        index = Math.max(0, index);
        index = Math.min(index, styles.length - 1);
        return styles[index]; 
    };

    /**
    *更新相应的CSS。
    *@return 无返回值。
    */
    TextIconOverlay.prototype._updateCss = function(){
        if (!this._domElement) {
            return
        }
        var style = this.getStyleByText(this._text, this._styles);
        this._domElement.style.cssText = this._buildCssText(style);
    };

    /**
    *更新覆盖物的显示文字。
    *@return 无返回值。
    */
    TextIconOverlay.prototype._updateText = function(){
        if (this._domElement) {
            this._domElement.innerHTML = this._text;
        }
    };

    /**
    *调整覆盖物在地图上的位置更新覆盖物的显示文字。
    *@return 无返回值。
    */
    TextIconOverlay.prototype._updatePosition = function(){
        if (this._domElement && this._position) {
            var style = this._domElement.style;
            var pixelPosition= this._map.pointToOverlayPixel(this._position); 
            pixelPosition.x -= Math.ceil(parseInt(style.width) / 2);
            pixelPosition.y -= Math.ceil(parseInt(style.height) / 2);       
            style.left = pixelPosition.x + "px";
            style.top = pixelPosition.y + "px";
        }
    };
    
    /**
    * 为该覆盖物的HTML元素构建CSS
    * @param {IconStyle}  一个图标的风格。
    * @return {String} 构建完成的CSSTEXT。
    */
    TextIconOverlay.prototype._buildCssText = function(style) {    
        //根据style来确定一些默认值
        var url = style['url'];
        var size = style['size'];
        var anchor = style['anchor'];
        var offset = style['offset'];
        var textColor = style['textColor'] || 'black';
        var textSize = style['textSize'] || 10;

        var csstext = [];
        if (T.browser["ie"] < 7) {
            csstext.push('filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(' +
                'sizingMethod=scale,src="' + url + '");');
        } else {
            csstext.push('background-image:url(' + url + ');');
            var backgroundPosition = '0 0';
            (offset instanceof BMap.Size) && (backgroundPosition = offset.width + 'px' + ' ' + offset.height + 'px');          
            csstext.push('background-position:' + backgroundPosition + ';');
        }

        if (size instanceof BMap.Size){
            if (anchor instanceof BMap.Size) {
                if (anchor.height > 0 && anchor.height < size.height) {
                      csstext.push('height:' + (size.height - anchor.height) + 'px; padding-top:' + anchor.height + 'px;');
                }
                if(anchor.width > 0 && anchor.width < size.width){
                    csstext.push('width:' + (size.width - anchor.width) + 'px; padding-left:' + anchor.width + 'px;');                
                }
            } else {
                csstext.push('height:' + size.height + 'px; line-height:' + size.height + 'px;');
                csstext.push('width:' + size.width + 'px; text-align:center;');
            }
        }
   
        csstext.push('cursor:pointer; color:' + textColor + '; position:absolute; font-size:' +
            textSize + 'px; font-family:Arial,sans-serif; font-weight:bold');
        return csstext.join('');
    };


    /**
    
     * 当鼠标点击该覆盖物时会触发该事件

     * @name TextIconOverlay#click

     * @event

     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：
    
     * <br />"<b>type</b> : {String} 事件类型

     * <br />"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标

     *

     */

    /**

     * 当鼠标进入该覆盖物区域时会触发该事件

     * @name TextIconOverlay#mouseover

     * @event
     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：
    
     * <br />"<b>type</b> : {String} 事件类型

     * <br />"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标

     * <br />"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象

     * <br />"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象

     *

     * @example <b>参考示例：</b><br />

     * myTextIconOverlay.addEventListener("mouseover", function(e) {  alert(e.point);  });

     */

    /**

     * 当鼠标离开该覆盖物区域时会触发该事件

     * @name TextIconOverlay#mouseout

     * @event

     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：

     * <br />"<b>type</b> : {String} 事件类型

     * <br />"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标

     * <br />"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象

     * <br />"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象

     *

     * @example <b>参考示例：</b><br />

     * myTextIconOverlay.addEventListener("mouseout", function(e) {  alert(e.point);  });

     */


    /**
    * 为该覆盖物绑定一系列事件
    * 当前支持click mouseover mouseout
    * @return 无返回值。
    */
    TextIconOverlay.prototype._bind = function(){
        if (!this._domElement){
            return;
        }

        var me = this;
        var map = this._map;

        var BaseEvent = T.lang.Event;
        function eventExtend(e, be){
            var elem = e.srcElement || e.target;
            var x = e.clientX || e.pageX;
            var y = e.clientY || e.pageY;
            if (e && be && x && y && elem){
                var offset = T.dom.getPosition(map.getContainer());
                be.pixel = new BMap.Pixel(x - offset.left, y - offset.top);
                be.point = map.pixelToPoint(be.pixel);
            }
            return be;
        }//给事件参数增加pixel和point两个值

        T.event.on(this._domElement,"mouseover", function(e){
            me.dispatchEvent(eventExtend(e, new BaseEvent("onmouseover")));
        });
        T.event.on(this._domElement,"mouseout", function(e){
            me.dispatchEvent(eventExtend(e, new BaseEvent("onmouseout")));
        });
        T.event.on(this._domElement,"click", function(e){
            me.dispatchEvent(eventExtend(e, new BaseEvent("onclick")));
        });
    };

    return TextIconOverlay;
});
});

var TextIconOverlay = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);

/**
 * 获取一个扩展的视图范围，把上下左右都扩大一样的像素值。
 * @param {Map} map BMap.Map的实例化对象
 * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象
 * @param {Number} gridSize 要扩大的像素值
 *
 * @return {BMap.Bounds} 返回扩大后的视图范围。
 */
var getExtendedBounds = function(map, bounds, gridSize){
    bounds = cutBoundsInRange(bounds);
    var pixelNE = map.pointToPixel(bounds.getNorthEast());
    var pixelSW = map.pointToPixel(bounds.getSouthWest()); 
    pixelNE.x += gridSize;
    pixelNE.y -= gridSize;
    pixelSW.x -= gridSize;
    pixelSW.y += gridSize;
    var newNE = map.pixelToPoint(pixelNE);
    var newSW = map.pixelToPoint(pixelSW);
    return new BMap.Bounds(newSW, newNE);
};

/**
 * 按照百度地图支持的世界范围对bounds进行边界处理
 * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象
 *
 * @return {BMap.Bounds} 返回不越界的视图范围
 */
var cutBoundsInRange = function (bounds) {
    var maxX = getRange(bounds.getNorthEast().lng, -180, 180);
    var minX = getRange(bounds.getSouthWest().lng, -180, 180);
    var maxY = getRange(bounds.getNorthEast().lat, -74, 74);
    var minY = getRange(bounds.getSouthWest().lat, -74, 74);
    return new BMap.Bounds(new BMap.Point(minX, minY), new BMap.Point(maxX, maxY));
}; 

/**
 * 对单个值进行边界处理。
 * @param {Number} i 要处理的数值
 * @param {Number} min 下边界值
 * @param {Number} max 上边界值
 * 
 * @return {Number} 返回不越界的数值
 */
var getRange = function (i, mix, max) {
    mix && (i = Math.max(i, mix));
    max && (i = Math.min(i, max));
    return i;
};

/**
 * 判断给定的对象是否为数组
 * @param {Object} source 要测试的对象
 *
 * @return {Boolean} 如果是数组返回true，否则返回false
 */
var isArray = function (source) {
    return '[object Array]' === Object.prototype.toString.call(source);
};

/**
 * 返回item在source中的索引位置
 * @param {Object} item 要测试的对象
 * @param {Array} source 数组
 *
 * @return {Number} 如果在数组内，返回索引，否则返回-1
 */
var indexOf = function(item, source){
    var index = -1;
    if(isArray(source)){
        if (source.indexOf) {
            index = source.indexOf(item);
        } else {
            for (var i = 0, m; m = source[i]; i++) {
                if (m === item) {
                    index = i;
                    break;
                }
            }
        }
    }        
    return index;
};

/**
 *@exports MarkerClusterer as BMapLib.MarkerClusterer
 */

    /**
     * MarkerClusterer
     * @class 用来解决加载大量点要素到地图上产生覆盖现象的问题，并提高性能
     * @constructor
     * @param {Map} map 地图的一个实例。
     * @param {Json Object} options 可选参数，可选项包括：<br />
     *    markers {Array<Marker>} 要聚合的标记数组<br />
     *    girdSize {Number} 聚合计算时网格的像素大小，默认60<br />
     *    maxZoom {Number} 最大的聚合级别，大于该级别就不进行相应的聚合<br />
     *    minClusterSize {Number} 最小的聚合数量，小于该数量的不能成为一个聚合，默认为2<br />
     *    isAverangeCenter {Boolean} 聚合点的落脚位置是否是所有聚合在内点的平均值，默认为否，落脚在聚合内的第一个点<br />
     *    styles {Array<IconStyle>} 自定义聚合后的图标风格，请参考TextIconOverlay类<br />
     */
var MarkerClusterer  = function(map, options){
    try {
        BMap;
    } catch (e) {
        throw Error('Baidu Map JS API is not ready yet!');
    }
    if (!map){
        return;
    }
    this._map = map;
    this._markers = [];
    this._clusters = [];
    
    var opts = options || {};
    this._gridSize = opts["gridSize"] || 60;
    this._maxZoom = opts["maxZoom"] || 18;
    this._minClusterSize = opts["minClusterSize"] || 2;           
    this._isAverageCenter = false;
    if (opts['isAverageCenter'] != undefined) {
        this._isAverageCenter = opts['isAverageCenter'];
    }    
    this._styles = opts["styles"] || [];

    var that = this;
    this._map.addEventListener("zoomend",function(){
        that._redraw();     
    });

    this._map.addEventListener("moveend",function(){
        that._redraw();     
    });

    var mkrs = opts["markers"];
    isArray(mkrs) && this.addMarkers(mkrs);
};

/**
 * 添加要聚合的标记数组。
 * @param {Array<Marker>} markers 要聚合的标记数组
 *
 * @return 无返回值。
 */
MarkerClusterer.prototype.addMarkers = function(markers){
    if (!markers.length) {
        return
    }
    for(var i = 0, len = markers.length; i <len ; i++){
        this._pushMarkerTo(markers[i]);
    }
    this._createClusters();   
};

/**
 * 把一个标记添加到要聚合的标记数组中
 * @param {BMap.Marker} marker 要添加的标记
 *
 * @return 无返回值。
 */
MarkerClusterer.prototype._pushMarkerTo = function(marker){
    var index = indexOf(marker, this._markers);
    if(index === -1){
        marker.isInCluster = false;
        this._markers.push(marker);//Marker拖放后enableDragging不做变化，忽略
    }
};

/**
 * 添加一个聚合的标记。
 * @param {BMap.Marker} marker 要聚合的单个标记。
 * @return 无返回值。
 */
MarkerClusterer.prototype.addMarker = function(marker) {
    this._pushMarkerTo(marker);
    this._createClusters();
};

/**
 * 根据所给定的标记，创建聚合点
 * @return 无返回值
 */
MarkerClusterer.prototype._createClusters = function(){
    var mapBounds = this._map.getBounds();
    if (!mapBounds.getCenter()) {
        return
    }
    var extendedBounds = getExtendedBounds(this._map, mapBounds, this._gridSize);
    for(var i = 0, marker; marker = this._markers[i]; i++){
        if(!marker.isInCluster && extendedBounds.containsPoint(marker.getPosition()) ){ 
            this._addToClosestCluster(marker);
        }
    }   
};

/**
 * 根据标记的位置，把它添加到最近的聚合中
 * @param {BMap.Marker} marker 要进行聚合的单个标记
 *
 * @return 无返回值。
 */
MarkerClusterer.prototype._addToClosestCluster = function (marker){
    var distance = 4000000;
    var clusterToAddTo = null;
    var position = marker.getPosition();
    for(var i = 0, cluster; cluster = this._clusters[i]; i++){
        var center = cluster.getCenter();
        if(center){
            var d = this._map.getDistance(center, marker.getPosition());
            if(d < distance){
                distance = d;
                clusterToAddTo = cluster;
            }
        }
    }

    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)){
        clusterToAddTo.addMarker(marker);
    } else {
        var cluster = new Cluster(this);
        cluster.addMarker(marker);            
        this._clusters.push(cluster);
    }    
};

/**
 * 清除上一次的聚合的结果
 * @return 无返回值。
 */
MarkerClusterer.prototype._clearLastClusters = function(){
    for(var i = 0, cluster; cluster = this._clusters[i]; i++){            
        cluster.remove();
    }
    this._clusters = [];//置空Cluster数组
    this._removeMarkersFromCluster();//把Marker的cluster标记设为false
};

/**
 * 清除某个聚合中的所有标记
 * @return 无返回值
 */
MarkerClusterer.prototype._removeMarkersFromCluster = function(){
    for(var i = 0, marker; marker = this._markers[i]; i++){
        marker.isInCluster = false;
    }
};

/**
 * 把所有的标记从地图上清除
 * @return 无返回值
 */
MarkerClusterer.prototype._removeMarkersFromMap = function(){
    for(var i = 0, marker; marker = this._markers[i]; i++){
        marker.isInCluster = false;
        var label = marker.getLabel();
        this._map.removeOverlay(marker);
        marker.setLabel(label);
    }
};

/**
 * 删除单个标记
 * @param {BMap.Marker} marker 需要被删除的marker
 *
 * @return {Boolean} 删除成功返回true，否则返回false
 */
MarkerClusterer.prototype._removeMarker = function(marker) {
    var index = indexOf(marker, this._markers);
    if (index === -1) {
        return false;
    }
    this._map.removeOverlay(marker);
    this._markers.splice(index, 1);
    return true;
};

/**
 * 删除单个标记
 * @param {BMap.Marker} marker 需要被删除的marker
 *
 * @return {Boolean} 删除成功返回true，否则返回false
 */
MarkerClusterer.prototype.removeMarker = function(marker) {
    var success = this._removeMarker(marker);
    if (success) {
        this._clearLastClusters();
        this._createClusters();
    }
    return success;
};

/**
 * 删除一组标记
 * @param {Array<BMap.Marker>} markers 需要被删除的marker数组
 *
 * @return {Boolean} 删除成功返回true，否则返回false
 */
MarkerClusterer.prototype.removeMarkers = function(markers) {
    var success = false;
    for (var i = 0; i < markers.length; i++) {
        var r = this._removeMarker(markers[i]);
        success = success || r; 
    }

    if (success) {
        this._clearLastClusters();
        this._createClusters();
    }
    return success;
};

/**
 * 从地图上彻底清除所有的标记
 * @return 无返回值
 */
MarkerClusterer.prototype.clearMarkers = function() {
    this._clearLastClusters();
    this._removeMarkersFromMap();
    this._markers = [];
};

/**
 * 重新生成，比如改变了属性等
 * @return 无返回值
 */
MarkerClusterer.prototype._redraw = function () {
    this._clearLastClusters();
    this._createClusters();
};

/**
 * 获取网格大小
 * @return {Number} 网格大小
 */
MarkerClusterer.prototype.getGridSize = function() {
    return this._gridSize;
};

/**
 * 设置网格大小
 * @param {Number} size 网格大小
 * @return 无返回值
 */
MarkerClusterer.prototype.setGridSize = function(size) {
    this._gridSize = size;
    this._redraw();
};

/**
 * 获取聚合的最大缩放级别。
 * @return {Number} 聚合的最大缩放级别。
 */
MarkerClusterer.prototype.getMaxZoom = function() {
    return this._maxZoom;       
};

/**
 * 设置聚合的最大缩放级别
 * @param {Number} maxZoom 聚合的最大缩放级别
 * @return 无返回值
 */
MarkerClusterer.prototype.setMaxZoom = function(maxZoom) {
    this._maxZoom = maxZoom;
    this._redraw();
};

/**
 * 获取聚合的样式风格集合
 * @return {Array<IconStyle>} 聚合的样式风格集合
 */
MarkerClusterer.prototype.getStyles = function() {
    return this._styles;
};

/**
 * 设置聚合的样式风格集合
 * @param {Array<IconStyle>} styles 样式风格数组
 * @return 无返回值
 */
MarkerClusterer.prototype.setStyles = function(styles) {
    this._styles = styles;
    this._redraw();
};

/**
 * 获取单个聚合的最小数量。
 * @return {Number} 单个聚合的最小数量。
 */
MarkerClusterer.prototype.getMinClusterSize = function() {
    return this._minClusterSize;
};

/**
 * 设置单个聚合的最小数量。
 * @param {Number} size 单个聚合的最小数量。
 * @return 无返回值。
 */
MarkerClusterer.prototype.setMinClusterSize = function(size) {
    this._minClusterSize = size;
    this._redraw();
};

/**
 * 获取单个聚合的落脚点是否是聚合内所有标记的平均中心。
 * @return {Boolean} true或false。
 */
MarkerClusterer.prototype.isAverageCenter = function() {
    return this._isAverageCenter;
};

/**
 * 获取聚合的Map实例。
 * @return {Map} Map的示例。
 */
MarkerClusterer.prototype.getMap = function() {
    return this._map;
};

/**
 * 获取所有的标记数组。
 * @return {Array<Marker>} 标记数组。
 */
MarkerClusterer.prototype.getMarkers = function() {
    return this._markers;
};

/**
 * 获取聚合的总数量。
 * @return {Number} 聚合的总数量。
 */
MarkerClusterer.prototype.getClustersCount = function() {
    var count = 0;
    for(var i = 0, cluster; cluster = this._clusters[i]; i++){
        cluster.isReal() && count++;     
    }
    return count;
};

/**
 * @ignore
 * Cluster
 * @class 表示一个聚合对象，该聚合，包含有N个标记，这N个标记组成的范围，并有予以显示在Map上的TextIconOverlay等。
 * @constructor
 * @param {MarkerClusterer} markerClusterer 一个标记聚合器示例。
 */
function Cluster(markerClusterer){
    this._markerClusterer = markerClusterer;
    this._map = markerClusterer.getMap();
    this._minClusterSize = markerClusterer.getMinClusterSize();
    this._isAverageCenter = markerClusterer.isAverageCenter();
    this._center = null;//落脚位置
    this._markers = [];//这个Cluster中所包含的markers
    this._gridBounds = null;//以中心点为准，向四边扩大gridSize个像素的范围，也即网格范围
    this._isReal = false; //真的是个聚合

    this._clusterMarker = new TextIconOverlay(this._center, this._markers.length, {"styles":this._markerClusterer.getStyles()});
    //this._map.addOverlay(this._clusterMarker);
}

/**
 * 向该聚合添加一个标记。
 * @param {Marker} marker 要添加的标记。
 * @return 无返回值。
 */
Cluster.prototype.addMarker = function(marker){
    if(this.isMarkerInCluster(marker)){
        return false;
    }//也可用marker.isInCluster判断,外面判断OK，这里基本不会命中

    if (!this._center){
        this._center = marker.getPosition();
        this.updateGridBounds();//
    } else {
        if(this._isAverageCenter){
            var l = this._markers.length + 1;
            var lat = (this._center.lat * (l - 1) + marker.getPosition().lat) / l;
            var lng = (this._center.lng * (l - 1) + marker.getPosition().lng) / l;
            this._center = new BMap.Point(lng, lat);
            this.updateGridBounds();
        }//计算新的Center
    }

    marker.isInCluster = true;
    this._markers.push(marker);

    var len = this._markers.length;
    if(len < this._minClusterSize ){     
        this._map.addOverlay(marker);
        //this.updateClusterMarker();
        return true;
    } else if (len === this._minClusterSize) {
        for (var i = 0; i < len; i++) {
            var label = this._markers[i].getLabel();
            this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);
            this._markers[i].setLabel(label);
        }
        
    } 
    this._map.addOverlay(this._clusterMarker);
    this._isReal = true;
    this.updateClusterMarker();
    return true;
};

/**
 * 判断一个标记是否在该聚合中。
 * @param {Marker} marker 要判断的标记。
 * @return {Boolean} true或false。
 */
Cluster.prototype.isMarkerInCluster= function(marker){
    if (this._markers.indexOf) {
        return this._markers.indexOf(marker) != -1;
    } else {
        for (var i = 0, m; m = this._markers[i]; i++) {
            if (m === marker) {
                return true;
            }
        }
    }
    return false;
};

/**
 * 判断一个标记是否在该聚合网格范围中。
 * @param {Marker} marker 要判断的标记。
 * @return {Boolean} true或false。
 */
Cluster.prototype.isMarkerInClusterBounds = function(marker) {
    return this._gridBounds.containsPoint(marker.getPosition());
};

Cluster.prototype.isReal = function(marker) {
    return this._isReal;
};

/**
 * 更新该聚合的网格范围。
 * @return 无返回值。
 */
Cluster.prototype.updateGridBounds = function() {
    var bounds = new BMap.Bounds(this._center, this._center);
    this._gridBounds = getExtendedBounds(this._map, bounds, this._markerClusterer.getGridSize());
};

/**
 * 更新该聚合的显示样式，也即TextIconOverlay。
 * @return 无返回值。
 */
Cluster.prototype.updateClusterMarker = function () {
    if (this._map.getZoom() > this._markerClusterer.getMaxZoom()) {
        this._clusterMarker && this._map.removeOverlay(this._clusterMarker);
        for (var i = 0, marker; marker = this._markers[i]; i++) {
            this._map.addOverlay(marker);
        }
        return;
    }

    if (this._markers.length < this._minClusterSize) {
        this._clusterMarker.hide();
        return;
    }

    this._clusterMarker.setPosition(this._center);
    
    this._clusterMarker.setText(this._markers.length);

    this._clusterMarker.addEventListener && !this._clusterMarker._hasClickEvent && this._clusterMarker.addEventListener("click", function(event){
        this._clusterMarker._hasClickEvent = true;
        this._markers && this._map.setViewport(this.getBounds());
    }.bind(this));
};

/**
 * 删除该聚合。
 * @return 无返回值。
 */
Cluster.prototype.remove = function(){
    for (var i = 0, m; m = this._markers[i]; i++) {
        var label = this._markers[i].getLabel();
        this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);
        this._markers[i].setLabel(label);
    }//清除散的标记点
    this._map.removeOverlay(this._clusterMarker);
    this._markers.length = 0;
    delete this._markers;
};

/**
 * 获取该聚合所包含的所有标记的最小外接矩形的范围。
 * @return {BMap.Bounds} 计算出的范围。
 */
Cluster.prototype.getBounds = function() {
    var bounds = new BMap.Bounds(this._center,this._center);
    for (var i = 0, marker; marker = this._markers[i]; i++) {
        bounds.extend(marker.getPosition());
    }
    return bounds;
};

/**
 * 获取该聚合的落脚点。
 * @return {BMap.Point} 该聚合的落脚点。
 */
Cluster.prototype.getCenter = function() {
    return this._center;
};

return MarkerClusterer;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c975":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $indexOf = __webpack_require__("4d64").indexOf;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');
var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "caad":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $includes = __webpack_require__("4d64").includes;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "cdf9":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var newPromiseCapability = __webpack_require__("f069");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "d784":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__("ac1f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var regexpExec = __webpack_require__("9263");
var createNonEnumerableProperty = __webpack_require__("9112");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  return 'a'.replace(/./, '$0') === '$0';
})();

var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !(
      REPLACE_SUPPORTS_NAMED_GROUPS &&
      REPLACE_KEEPS_$0 &&
      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    )) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    }, {
      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
  }

  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "d81d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $map = __webpack_require__("b727").map;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "dca8":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var FREEZING = __webpack_require__("bb2f");
var fails = __webpack_require__("d039");
var isObject = __webpack_require__("861d");
var onFreeze = __webpack_require__("f183").onFreeze;

var nativeFreeze = Object.freeze;
var FAILS_ON_PRIMITIVES = fails(function () { nativeFreeze(1); });

// `Object.freeze` method
// https://tc39.github.io/ecma262/#sec-object.freeze
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  freeze: function freeze(it) {
    return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e667":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "e6cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IS_PURE = __webpack_require__("c430");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var NativePromise = __webpack_require__("fea9");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var setSpecies = __webpack_require__("2626");
var isObject = __webpack_require__("861d");
var aFunction = __webpack_require__("1c0b");
var anInstance = __webpack_require__("19aa");
var classof = __webpack_require__("c6b6");
var inspectSource = __webpack_require__("8925");
var iterate = __webpack_require__("2266");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var speciesConstructor = __webpack_require__("4840");
var task = __webpack_require__("2cf4").set;
var microtask = __webpack_require__("b575");
var promiseResolve = __webpack_require__("cdf9");
var hostReportErrors = __webpack_require__("44de");
var newPromiseCapabilityModule = __webpack_require__("f069");
var perform = __webpack_require__("e667");
var InternalStateModule = __webpack_require__("69f3");
var isForced = __webpack_require__("94ca");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var IS_NODE = classof(process) == 'process';
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (promise, state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(promise, state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (handler = global['on' + name]) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (promise, state) {
  task.call(global, function () {
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (promise, state) {
  task.call(global, function () {
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, promise, state, unwrap) {
  return function (value) {
    fn(promise, state, value, unwrap);
  };
};

var internalReject = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(promise, state, true);
};

var internalResolve = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, promise, wrapper, state),
            bind(internalReject, promise, wrapper, state)
          );
        } catch (error) {
          internalReject(promise, wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(promise, state, false);
    }
  } catch (error) {
    internalReject(promise, { done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, this, state), bind(internalReject, this, state));
    } catch (error) {
      internalReject(this, state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(this, state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, promise, state);
    this.reject = bind(internalReject, promise, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "ecf2":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".map-drawing-tools[data-v-38552c8e]{margin:6px;padding:10px;font-size:12px;color:#3894ff;align-items:center;display:flex;background:#fff;cursor:pointer;box-shadow:0 0 4px rgba(37,47,55,.12)}.map-drawing-tools a[data-v-38552c8e]{padding:0 6px;display:inline-block;text-decoration:none;align-items:center;display:flex}.map-drawing-tools a[data-v-38552c8e]:active{opacity:.78}.map-drawing-tools a span[data-v-38552c8e]{display:inline-block;padding-right:4px}.map-drawing-tools .stop[data-v-38552c8e]{color:#e6a23c}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "f069":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "f183":
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__("d012");
var isObject = __webpack_require__("861d");
var has = __webpack_require__("5135");
var defineProperty = __webpack_require__("9bf2").f;
var uid = __webpack_require__("90e3");
var FREEZING = __webpack_require__("bb2f");

var METADATA = uid('meta');
var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/CubeMapDraw/src/index.vue?vue&type=template&id=093bcea8&scoped=true&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cube-draw-map"},[_c('baidu-map',{staticClass:"bm-view",attrs:{"map-click":false,"scroll-wheel-zoom":true,"center":_vm.defaultConfig.mapCenter,"ak":_vm.defaultConfig.akey},on:{"ready":_vm.ready}},[_c('bm-control',{attrs:{"anchor":"BMAP_ANCHOR_TOP_RIGHT"}},[(_vm.map)?_c('map-drawing-tools',_vm._b({attrs:{"drawType":_vm.drawTypeList},on:{"draw":_vm.draw}},'map-drawing-tools',_vm.$attrs,false)):_vm._e()],1),(_vm.map)?_c('bm-control',[_c('bm-control',{key:"0b31ab34-33c1-4d49-bd04-eced3fd4f999"},[_vm._l((_vm.markers),function(polygon,index){return [_c('bm-control',{key:'polygons_bm_marker_Item'+index},[_c('bm-marker',{key:index+'line_list_bm_marker_one',attrs:{"position":polygon.point}})],1)]})],2),_c('bm-control',{key:"f1a7c4d6-de54-42f6-b784-ee802466d55d"},[_vm._l((_vm.polylines),function(polygonItem,ItemIndex){return [_c('bm-control',{key:'polygons_bm_polyline_Item'+ItemIndex},[_c('bm-polyline',{key:ItemIndex+'polygons_bm_polyline_one',attrs:{"path":polygonItem.point,"editing":polygonItem.editing,"stroke-color":polygonItem.strokeColor || _vm.defaultConfig.styleOptions.strokeColor,"fill-color":polygonItem.fillColor || _vm.defaultConfig.styleOptions.fillColor,"fill-opacity":polygonItem.fillOpacity || _vm.defaultConfig.styleOptions.fillOpacity,"stroke-opacity":polygonItem.strokeOpacity || _vm.defaultConfig.styleOptions.strokeOpacity,"stroke-style":polygonItem.strokeStyle || _vm.defaultConfig.styleOptions.strokeStyle,"stroke-weight":polygonItem.strokeWeight || _vm.defaultConfig.styleOptions.strokeWeight},on:{"click":function($event){return _vm.click($event, polygonItem)},"rightclick":function($event){return _vm.rightclick($event, polygonItem,ItemIndex)},"lineupdate":function($event){return _vm.polygonUpdate($event, polygonItem,ItemIndex, 'polylines')}}}),(polygonItem.centerPoint)?_c('bm-control',[_vm._t("overlay-center",null,{"row":polygonItem})],2):_vm._e()],1)]})],2),_c('bm-control',{key:"7ac63c28-2833-41e0-bfd8-6dc33abcc7c5"},[_vm._l((_vm.polygons),function(polygonItem,ItemIndex){return [_c('bm-control',{key:'polygons_bm_polygon_Item'+ItemIndex},[_c('bm-polygon',{key:ItemIndex+'polygons_bm_polygon_one',attrs:{"path":polygonItem.point,"editing":polygonItem.editing,"stroke-color":polygonItem.strokeColor || _vm.defaultConfig.styleOptions.strokeColor,"fill-color":polygonItem.fillColor || _vm.defaultConfig.styleOptions.fillColor,"fill-opacity":polygonItem.fillOpacity || _vm.defaultConfig.styleOptions.fillOpacity,"stroke-opacity":polygonItem.strokeOpacity || _vm.defaultConfig.styleOptions.strokeOpacity,"stroke-style":polygonItem.strokeStyle || _vm.defaultConfig.styleOptions.strokeStyle,"stroke-weight":polygonItem.strokeWeight || _vm.defaultConfig.styleOptions.strokeWeight},on:{"click":function($event){return _vm.click($event, polygonItem)},"rightclick":function($event){return _vm.rightclick($event, polygonItem,ItemIndex)},"lineupdate":function($event){return _vm.polygonUpdate($event, polygonItem,ItemIndex,'polygons')}}}),(polygonItem.centerPoint)?_c('bm-control',[_vm._t("overlay-center",null,{"row":polygonItem})],2):_vm._e()],1)]})],2),_c('bm-boundary',{ref:"boundary",attrs:{"name":_vm.defaultConfig.mapCenter,"strokeWeight":2,"strokeColor":"#000","fillColor":""}})],1):_vm._e(),_c('transition',{attrs:{"name":"el-zoom-in-top"}},[(_vm.visible)?_c('ul',{directives:[{name:"clickOutside",rawName:"v-clickOutside",value:(_vm.clickOutside),expression:"clickOutside"}],staticClass:"contextmenu",style:({left:_vm.contextmenu.left+'px',top:_vm.contextmenu.top+'px'})},[_c('li',{on:{"click":function($event){$event.stopPropagation();return _vm.handlerContextmenu(1)}}},[_vm._v(" 开启编辑 ")]),_c('li',{on:{"click":function($event){$event.stopPropagation();return _vm.handlerContextmenu(2)}}},[_vm._v(" 完成编辑 ")]),_c('li',{on:{"click":function($event){$event.stopPropagation();return _vm.handlerContextmenu(0)}}},[_vm._v(" 删除 ")])]):_vm._e()])],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/index.vue?vue&type=template&id=093bcea8&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js
var es_array_splice = __webpack_require__("a434");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.freeze.js
var es_object_freeze = __webpack_require__("dca8");

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js
var createForOfIteratorHelper = __webpack_require__("b85c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/map/Map.vue?vue&type=template&id=470f2580&
var Mapvue_type_template_id_470f2580_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.hasBmView)?_c('div',{ref:"view",staticStyle:{"width":"100%","height":"100%"}}):_vm._e(),_vm._t("default")],2)}
var Mapvue_type_template_id_470f2580_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/Map.vue?vue&type=template&id=470f2580&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/map/Map.vue?vue&type=script&lang=js&
var Mapvue_type_script_lang_js_ = __webpack_require__("7f25");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/Map.vue?vue&type=script&lang=js&
 /* harmony default export */ var map_Mapvue_type_script_lang_js_ = (Mapvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/Map.vue





/* normalize component */

var component = normalizeComponent(
  map_Mapvue_type_script_lang_js_,
  Mapvue_type_template_id_470f2580_render,
  Mapvue_type_template_id_470f2580_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Map = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/map/MapView.vue?vue&type=template&id=183c0d62&
var MapViewvue_type_template_id_183c0d62_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var MapViewvue_type_template_id_183c0d62_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/MapView.vue?vue&type=template&id=183c0d62&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/map/MapView.vue?vue&type=script&lang=js&
//
//
//
//
/* harmony default export */ var MapViewvue_type_script_lang_js_ = ({
  name: 'bm-view'
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/MapView.vue?vue&type=script&lang=js&
 /* harmony default export */ var map_MapViewvue_type_script_lang_js_ = (MapViewvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/map/MapView.vue





/* normalize component */

var MapView_component = normalizeComponent(
  map_MapViewvue_type_script_lang_js_,
  MapViewvue_type_template_id_183c0d62_render,
  MapViewvue_type_template_id_183c0d62_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var MapView = (MapView_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Scale.vue?vue&type=script&lang=js&
var Scalevue_type_script_lang_js_ = __webpack_require__("6a21");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Scale.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Scalevue_type_script_lang_js_ = (Scalevue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Scale.vue
var Scale_render, Scale_staticRenderFns




/* normalize component */

var Scale_component = normalizeComponent(
  controls_Scalevue_type_script_lang_js_,
  Scale_render,
  Scale_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Scale = (Scale_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Navigation.vue?vue&type=script&lang=js&
var Navigationvue_type_script_lang_js_ = __webpack_require__("b5c1");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Navigation.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Navigationvue_type_script_lang_js_ = (Navigationvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Navigation.vue
var Navigation_render, Navigation_staticRenderFns




/* normalize component */

var Navigation_component = normalizeComponent(
  controls_Navigationvue_type_script_lang_js_,
  Navigation_render,
  Navigation_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Navigation = (Navigation_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/MapType.vue?vue&type=script&lang=js&
var MapTypevue_type_script_lang_js_ = __webpack_require__("0823");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/MapType.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_MapTypevue_type_script_lang_js_ = (MapTypevue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/MapType.vue
var MapType_render, MapType_staticRenderFns




/* normalize component */

var MapType_component = normalizeComponent(
  controls_MapTypevue_type_script_lang_js_,
  MapType_render,
  MapType_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var MapType = (MapType_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/OverviewMap.vue?vue&type=script&lang=js&
var OverviewMapvue_type_script_lang_js_ = __webpack_require__("8409");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/OverviewMap.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_OverviewMapvue_type_script_lang_js_ = (OverviewMapvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/OverviewMap.vue
var OverviewMap_render, OverviewMap_staticRenderFns




/* normalize component */

var OverviewMap_component = normalizeComponent(
  controls_OverviewMapvue_type_script_lang_js_,
  OverviewMap_render,
  OverviewMap_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var OverviewMap = (OverviewMap_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Geolocation.vue?vue&type=script&lang=js&
var Geolocationvue_type_script_lang_js_ = __webpack_require__("4757");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Geolocation.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Geolocationvue_type_script_lang_js_ = (Geolocationvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Geolocation.vue
var Geolocation_render, Geolocation_staticRenderFns




/* normalize component */

var Geolocation_component = normalizeComponent(
  controls_Geolocationvue_type_script_lang_js_,
  Geolocation_render,
  Geolocation_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Geolocation = (Geolocation_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Copyright.vue?vue&type=script&lang=js&
var Copyrightvue_type_script_lang_js_ = __webpack_require__("abed");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Copyright.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Copyrightvue_type_script_lang_js_ = (Copyrightvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Copyright.vue
var Copyright_render, Copyright_staticRenderFns




/* normalize component */

var Copyright_component = normalizeComponent(
  controls_Copyrightvue_type_script_lang_js_,
  Copyright_render,
  Copyright_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Copyright = (Copyright_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/CityList.vue?vue&type=script&lang=js&
var CityListvue_type_script_lang_js_ = __webpack_require__("6160");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/CityList.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_CityListvue_type_script_lang_js_ = (CityListvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/CityList.vue
var CityList_render, CityList_staticRenderFns




/* normalize component */

var CityList_component = normalizeComponent(
  controls_CityListvue_type_script_lang_js_,
  CityList_render,
  CityList_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var CityList = (CityList_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Panorama.vue?vue&type=script&lang=js&
var Panoramavue_type_script_lang_js_ = __webpack_require__("4136");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Panorama.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Panoramavue_type_script_lang_js_ = (Panoramavue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Panorama.vue
var Panorama_render, Panorama_staticRenderFns




/* normalize component */

var Panorama_component = normalizeComponent(
  controls_Panoramavue_type_script_lang_js_,
  Panorama_render,
  Panorama_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Panorama = (Panorama_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Control.vue?vue&type=template&id=04af1729&
var Controlvue_type_template_id_04af1729_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t("default")],2)}
var Controlvue_type_template_id_04af1729_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Control.vue?vue&type=template&id=04af1729&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/controls/Control.vue?vue&type=script&lang=js&
var Controlvue_type_script_lang_js_ = __webpack_require__("7a58");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Control.vue?vue&type=script&lang=js&
 /* harmony default export */ var controls_Controlvue_type_script_lang_js_ = (Controlvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/controls/Control.vue





/* normalize component */

var Control_component = normalizeComponent(
  controls_Controlvue_type_script_lang_js_,
  Controlvue_type_template_id_04af1729_render,
  Controlvue_type_template_id_04af1729_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Control = (Control_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Marker.vue?vue&type=template&id=8b00e1e8&
var Markervue_type_template_id_8b00e1e8_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t("default")],2)}
var Markervue_type_template_id_8b00e1e8_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Marker.vue?vue&type=template&id=8b00e1e8&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Marker.vue?vue&type=script&lang=js&
var Markervue_type_script_lang_js_ = __webpack_require__("165e");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Marker.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Markervue_type_script_lang_js_ = (Markervue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Marker.vue





/* normalize component */

var Marker_component = normalizeComponent(
  overlays_Markervue_type_script_lang_js_,
  Markervue_type_template_id_8b00e1e8_render,
  Markervue_type_template_id_8b00e1e8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Marker = (Marker_component.exports);
// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/PointCollection.vue?vue&type=script&lang=js&
var PointCollectionvue_type_script_lang_js_ = __webpack_require__("bfa3");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/PointCollection.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_PointCollectionvue_type_script_lang_js_ = (PointCollectionvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/PointCollection.vue
var PointCollection_render, PointCollection_staticRenderFns




/* normalize component */

var PointCollection_component = normalizeComponent(
  overlays_PointCollectionvue_type_script_lang_js_,
  PointCollection_render,
  PointCollection_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var PointCollection = (PointCollection_component.exports);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("a9e3");

// EXTERNAL MODULE: ./node_modules/vue-baidu-map/components/base/mixins/common.js
var common = __webpack_require__("2da4");

// EXTERNAL MODULE: ./node_modules/vue-baidu-map/components/base/bindEvent.js + 1 modules
var bindEvent = __webpack_require__("4fab");

// EXTERNAL MODULE: ./node_modules/vue-baidu-map/components/base/factory.js
var factory = __webpack_require__("76f3");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Polyline.vue?vue&type=script&lang=js&





/* harmony default export */ var Polylinevue_type_script_lang_js_ = ({
  name: 'bm-polyline',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    path: {
      type: Array
    },
    strokeColor: {
      type: String
    },
    strokeWeight: {
      type: Number
    },
    strokeOpacity: {
      type: Number
    },
    strokeStyle: {
      type: String
    },
    massClear: {
      type: Boolean,
      default: true
    },
    clicking: {
      type: Boolean,
      default: true
    },
    editing: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    path: {
      handler: function handler(val, oldVal) {
        this.reload();
      },
      deep: true
    },
    strokeColor: function strokeColor(val) {
      this.originInstance.setStrokeColor(val);
    },
    strokeOpacity: function strokeOpacity(val) {
      this.originInstance.setStrokeOpacity(val);
    },
    strokeWeight: function strokeWeight(val) {
      this.originInstance.setStrokeWeight(val);
    },
    strokeStyle: function strokeStyle(val) {
      this.originInstance.setStrokeStyle(val);
    },
    editing: function editing(val) {
      val ? this.originInstance.enableEditing() : this.originInstance.disableEditing();
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    },
    clicking: function clicking(val) {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          path = this.path,
          strokeColor = this.strokeColor,
          strokeWeight = this.strokeWeight,
          strokeOpacity = this.strokeOpacity,
          strokeStyle = this.strokeStyle,
          editing = this.editing,
          massClear = this.massClear,
          clicking = this.clicking;
      var overlay = new BMap.Polyline(path.map(function (item) {
        return Object(factory["d" /* createPoint */])(BMap, {
          lng: item.lng,
          lat: item.lat
        });
      }), {
        strokeColor: strokeColor,
        strokeWeight: strokeWeight,
        strokeOpacity: strokeOpacity,
        strokeStyle: strokeStyle,
        enableEditing: editing,
        enableMassClear: massClear,
        enableClicking: clicking
      });
      this.originInstance = overlay;
      map.addOverlay(overlay);
      bindEvent["a" /* default */].call(this, overlay);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Polyline.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Polylinevue_type_script_lang_js_ = (Polylinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Polyline.vue
var Polyline_render, Polyline_staticRenderFns




/* normalize component */

var Polyline_component = normalizeComponent(
  overlays_Polylinevue_type_script_lang_js_,
  Polyline_render,
  Polyline_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Polyline = (Polyline_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Polygon.vue?vue&type=script&lang=js&





/* harmony default export */ var Polygonvue_type_script_lang_js_ = ({
  name: 'bm-polygon',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    path: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    strokeColor: {
      type: String
    },
    strokeWeight: {
      type: Number
    },
    strokeOpacity: {
      type: Number
    },
    strokeStyle: {
      type: String
    },
    fillColor: {
      type: String
    },
    fillOpacity: {
      type: Number
    },
    massClear: {
      type: Boolean,
      default: true
    },
    clicking: {
      type: Boolean,
      default: true
    },
    editing: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    path: {
      handler: function handler(val, oldVal) {
        this.reload();
      },
      deep: true
    },
    strokeColor: function strokeColor(val) {
      this.originInstance.setStrokeColor(val);
    },
    strokeOpacity: function strokeOpacity(val) {
      this.originInstance.setStrokeOpacity(val);
    },
    strokeWeight: function strokeWeight(val) {
      this.originInstance.setStrokeWeight(val);
    },
    strokeStyle: function strokeStyle(val) {
      this.originInstance.setStrokeStyle(val);
    },
    fillColor: function fillColor(val) {
      this.originInstance.setFillColor(val);
    },
    fillOpacity: function fillOpacity(val) {
      this.originInstance.setFillOpacity(val);
    },
    editing: function editing(val) {
      val ? this.originInstance.enableEditing() : this.originInstance.disableEditing();
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    },
    clicking: function clicking(val) {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          path = this.path,
          strokeColor = this.strokeColor,
          strokeWeight = this.strokeWeight,
          strokeOpacity = this.strokeOpacity,
          strokeStyle = this.strokeStyle,
          fillColor = this.fillColor,
          fillOpacity = this.fillOpacity,
          editing = this.editing,
          massClear = this.massClear,
          clicking = this.clicking;
      var overlay = new BMap.Polygon(path.map(function (item) {
        return Object(factory["d" /* createPoint */])(BMap, {
          lng: item.lng,
          lat: item.lat
        });
      }), {
        strokeColor: strokeColor,
        strokeWeight: strokeWeight,
        strokeOpacity: strokeOpacity,
        strokeStyle: strokeStyle,
        fillColor: fillColor,
        fillOpacity: fillOpacity,
        // enableEditing: editing,
        enableMassClear: massClear,
        enableClicking: clicking
      });
      this.originInstance = overlay;
      map.addOverlay(overlay);
      bindEvent["a" /* default */].call(this, overlay); // 这里有一个诡异的bug，直接给 editing 赋值时会出现未知错误，因为使用下面的方法抹平。

      editing ? overlay.enableEditing() : overlay.disableEditing();
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Polygon.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Polygonvue_type_script_lang_js_ = (Polygonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Polygon.vue
var Polygon_render, Polygon_staticRenderFns




/* normalize component */

var Polygon_component = normalizeComponent(
  overlays_Polygonvue_type_script_lang_js_,
  Polygon_render,
  Polygon_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Polygon = (Polygon_component.exports);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
var es_array_index_of = __webpack_require__("c975");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Circle.vue?vue&type=script&lang=js&










/* harmony default export */ var Circlevue_type_script_lang_js_ = ({
  name: 'bm-circle',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    center: {},
    radius: {},
    strokeColor: {
      type: String
    },
    strokeWeight: {
      type: Number
    },
    strokeOpacity: {
      type: Number
    },
    strokeStyle: {
      type: String
    },
    fillColor: {
      type: String
    },
    fillOpacity: {
      type: Number
    },
    massClear: {
      type: Boolean,
      default: true
    },
    clicking: {
      type: Boolean,
      default: true
    },
    editing: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    'center.lng': function centerLng(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance,
          isEditing = this.isEditing,
          disableEditing = this.disableEditing,
          enableEditing = this.enableEditing,
          center = this.center,
          editing = this.editing;

      if (!isEditing) {
        disableEditing();
        var lng = val;

        if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {
          originInstance.setCenter(Object(factory["d" /* createPoint */])(BMap, {
            lng: lng,
            lat: center.lat
          }));
        }

        editing && enableEditing();
      }
    },
    'center.lat': function centerLat(val, oldVal) {
      var BMap = this.BMap,
          originInstance = this.originInstance,
          isEditing = this.isEditing,
          disableEditing = this.disableEditing,
          enableEditing = this.enableEditing,
          center = this.center,
          editing = this.editing;

      if (!isEditing) {
        disableEditing();
        var lat = val;

        if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {
          originInstance.setCenter(Object(factory["d" /* createPoint */])(BMap, {
            lng: center.lng,
            lat: lat
          }));
        }

        editing && enableEditing();
      }
    },
    radius: function radius(val, oldVal) {
      var originInstance = this.originInstance,
          isEditing = this.isEditing,
          disableEditing = this.disableEditing,
          enableEditing = this.enableEditing,
          editing = this.editing;

      if (!isEditing) {
        disableEditing();
        originInstance.setRadius(val);
        editing && enableEditing();
      }
    },
    strokeColor: function strokeColor(val) {
      this.originInstance.setStrokeColor(val);
    },
    strokeOpacity: function strokeOpacity(val) {
      this.originInstance.setStrokeOpacity(val);
    },
    strokeWeight: function strokeWeight(val) {
      this.originInstance.setStrokeWeight(val);
    },
    strokeStyle: function strokeStyle(val) {
      this.originInstance.setStrokeStyle(val);
    },
    fillColor: function fillColor(val) {
      this.originInstance.setFillColor(val);
    },
    fillOpacity: function fillOpacity(val) {
      this.originInstance.setFillOpacity(val);
    },
    editing: function editing(val) {
      val ? this.enableEditing() : this.disableEditing();
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    },
    clicking: function clicking(val) {
      this.reload();
    }
  },
  methods: {
    dragStartHandler: function dragStartHandler() {
      this.isEditing = true;
    },
    dragEndHandler: function dragEndHandler() {
      this.isEditing = false;
      this.bindEditingNodeEvents();
    },
    bindEditingNodeEvents: function bindEditingNodeEvents() {
      var originInstance = this.originInstance,
          editingKey = this.editingKey,
          dragStartHandler = this.dragStartHandler,
          dragEndHandler = this.dragEndHandler;
      originInstance[editingKey].forEach(function ($node) {
        $node.addEventListener('dragstart', dragStartHandler);
        $node.addEventListener('dragend', dragEndHandler);
      });
    },
    enableEditing: function enableEditing() {
      var originInstance = this.originInstance,
          bindEditingNodeEvents = this.bindEditingNodeEvents;
      originInstance.enableEditing();
      bindEditingNodeEvents();
    },
    disableEditing: function disableEditing() {
      var originInstance = this.originInstance;
      originInstance.disableEditing();
    },
    getEditingKey: function getEditingKey(overlay) {
      var _this = this;

      var stack = [];
      overlay.enableEditing();
      setTimeout(function () {
        for (var key in overlay) {
          if (overlay[key] && overlay[key].length === 2) {
            stack.push(key);
          }
        }

        overlay.disableEditing();

        for (var _key in overlay) {
          if (overlay[_key] && overlay[_key].length === 0 && ~stack.indexOf(_key)) {
            _this.editingKey = _key;
          }
        }
      }, 0);
    },
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          center = this.center,
          radius = this.radius,
          strokeColor = this.strokeColor,
          strokeWeight = this.strokeWeight,
          strokeOpacity = this.strokeOpacity,
          strokeStyle = this.strokeStyle,
          fillColor = this.fillColor,
          fillOpacity = this.fillOpacity,
          editing = this.editing,
          massClear = this.massClear,
          clicking = this.clicking,
          enableEditing = this.enableEditing,
          disableEditing = this.disableEditing,
          getEditingKey = this.getEditingKey,
          editingKey = this.editingKey;
      var overlay = new BMap.Circle(Object(factory["d" /* createPoint */])(BMap, {
        lng: center.lng,
        lat: center.lat
      }), radius, {
        strokeColor: strokeColor,
        strokeWeight: strokeWeight,
        strokeOpacity: strokeOpacity,
        strokeStyle: strokeStyle,
        fillColor: fillColor,
        fillOpacity: fillOpacity,
        // enableEditing: editing,
        enableMassClear: massClear,
        enableClicking: clicking
      });
      this.originInstance = overlay;
      map.addOverlay(overlay);
      bindEvent["a" /* default */].call(this, overlay); // 解决圆形组件无法双向绑定的问题

      !editingKey && getEditingKey(overlay);
      setTimeout(function () {
        editing ? enableEditing() : disableEditing();
      }, 0);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Circle.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Circlevue_type_script_lang_js_ = (Circlevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Circle.vue
var Circle_render, Circle_staticRenderFns




/* normalize component */

var Circle_component = normalizeComponent(
  overlays_Circlevue_type_script_lang_js_,
  Circle_render,
  Circle_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Circle = (Circle_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Ground.vue?vue&type=script&lang=js&





/* harmony default export */ var Groundvue_type_script_lang_js_ = ({
  name: 'bm-ground',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    bounds: {
      type: Object
    },
    opacity: {
      type: Number
    },
    imageURL: {
      type: String
    },
    displayOnMinLevel: {
      type: Number
    },
    displayOnMaxLevel: {
      type: Number
    }
  },
  watch: {
    bounds: {
      handler: function handler(val) {
        var BMap = this.BMap;
        this.originInstance.setBounds(Object(factory["a" /* createBounds */])(BMap, val));
      },
      deep: true
    },
    opacity: function opacity(val) {
      this.originInstance.setOpacity(val);
    },
    imageURL: function imageURL(val) {
      this.originInstance.setImageURL(val);
    },
    displayOnMinLevel: function displayOnMinLevel(val) {
      this.originInstance.setDisplayOnMinLevel(val);
    },
    displayOnMaxLevel: function displayOnMaxLevel(val) {
      this.originInstance.setDisplayOnMaxLevel(val);
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          bounds = this.bounds,
          opacity = this.opacity,
          imageURL = this.imageURL,
          displayOnMinLevel = this.displayOnMinLevel,
          displayOnMaxLevel = this.displayOnMaxLevel;
      var overlay = new BMap.GroundOverlay(bounds && Object(factory["a" /* createBounds */])(BMap, bounds), {
        opacity: opacity,
        imageURL: imageURL,
        displayOnMaxLevel: displayOnMaxLevel,
        displayOnMinLevel: displayOnMinLevel
      }); // option 中配置 https 协议地址无法加载

      overlay.setImageURL(imageURL);
      this.originInstance = overlay;
      bindEvent["a" /* default */].call(this, overlay);
      map.addOverlay(overlay);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Ground.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Groundvue_type_script_lang_js_ = (Groundvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Ground.vue
var Ground_render, Ground_staticRenderFns




/* normalize component */

var Ground_component = normalizeComponent(
  overlays_Groundvue_type_script_lang_js_,
  Ground_render,
  Ground_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Ground = (Ground_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Label.vue?vue&type=script&lang=js&







/* harmony default export */ var Labelvue_type_script_lang_js_ = ({
  name: 'bm-label',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    content: {
      type: String
    },
    title: {
      type: String
    },
    offset: {},
    position: {},
    labelStyle: {},
    zIndex: {
      type: Number,
      default: 0
    },
    massClear: {
      type: Boolean,
      default: true
    }
  },
  watch: {
    content: function content(val) {
      this.originInstance.setContent(val);
    },
    title: function title(val) {
      this.originInstance.setTitle(val);
    },
    'offset.width': function offsetWidth(val, oldVal) {
      var BMap = this.BMap;

      if (val.toString() !== oldVal.toString()) {
        this.originInstance.setOffset(Object(factory["e" /* createSize */])(BMap, {
          width: val,
          height: this.offset.height
        }));
      }
    },
    'offset.height': function offsetHeight(val, oldVal) {
      var BMap = this.BMap;

      if (val.toString() !== oldVal.toString()) {
        this.originInstance.setOffset(Object(factory["e" /* createSize */])(BMap, {
          width: this.offset.width,
          height: val
        }));
      }
    },
    'position.lng': function positionLng(val, oldVal) {
      var BMap = this.BMap;
      var lng = val;

      if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {
        this.originInstance.setCenter(Object(factory["d" /* createPoint */])(BMap, {
          lng: lng,
          lat: this.center.lat
        }));
      }
    },
    'position.lat': function positionLat(val, oldVal) {
      var BMap = this.BMap;
      var lat = val;

      if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {
        this.originInstance.setCenter(Object(factory["d" /* createPoint */])(BMap, {
          lng: this.center.lng,
          lat: lat
        }));
      }
    },
    labelStyle: {
      handler: function handler(val) {
        this.originInstance.setStyle(val);
      },
      deep: true
    },
    zIndex: function zIndex(val) {
      this.originInstance.setZIndex(val);
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          content = this.content,
          title = this.title,
          offset = this.offset,
          position = this.position,
          labelStyle = this.labelStyle,
          zIndex = this.zIndex,
          massClear = this.massClear,
          $parent = this.$parent;
      var overlay = new BMap.Label(content, {
        offset: Object(factory["e" /* createSize */])(BMap, offset),
        position: Object(factory["d" /* createPoint */])(BMap, position),
        enableMassClear: massClear
      });
      this.originInstance = overlay;

      try {
        $parent.originInstance.setLabel(overlay);
      } catch (e) {
        map.addOverlay(overlay);
      }

      title && overlay.setTitle(title);
      labelStyle && overlay.setStyle(labelStyle);
      zIndex && overlay.setZIndex(zIndex);
      bindEvent["a" /* default */].call(this, overlay);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Label.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Labelvue_type_script_lang_js_ = (Labelvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Label.vue
var Label_render, Label_staticRenderFns




/* normalize component */

var Label_component = normalizeComponent(
  overlays_Labelvue_type_script_lang_js_,
  Label_render,
  Label_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Label = (Label_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=template&id=6b5c0453&
var InfoWindowvue_type_template_id_6b5c0453_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}]},[_vm._t("default")],2)}
var InfoWindowvue_type_template_id_6b5c0453_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=template&id=6b5c0453&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=script&lang=js&
var InfoWindowvue_type_script_lang_js_ = __webpack_require__("7b51");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_InfoWindowvue_type_script_lang_js_ = (InfoWindowvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/InfoWindow.vue





/* normalize component */

var InfoWindow_component = normalizeComponent(
  overlays_InfoWindowvue_type_script_lang_js_,
  InfoWindowvue_type_template_id_6b5c0453_render,
  InfoWindowvue_type_template_id_6b5c0453_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var InfoWindow = (InfoWindow_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Overlay.vue?vue&type=template&id=94244088&
var Overlayvue_type_template_id_94244088_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t("default")],2)}
var Overlayvue_type_template_id_94244088_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Overlay.vue?vue&type=template&id=94244088&

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.reflect.construct.js
var es_reflect_construct = __webpack_require__("4ae1");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__("3410");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js



function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("e260");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js







function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js




function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/overlays/Overlay.vue?vue&type=script&lang=js&





//
//
//
//
//
//

/* harmony default export */ var Overlayvue_type_script_lang_js_ = ({
  name: 'bm-overlay',
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    pane: {
      type: String
    }
  },
  watch: {
    pane: function pane() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          $el = this.$el,
          pane = this.pane;
      var $emit = this.$emit.bind(this);

      var CustomOverlay = /*#__PURE__*/function (_BMap$Overlay) {
        _inherits(CustomOverlay, _BMap$Overlay);

        var _super = _createSuper(CustomOverlay);

        function CustomOverlay() {
          _classCallCheck(this, CustomOverlay);

          return _super.apply(this, arguments);
        }

        _createClass(CustomOverlay, [{
          key: "initialize",
          value: function initialize() {
            $emit('initialize', {
              BMap: BMap,
              map: map,
              el: $el,
              overlay: this
            });

            try {
              map.getPanes()[pane].appendChild($el);
            } catch (e) {}

            return $el;
          }
        }, {
          key: "draw",
          value: function draw() {
            $emit('draw', {
              BMap: BMap,
              map: map,
              el: $el,
              overlay: this
            });
          }
        }]);

        return CustomOverlay;
      }(BMap.Overlay);

      var overlay = new CustomOverlay();
      this.originInstance = overlay;
      map.addOverlay(overlay);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Overlay.vue?vue&type=script&lang=js&
 /* harmony default export */ var overlays_Overlayvue_type_script_lang_js_ = (Overlayvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/overlays/Overlay.vue





/* normalize component */

var Overlay_component = normalizeComponent(
  overlays_Overlayvue_type_script_lang_js_,
  Overlayvue_type_template_id_94244088_render,
  Overlayvue_type_template_id_94244088_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Overlay = (Overlay_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/context-menu/Menu.vue?vue&type=template&id=463e006b&
var Menuvue_type_template_id_463e006b_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t("default")],2)}
var Menuvue_type_template_id_463e006b_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Menu.vue?vue&type=template&id=463e006b&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/context-menu/Menu.vue?vue&type=script&lang=js&



//
//
//
//
//
//

/* harmony default export */ var Menuvue_type_script_lang_js_ = ({
  name: 'bm-context-menu',
  props: {
    width: {
      type: Number
    }
  },
  mixins: [Object(common["a" /* default */])('contextMenu')],
  methods: {
    load: function load() {
      var width = this.width,
          BMap = this.BMap,
          map = this.map,
          $parent = this.$parent;
      var parent = this.parent = $parent.originInstance || map;

      if (this.originInstance) {
        parent.removeContextMenu(this.originInstance);
      }

      var menu = this.originInstance = new BMap.ContextMenu();

      var _iterator = Object(createForOfIteratorHelper["a" /* default */])(this.$children),
          _step;

      try {
        var _loop = function _loop() {
          var item = _step.value;

          if (item.seperator) {
            menu.addSeparator();
            return "continue";
          }

          var menuItem = new BMap.MenuItem(item.text, function (point, pixel) {
            item.callback({
              point: point,
              pixel: pixel,
              BMap: BMap,
              map: map,
              target: parent
            });
          }, {
            width: width,
            id: item.id,
            iconUrl: item.iconUrl
          });
          item.disabled ? menuItem.disable() : menuItem.enable();
          item.originInstance = menuItem;
          menu.addItem(menuItem);
        };

        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _ret = _loop();

          if (_ret === "continue") continue;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      parent.addContextMenu(menu);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var context_menu_Menuvue_type_script_lang_js_ = (Menuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Menu.vue





/* normalize component */

var Menu_component = normalizeComponent(
  context_menu_Menuvue_type_script_lang_js_,
  Menuvue_type_template_id_463e006b_render,
  Menuvue_type_template_id_463e006b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Menu = (Menu_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/context-menu/Item.vue?vue&type=template&id=3e9cc08b&
var Itemvue_type_template_id_3e9cc08b_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._t("default")],2)}
var Itemvue_type_template_id_3e9cc08b_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Item.vue?vue&type=template&id=3e9cc08b&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/context-menu/Item.vue?vue&type=script&lang=js&

//
//
//
//
//
/* harmony default export */ var Itemvue_type_script_lang_js_ = ({
  name: 'bm-context-menu-item',
  props: {
    callback: {
      type: Function,
      default: function _default() {}
    },
    text: {
      type: String
    },
    iconUrl: {
      type: String
    },
    id: {
      type: String
    },
    disabled: {
      type: Boolean
    },
    seperator: {
      type: Boolean
    }
  },
  methods: {
    reload: function reload() {
      this.$parent.map && this.$parent.load();
    }
  },
  watch: {
    text: function text() {
      this.reload();
    },
    iconUrl: function iconUrl() {
      this.reload();
    },
    id: function id() {
      this.reload();
    },
    disabled: function disabled() {
      this.reload();
    },
    iseperator: function iseperator() {
      this.reload();
    },
    callback: function callback() {
      this.reload();
    }
  },
  destroyed: function destroyed() {
    this.reload();
  },
  mounted: function mounted() {
    this.reload();
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Item.vue?vue&type=script&lang=js&
 /* harmony default export */ var context_menu_Itemvue_type_script_lang_js_ = (Itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/context-menu/Item.vue





/* normalize component */

var Item_component = normalizeComponent(
  context_menu_Itemvue_type_script_lang_js_,
  Itemvue_type_template_id_3e9cc08b_render,
  Itemvue_type_template_id_3e9cc08b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Item = (Item_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/LocalSearch.vue?vue&type=template&id=281ec2d5&
var LocalSearchvue_type_template_id_281ec2d5_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.panel),expression:"panel"}]},[_vm._t("default")],2)}
var LocalSearchvue_type_template_id_281ec2d5_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/LocalSearch.vue?vue&type=template&id=281ec2d5&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("ac1f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.search.js
var es_string_search = __webpack_require__("841c");

// EXTERNAL MODULE: ./node_modules/vue-baidu-map/components/base/util.js
var util = __webpack_require__("33d3");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/LocalSearch.vue?vue&type=script&lang=js&




//
//
//
//
//
//



/* harmony default export */ var LocalSearchvue_type_script_lang_js_ = ({
  name: 'bm-local-search',
  mixins: [Object(common["a" /* default */])('search')],
  props: {
    location: {
      type: [Object, String]
    },
    keyword: {
      type: [Array, String]
    },
    panel: {
      type: Boolean,
      default: true
    },
    forceLocal: {
      type: Boolean
    },
    customData: {
      type: Object
    },
    bounds: {
      type: Object
    },
    nearby: {
      type: Object
    },
    // page: {
    //   type: Number
    // },
    pageCapacity: {
      type: Number
    },
    autoViewport: {
      type: Boolean
    },
    selectFirstResult: {
      type: Boolean
    }
  },
  watch: {
    location: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            search = this.search;
        originInstance.setLocation(val || this.map);
        search();
      },
      deep: true
    },
    keyword: function keyword() {
      this.search();
    },
    bounds: {
      handler: function handler(val) {
        var searchInBounds = this.searchInBounds;
        searchInBounds(val);
      },
      deep: true
    },
    nearby: {
      handler: function handler(val) {
        var searchNearby = this.searchNearby;
        searchNearby(val);
      },
      deep: true
    },
    forceLocal: function forceLocal() {
      this.reload();
    },
    customData: {
      deep: true,
      handler: function handler() {
        this.reload();
      }
    },
    // panel () {
    //   this.reload()
    // },
    pageCapacity: function pageCapacity(val) {
      this.originInstance && this.originInstance.setPageCapacity(val);
    },
    autoViewport: function autoViewport(val) {
      this.originInstance && (val ? this.originInstance.enableAutoViewport() : this.originInstance.disableAutoViewport());
    },
    selectFirstResult: function selectFirstResult(val) {
      this.originInstance && (val ? this.originInstance.enableFirstResultSelection() : this.originInstance.disableFirstResultSelection());
    },
    highlightMode: function highlightMode() {
      this.reload();
    }
  },
  methods: {
    searchNearby: function searchNearby(nearby) {
      var originInstance = this.originInstance,
          keyword = this.keyword,
          customData = this.customData,
          BMap = this.BMap;
      originInstance.searchNearby(keyword, Object(factory["d" /* createPoint */])(BMap, nearby.center), nearby.radius, customData);
    },
    searchInBounds: function searchInBounds(bounds) {
      var originInstance = this.originInstance,
          keyword = this.keyword,
          customData = this.customData,
          BMap = this.BMap;
      originInstance.searchInBounds(keyword, Object(factory["a" /* createBounds */])(BMap, bounds), customData);
    },
    search: function search() {
      var originInstance = this.originInstance,
          keyword = this.keyword,
          forceLocal = this.forceLocal,
          customData = this.customData,
          nearby = this.nearby,
          bounds = this.bounds,
          searchNearby = this.searchNearby,
          searchInBounds = this.searchInBounds;
      nearby ? searchNearby(nearby) : bounds ? searchInBounds(bounds) : originInstance.search(keyword, {
        forceLocal: forceLocal,
        customData: customData
      });
    },
    load: function load() {
      var instance = this;
      var map = this.map,
          BMap = this.BMap,
          search = this.search,
          pageCapacity = this.pageCapacity,
          autoViewport = this.autoViewport,
          selectFirstResult = this.selectFirstResult,
          highlightMode = this.highlightMode,
          location = this.location,
          originInstance = this.originInstance;

      var _location = location ? Object(util["c" /* isPoint */])(location) ? Object(factory["d" /* createPoint */])(BMap, location) : location : map;

      var route = this.originInstance = new BMap.LocalSearch(_location, {
        onMarkersSet: function onMarkersSet(e) {
          instance.$emit('markersset', e);
        },
        onInfoHtmlSet: function onInfoHtmlSet(e) {
          instance.$emit('infohtmlset', e);
        },
        onResultsHtmlSet: function onResultsHtmlSet(e) {
          instance.$emit('resultshtmlset', e);
        },
        onSearchComplete: function onSearchComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('searchcomplete', e);
        },
        pageCapacity: pageCapacity,
        renderOptions: {
          map: map,
          // panel: panel && this.$el,
          panel: this.$el,
          selectFirstResult: selectFirstResult,
          autoViewport: autoViewport,
          highlightMode: highlightMode
        }
      });
      search();
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/LocalSearch.vue?vue&type=script&lang=js&
 /* harmony default export */ var search_LocalSearchvue_type_script_lang_js_ = (LocalSearchvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/LocalSearch.vue





/* normalize component */

var LocalSearch_component = normalizeComponent(
  search_LocalSearchvue_type_script_lang_js_,
  LocalSearchvue_type_template_id_281ec2d5_render,
  LocalSearchvue_type_template_id_281ec2d5_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var LocalSearch = (LocalSearch_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Transit.vue?vue&type=template&id=6978b94a&
var Transitvue_type_template_id_6978b94a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.panel),expression:"panel"}]},[_vm._t("default")],2)}
var Transitvue_type_template_id_6978b94a_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Transit.vue?vue&type=template&id=6978b94a&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Transit.vue?vue&type=script&lang=js&
var Transitvue_type_script_lang_js_ = __webpack_require__("16d1");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Transit.vue?vue&type=script&lang=js&
 /* harmony default export */ var search_Transitvue_type_script_lang_js_ = (Transitvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Transit.vue





/* normalize component */

var Transit_component = normalizeComponent(
  search_Transitvue_type_script_lang_js_,
  Transitvue_type_template_id_6978b94a_render,
  Transitvue_type_template_id_6978b94a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Transit = (Transit_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Walking.vue?vue&type=template&id=3db0ebfa&
var Walkingvue_type_template_id_3db0ebfa_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.panel),expression:"panel"}]},[_vm._t("default")],2)}
var Walkingvue_type_template_id_3db0ebfa_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Walking.vue?vue&type=template&id=3db0ebfa&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Walking.vue?vue&type=script&lang=js&




//
//
//
//
//
//



/* harmony default export */ var Walkingvue_type_script_lang_js_ = ({
  name: 'bm-walking',
  mixins: [Object(common["a" /* default */])('search')],
  props: {
    location: {
      type: [Object, String]
    },
    start: {
      type: [Object, String]
    },
    end: {
      type: [Object, String]
    },
    panel: {
      type: Boolean,
      default: true
    },
    pageCapacity: {
      type: Number
    },
    autoViewport: {
      type: Boolean
    },
    selectFirstResult: {
      type: Boolean
    }
  },
  watch: {
    location: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            map = this.map;
        originInstance.setLocation(val || map);
      },
      deep: true
    },
    start: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            end = this.end,
            BMap = this.BMap;
        originInstance.search(Object(util["b" /* getPosition */])(BMap, val), Object(util["b" /* getPosition */])(BMap, end));
      },
      deep: true
    },
    end: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            start = this.start,
            BMap = this.BMap;
        originInstance.search(Object(util["b" /* getPosition */])(BMap, start), Object(util["b" /* getPosition */])(BMap, val));
      },
      deep: true
    },
    panel: function panel() {
      this.reload();
    },
    autoViewport: function autoViewport(val) {
      this.reload();
    },
    selectFirstResult: function selectFirstResult(val) {
      this.reload();
    },
    highlightMode: function highlightMode() {
      this.reload();
    }
  },
  methods: {
    search: function search(start, end) {
      var originInstance = this.originInstance;
      originInstance.search(start, end);
    },
    load: function load() {
      var instance = this;
      var map = this.map,
          BMap = this.BMap,
          location = this.location,
          selectFirstResult = this.selectFirstResult,
          autoViewport = this.autoViewport,
          highlightMode = this.highlightMode,
          search = this.search,
          start = this.start,
          end = this.end,
          originInstance = this.originInstance;

      var _location = location ? Object(util["c" /* isPoint */])(location) ? Object(factory["d" /* createPoint */])(BMap, location) : location : map;

      var route = this.originInstance = new BMap.WalkingRoute(_location, {
        renderOptions: {
          map: map,
          // panel: panel && this.$el,
          panel: this.$el,
          selectFirstResult: selectFirstResult,
          autoViewport: autoViewport,
          highlightMode: highlightMode
        },
        onSearchComplete: function onSearchComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('searchcomplete', e);
        },
        onMarkersSet: function onMarkersSet(e) {
          instance.$emit('markersset', e);
        },
        onInfoHtmlSet: function onInfoHtmlSet(e) {
          instance.$emit('infohtmlset', e);
        },
        onPolylinesSet: function onPolylinesSet(e) {
          instance.$emit('polylinesset', e);
        },
        onResultsHtmlSet: function onResultsHtmlSet(e) {
          instance.$emit('resultshtmlset', e);
        }
      });
      search(Object(util["c" /* isPoint */])(start) ? Object(factory["d" /* createPoint */])(BMap, start) : start, Object(util["c" /* isPoint */])(end) ? Object(factory["d" /* createPoint */])(BMap, end) : end);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Walking.vue?vue&type=script&lang=js&
 /* harmony default export */ var search_Walkingvue_type_script_lang_js_ = (Walkingvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Walking.vue





/* normalize component */

var Walking_component = normalizeComponent(
  search_Walkingvue_type_script_lang_js_,
  Walkingvue_type_template_id_3db0ebfa_render,
  Walkingvue_type_template_id_3db0ebfa_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Walking = (Walking_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Driving.vue?vue&type=template&id=01f26479&
var Drivingvue_type_template_id_01f26479_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.panel),expression:"panel"}]},[_vm._t("default")],2)}
var Drivingvue_type_template_id_01f26479_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Driving.vue?vue&type=template&id=01f26479&

// EXTERNAL MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Driving.vue?vue&type=script&lang=js&
var Drivingvue_type_script_lang_js_ = __webpack_require__("b0f5");

// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Driving.vue?vue&type=script&lang=js&
 /* harmony default export */ var search_Drivingvue_type_script_lang_js_ = (Drivingvue_type_script_lang_js_["a" /* default */]); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Driving.vue





/* normalize component */

var Driving_component = normalizeComponent(
  search_Drivingvue_type_script_lang_js_,
  Drivingvue_type_template_id_01f26479_render,
  Drivingvue_type_template_id_01f26479_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Driving = (Driving_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Bus.vue?vue&type=template&id=55bc20dc&
var Busvue_type_template_id_55bc20dc_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.panel),expression:"panel"}]})}
var Busvue_type_template_id_55bc20dc_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Bus.vue?vue&type=template&id=55bc20dc&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/search/Bus.vue?vue&type=script&lang=js&




//
//
//
//
//



/* harmony default export */ var Busvue_type_script_lang_js_ = ({
  name: 'bm-bus',
  mixins: [Object(common["a" /* default */])('search')],
  props: {
    location: {
      type: [Object, String]
    },
    keyword: {
      type: String
    },
    panel: {
      type: Boolean,
      default: true
    },
    pageCapacity: {
      type: Number
    },
    autoViewport: {
      type: Boolean
    },
    selectFirstResult: {
      type: Boolean
    }
  },
  watch: {
    location: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            map = this.map;
        originInstance.setLocation(val || map);
      },
      deep: true
    },
    keyword: function keyword(val) {
      this.search(val);
    },
    panel: function panel() {
      this.reload();
    },
    autoViewport: function autoViewport(val) {
      this.reload();
    },
    selectFirstResult: function selectFirstResult(val) {
      this.reload();
    }
  },
  methods: {
    search: function search(keyword) {
      var originInstance = this.originInstance;
      originInstance.getBusList(keyword);
    },
    load: function load() {
      var instance = this;
      var location = this.location,
          selectFirstResult = this.selectFirstResult,
          autoViewport = this.autoViewport,
          highlightMode = this.highlightMode,
          keyword = this.keyword,
          search = this.search,
          BMap = this.BMap,
          map = this.map,
          originInstance = this.originInstance;

      var _location = location ? Object(util["c" /* isPoint */])(location) ? Object(factory["d" /* createPoint */])(BMap, location) : location : map;

      var route = this.originInstance = new BMap.BusLineSearch(_location, {
        renderOptions: {
          map: map,
          panel: this.$el,
          selectFirstResult: selectFirstResult,
          autoViewport: autoViewport,
          highlightMode: highlightMode
        },
        onGetBusListComplete: function onGetBusListComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('getbuslistcomplete', e);
        },
        onGetBusLineComplete: function onGetBusLineComplete(e) {
          if (originInstance && originInstance !== route) {
            originInstance.clearResults();
          }

          instance.$emit('getbuslinecomplete', e);
        },
        onBusListHtmlSet: function onBusListHtmlSet(e) {
          instance.$emit('buslisthtmlset', e);
        },
        onBusLineHtmlSet: function onBusLineHtmlSet(e) {
          instance.$emit('buslinehtmlset', e);
        },
        onMarkersSet: function onMarkersSet(e) {
          instance.$emit('markersset', e);
        },
        onPolylinesSet: function onPolylinesSet(e) {
          instance.$emit('polylinesset', e);
        }
      });
      search(keyword);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Bus.vue?vue&type=script&lang=js&
 /* harmony default export */ var search_Busvue_type_script_lang_js_ = (Busvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/search/Bus.vue





/* normalize component */

var Bus_component = normalizeComponent(
  search_Busvue_type_script_lang_js_,
  Busvue_type_template_id_55bc20dc_render,
  Busvue_type_template_id_55bc20dc_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Bus = (Bus_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/layers/Tile.vue?vue&type=script&lang=js&




/* harmony default export */ var Tilevue_type_script_lang_js_ = ({
  name: 'bm-tile',
  render: function render(h) {},
  mixins: [Object(common["a" /* default */])('layer')],
  props: {
    transparentPng: {
      type: Boolean
    },
    tileUrlTemplate: {
      type: String
    },
    copyright: {},
    zIndex: {
      type: Number
    }
  },
  watch: {
    transparentPng: function transparentPng() {
      this.reload();
    },
    tileUrlTemplate: function tileUrlTemplate() {
      this.reload();
    },
    copyright: function copyright() {
      this.reload();
    },
    zIndex: function zIndex() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          transparentPng = this.transparentPng,
          tileUrlTemplate = this.tileUrlTemplate,
          copyright = this.copyright,
          zIndex = this.zIndex;
      this.originInstance = new BMap.TileLayer({
        transparentPng: transparentPng,
        tileUrlTemplate: tileUrlTemplate,
        copyright: copyright && {
          id: copyright.id,
          content: copyright.content,
          bounds: copyright.bounds && Object(factory["a" /* createBounds */])(copyright.bounds)
        },
        zIndex: zIndex
      });
      map.addTileLayer(this.originInstance);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/layers/Tile.vue?vue&type=script&lang=js&
 /* harmony default export */ var layers_Tilevue_type_script_lang_js_ = (Tilevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/layers/Tile.vue
var Tile_render, Tile_staticRenderFns




/* normalize component */

var Tile_component = normalizeComponent(
  layers_Tilevue_type_script_lang_js_,
  Tile_render,
  Tile_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Tile = (Tile_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/layers/Traffic.vue?vue&type=script&lang=js&


/* harmony default export */ var Trafficvue_type_script_lang_js_ = ({
  name: 'bm-triffic',
  render: function render(h) {},
  mixins: [Object(common["a" /* default */])('layer')],
  props: {
    predictDate: {
      type: Object
    }
  },
  watch: {
    'pridictDate.weekday': function pridictDateWeekday() {
      this.reload();
    },
    'pridictDate.hour': function pridictDateHour() {
      this.reload();
    },
    pridictDate: function pridictDate() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var pridictDate = this.pridictDate,
          BMap = this.BMap,
          map = this.map;
      this.originInstance = new BMap.TrafficLayer({
        pridictDate: pridictDate
      });
      map.addTileLayer(this.originInstance);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/layers/Traffic.vue?vue&type=script&lang=js&
 /* harmony default export */ var layers_Trafficvue_type_script_lang_js_ = (Trafficvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/layers/Traffic.vue
var Traffic_render, Traffic_staticRenderFns




/* normalize component */

var Traffic_component = normalizeComponent(
  layers_Trafficvue_type_script_lang_js_,
  Traffic_render,
  Traffic_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Traffic = (Traffic_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/others/Boundary.vue?vue&type=template&id=b3544044&
var Boundaryvue_type_template_id_b3544044_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.paths.length)?_c('div',_vm._l((_vm.paths),function(path,index){return _c('bm-polygon',{key:index,attrs:{"path":path,"stroke-color":_vm.strokeColor,"stroke-weight":_vm.strokeWeight,"stroke-opacity":_vm.strokeOpacity,"stroke-style":_vm.strokeStyle,"fill-opacity":_vm.fillOpacity,"fill-color":_vm.fillColor,"mass-clear":_vm.massClear,"clicking":_vm.clicking},on:{"click":function($event){return _vm.$emit('click', $event)},"dblclick":function($event){return _vm.$emit('dblclick', $event)},"mousedown":function($event){return _vm.$emit('mousedown', $event)},"mouseup":function($event){return _vm.$emit('mouseup', $event)},"mouseout":function($event){return _vm.$emit('mouseout', $event)},"mouseover":function($event){return _vm.$emit('mouseover', $event)},"remove":function($event){return _vm.$emit('remove', $event)}}})}),1):_vm._e()}
var Boundaryvue_type_template_id_b3544044_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/Boundary.vue?vue&type=template&id=b3544044&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("1276");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js







function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js + 1 modules
var unsupportedIterableToArray = __webpack_require__("06c5");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray["a" /* default */])(arr, i) || _nonIterableRest();
}
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/others/Boundary.vue?vue&type=script&lang=js&





//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

 // import abstractMixin from '../base/mixins/abstract.js'

/* harmony default export */ var Boundaryvue_type_script_lang_js_ = ({
  mixins: [Object(common["a" /* default */])('abstract')],
  props: ['name', 'strokeColor', 'strokeWeight', 'strokeOpacity', 'strokeStyle', 'fillColor', 'fillOpacity', 'massClear', 'clicking'],
  data: function data() {
    return {
      paths: []
    };
  },
  components: {
    BmPolygon: Polygon
  },
  watch: {
    name: function name() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var _this = this;

      var BMap = this.BMap,
          name = this.name;
      var bd = new BMap.Boundary();
      bd.get(name, function (data) {
        _this.paths = data.boundaries.map(function (boundary) {
          return (boundary || []).split(';').map(function (point) {
            return function (_ref) {
              var _ref2 = _slicedToArray(_ref, 2),
                  lng = _ref2[0],
                  lat = _ref2[1];

              return {
                lng: lng,
                lat: lat
              };
            }(point.split(',').map(function (p) {
              return +p;
            }));
          });
        });
      });
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/Boundary.vue?vue&type=script&lang=js&
 /* harmony default export */ var others_Boundaryvue_type_script_lang_js_ = (Boundaryvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/Boundary.vue





/* normalize component */

var Boundary_component = normalizeComponent(
  others_Boundaryvue_type_script_lang_js_,
  Boundaryvue_type_template_id_b3544044_render,
  Boundaryvue_type_template_id_b3544044_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Boundary = (Boundary_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/others/AutoComplete.vue?vue&type=template&id=16a5e391&
var AutoCompletevue_type_template_id_16a5e391_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._t("default",[_c('input')])],2)}
var AutoCompletevue_type_template_id_16a5e391_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/AutoComplete.vue?vue&type=template&id=16a5e391&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/others/AutoComplete.vue?vue&type=script&lang=js&




//
//
//
//
//
//
//
//


/* harmony default export */ var AutoCompletevue_type_script_lang_js_ = ({
  name: 'bm-autocomplete',
  mixins: [Object(common["a" /* default */])()],
  props: {
    types: {
      type: String
    },
    location: {
      type: String
    },
    sugStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  watch: {
    types: function types() {
      this.reload();
    },
    location: function location() {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var _this = this;

      var BMap = this.BMap,
          map = this.map,
          $el = this.$el,
          types = this.types,
          location = this.location,
          sugStyle = this.sugStyle;
      var input = $el.querySelector('input');

      if (!input) {
        return;
      }

      this.originInstance = new BMap.Autocomplete({
        input: input,
        types: types,
        location: location || map,
        onSearchComplete: function onSearchComplete(e) {
          var $sugs = document.querySelectorAll('.tangram-suggestion-main');

          var _iterator = Object(createForOfIteratorHelper["a" /* default */])($sugs),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var $sug = _step.value;

              for (var name in sugStyle) {
                $sug.style[name] = sugStyle[name].toString();
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          _this.$emit('searchcomplete', e);
        }
      }); // Support v-model

      this.originInstance.addEventListener('onconfirm', function (e) {
        var val = e.item.value;

        _this.$emit('input', val.province + val.city + val.district + val.street + val.business);
      });
      bindEvent["a" /* default */].call(this, this.originInstance);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/AutoComplete.vue?vue&type=script&lang=js&
 /* harmony default export */ var others_AutoCompletevue_type_script_lang_js_ = (AutoCompletevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/others/AutoComplete.vue





/* normalize component */

var AutoComplete_component = normalizeComponent(
  others_AutoCompletevue_type_script_lang_js_,
  AutoCompletevue_type_template_id_16a5e391_render,
  AutoCompletevue_type_template_id_16a5e391_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var AutoComplete = (AutoComplete_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue?vue&type=template&id=02bae26d&
var MarkerClusterervue_type_template_id_02bae26d_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._t("default")],2)}
var MarkerClusterervue_type_template_id_02bae26d_staticRenderFns = []


// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue?vue&type=template&id=02bae26d&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/bmaplib.markerclusterer/index.js
var bmaplib_markerclusterer = __webpack_require__("c296");
var bmaplib_markerclusterer_default = /*#__PURE__*/__webpack_require__.n(bmaplib_markerclusterer);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue?vue&type=script&lang=js&



//
//
//
//
//
//



/* harmony default export */ var MarkerClusterervue_type_script_lang_js_ = ({
  name: 'bml-marker-clusterer',
  mixins: [Object(common["a" /* default */])('markerClusterer')],
  props: {
    gridSize: {
      type: Object
    },
    maxZoom: {
      type: Number
    },
    minClusterSize: {
      type: Number
    },
    styles: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    averageCenter: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    gridSize: {
      handler: function handler(val) {
        var BMap = this.BMap,
            originInstance = this.originInstance;
        originInstance.setGridSize(BMap, val.map);
      },
      deep: true
    },
    maxZoom: function maxZoom(val) {
      var originInstance = this.originInstance;
      originInstance.setMaxZoom(val);
    },
    minClusterSize: {
      handler: function handler(val) {
        var BMap = this.BMap,
            originInstance = this.originInstance;
        originInstance.setMinClusterSize(Object(factory["e" /* createSize */])(BMap, val));
      },
      deep: true
    },
    styles: {
      handler: function handler(val) {
        var BMap = this.BMap,
            originInstance = this.originInstance;
        var obj = JSON.parse(JSON.stringify(val)).map(function (item) {
          item.size = item.size && Object(factory["e" /* createSize */])(BMap, item.size);
          return item;
        });
        originInstance.setStyles(obj);
      },
      deep: true
    },
    averageCenter: function averageCenter(val) {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var _this = this;

      var BMap = this.BMap,
          map = this.map,
          gridSize = this.gridSize,
          minClusterSize = this.minClusterSize,
          maxZoom = this.maxZoom,
          styles = this.styles,
          averageCenter = this.averageCenter;
      this.originInstance = new bmaplib_markerclusterer_default.a(map, {
        gridSize: gridSize && Object(factory["e" /* createSize */])(BMap, gridSize),
        maxZoom: maxZoom,
        minClusterSize: minClusterSize && Object(factory["e" /* createSize */])(BMap, minClusterSize),
        styles: styles.map(function (item) {
          item.size = Object(factory["e" /* createSize */])(BMap, item.size);
          return item;
        }),
        isAverageCenter: averageCenter
      });
      this.$nextTick(function () {
        var markers = _this.$children.map(function (inst) {
          return inst.originInstance;
        }).filter(function (marker) {
          return marker instanceof BMap.Marker;
        });

        _this.originInstance.addMarkers(markers);
      });
    }
  },
  beforeCreate: function beforeCreate() {
    this.preventChildrenRender = true;
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue?vue&type=script&lang=js&
 /* harmony default export */ var extra_MarkerClusterervue_type_script_lang_js_ = (MarkerClusterervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue





/* normalize component */

var MarkerClusterer_component = normalizeComponent(
  extra_MarkerClusterervue_type_script_lang_js_,
  MarkerClusterervue_type_template_id_02bae26d_render,
  MarkerClusterervue_type_template_id_02bae26d_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var MarkerClusterer = (MarkerClusterer_component.exports);
// EXTERNAL MODULE: ./node_modules/bmaplib.lushu/index.js
var bmaplib_lushu = __webpack_require__("4b0c");
var bmaplib_lushu_default = /*#__PURE__*/__webpack_require__.n(bmaplib_lushu);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/extra/Lushu.vue?vue&type=script&lang=js&



/*eslint-disable*/



/* harmony default export */ var Lushuvue_type_script_lang_js_ = ({
  name: 'bm-lushu',
  render: function render(h) {},
  mixins: [Object(common["a" /* default */])('lushu')],
  props: {
    path: {
      type: Array,
      default: []
    },
    landmarkPois: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    icon: {
      type: Object
    },
    speed: {
      type: Number,
      default: 4000
    },
    content: {
      type: String,
      default: ''
    },
    autoView: {
      type: Boolean,
      default: false
    },
    rotation: {
      type: Boolean,
      default: false
    },
    infoWindow: {
      type: Boolean,
      default: true
    },
    play: {
      type: Boolean,
      default: true
    }
  },
  watch: {
    path: {
      handler: function handler(val) {
        this.reload();
      },
      deep: true
    },
    landmarkPois: {
      handler: function handler(val) {
        this.reload();
      },
      deep: true
    },
    icon: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            content = this.content;
        var newMarker = Object(factory["b" /* createIcon */])(BMap, val);
        originInstance._opts.icon = newMarker;
        originInstance._marker = newMarker;
      },
      deep: true
    },
    speed: function speed(val) {
      var originInstance = this.originInstance,
          content = this.content;
      originInstance._opts.speed = val;
    },
    content: function content(val) {
      var originInstance = this.originInstance,
          infoWindow = this.infoWindow;
      val && infoWindow ? originInstance.showInfoWindow() : originInstance.hideInfoWindow();
      originInstance._opts.defaultContent = val;
      originInstance._overlay && originInstance._overlay.setHtml(val);
    },
    autoView: function autoView(val) {
      var originInstance = this.originInstance,
          content = this.content;
      originInstance._opts.autoView = val;
    },
    rotation: function rotation(val) {
      var originInstance = this.originInstance,
          content = this.content;
      originInstance._opts.enableRotation = val;
    },
    infoWindow: function infoWindow(val) {
      var originInstance = this.originInstance,
          content = this.content;
      originInstance && val && content ? originInstance.showInfoWindow() : originInstance.hideInfoWindow();
    },
    play: function play(val) {
      var originInstance = this.originInstance;
      val && originInstance ? originInstance.start() : !this._isEnd && originInstance.pause();
    }
  },
  methods: {
    load: function load() {
      var _this = this;

      var BMap = this.BMap,
          map = this.map,
          path = this.path,
          landmarkPois = this.landmarkPois,
          icon = this.icon,
          speed = this.speed,
          content = this.content,
          autoView = this.autoView,
          rotation = this.rotation,
          infoWindow = this.infoWindow,
          play = this.play;
      var lushu = this.originInstance = new bmaplib_lushu_default.a(map, path, {
        enableRotation: rotation,
        landmarkPois: landmarkPois,
        showInfoWindow: infoWindow,
        defaultContent: content,
        icon: icon && Object(factory["b" /* createIcon */])(BMap, icon),
        speed: speed,
        autoView: autoView,
        onstart: function onstart(e) {
          _this._isEnd = false;

          _this.$emit('start');
        },
        onstop: function onstop(e) {
          _this._isEnd = true;

          _this.$emit('stop');
        },
        onpause: function onpause(e) {
          return _this.$emit('pause');
        }
      });
      play && path.length && lushu.start(this);
      path.length && (content && infoWindow ? lushu.showInfoWindow() : lushu.hideInfoWindow());
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/Lushu.vue?vue&type=script&lang=js&
 /* harmony default export */ var extra_Lushuvue_type_script_lang_js_ = (Lushuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/Lushu.vue
var Lushu_render, Lushu_staticRenderFns




/* normalize component */

var Lushu_component = normalizeComponent(
  extra_Lushuvue_type_script_lang_js_,
  Lushu_render,
  Lushu_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Lushu = (Lushu_component.exports);
// EXTERNAL MODULE: ./node_modules/bmaplib.heatmap/index.js
var bmaplib_heatmap = __webpack_require__("57ff");
var bmaplib_heatmap_default = /*#__PURE__*/__webpack_require__.n(bmaplib_heatmap);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/extra/Heatmap.vue?vue&type=script&lang=js&




/* harmony default export */ var Heatmapvue_type_script_lang_js_ = ({
  name: 'bml-heatmap',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    data: {
      type: Array,
      default: Array
    },
    max: {
      type: Number
    },
    radius: {
      type: Number
    },
    gradient: {
      type: Object
    },
    opacity: {
      type: Number
    }
  },
  watch: {
    data: {
      handler: function handler() {
        this.reload();
      },
      deep: true
    },
    max: function max() {
      this.reload();
    },
    radius: function radius(val) {
      var originInstance = this.originInstance,
          opacity = this.opacity,
          gradient = this.gradient;
      originInstance.setOptions({
        radius: val,
        opacity: opacity,
        gradient: gradient
      });
    },
    gradient: {
      handler: function handler(val) {
        var originInstance = this.originInstance,
            radius = this.radius,
            opacity = this.opacity;
        originInstance.setOptions({
          radius: radius,
          opacity: opacity,
          gradient: val
        });
      },
      deep: true
    },
    opacity: function opacity(val) {
      var originInstance = this.originInstance,
          radius = this.radius,
          gradient = this.gradient;
      originInstance.setOptions({
        radius: radius,
        opacity: val,
        gradient: gradient
      });
    }
  },
  methods: {
    load: function load() {
      var map = this.map,
          data = this.data,
          max = this.max,
          radius = this.radius,
          opacity = this.opacity,
          gradient = this.gradient;
      var overlay = this.originInstance = new bmaplib_heatmap_default.a({
        radius: radius,
        opacity: opacity,
        gradient: gradient
      });
      map.addOverlay(overlay);
      overlay.setDataSet({
        data: data,
        max: max
      });
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/Heatmap.vue?vue&type=script&lang=js&
 /* harmony default export */ var extra_Heatmapvue_type_script_lang_js_ = (Heatmapvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/Heatmap.vue
var Heatmap_render, Heatmap_staticRenderFns




/* normalize component */

var Heatmap_component = normalizeComponent(
  extra_Heatmapvue_type_script_lang_js_,
  Heatmap_render,
  Heatmap_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Heatmap = (Heatmap_component.exports);
// EXTERNAL MODULE: ./node_modules/bmaplib.curveline/index.js
var bmaplib_curveline = __webpack_require__("35eb");
var bmaplib_curveline_default = /*#__PURE__*/__webpack_require__.n(bmaplib_curveline);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-baidu-map/components/extra/CurveLine.vue?vue&type=script&lang=js&






var eventList = ['click', 'dblclick', 'mousedown', 'mouseup', 'mouseout', 'mouseover', 'remove', 'lineupdate'];
/* harmony default export */ var CurveLinevue_type_script_lang_js_ = ({
  name: 'bml-curve-line',
  render: function render() {},
  mixins: [Object(common["a" /* default */])('overlay')],
  props: {
    points: {
      type: Array,
      default: Array
    },
    strokeColor: {
      type: String
    },
    strokeWeight: {
      type: Number
    },
    strokeOpacity: {
      type: Number
    },
    strokeStyle: {
      type: String
    },
    massClear: {
      type: Boolean,
      default: true
    },
    clicking: {
      type: Boolean,
      default: true
    },
    editing: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    points: {
      handler: function handler(val, oldVal) {
        this.originInstance.disableEditing();
        this.reload();
      },
      deep: true
    },
    strokeColor: function strokeColor(val) {
      this.originInstance.setStrokeColor(val);
    },
    strokeOpacity: function strokeOpacity(val) {
      this.originInstance.setStrokeOpacity(val);
    },
    strokeWeight: function strokeWeight(val) {
      this.originInstance.setStrokeWeight(val);
    },
    strokeStyle: function strokeStyle(val) {
      this.originInstance.setStrokeStyle(val);
    },
    editing: function editing(val) {
      val ? this.originInstance.enableEditing() : this.originInstance.disableEditing();
    },
    massClear: function massClear(val) {
      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();
    },
    clicking: function clicking(val) {
      this.reload();
    }
  },
  methods: {
    load: function load() {
      var BMap = this.BMap,
          map = this.map,
          points = this.points,
          strokeColor = this.strokeColor,
          strokeWeight = this.strokeWeight,
          strokeOpacity = this.strokeOpacity,
          strokeStyle = this.strokeStyle,
          editing = this.editing,
          massClear = this.massClear,
          clicking = this.clicking;
      var overlay = new bmaplib_curveline_default.a(points.map(function (item) {
        return Object(factory["d" /* createPoint */])(BMap, item);
      }), {
        strokeColor: strokeColor,
        strokeWeight: strokeWeight,
        strokeOpacity: strokeOpacity,
        strokeStyle: strokeStyle,
        // enableEditing: editing,
        enableMassClear: massClear,
        enableClicking: clicking
      });
      editing ? overlay.enableEditing() : overlay.disableEditing();
      this.originInstance = overlay;
      map.addOverlay(overlay);
      bindEvent["a" /* default */].call(this, overlay, eventList);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/CurveLine.vue?vue&type=script&lang=js&
 /* harmony default export */ var extra_CurveLinevue_type_script_lang_js_ = (CurveLinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/extra/CurveLine.vue
var CurveLine_render, CurveLine_staticRenderFns




/* normalize component */

var CurveLine_component = normalizeComponent(
  extra_CurveLinevue_type_script_lang_js_,
  CurveLine_render,
  CurveLine_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var CurveLine = (CurveLine_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-baidu-map/components/index.js





































/* harmony default export */ var components = ({
  install (Vue, options) {
    const {ak} = options
    Vue.prototype._BMap = () => ({ak})

    Vue.component('baidu-map', Map)
    Vue.component('bm-view', MapView)

    Vue.component('bm-scale', Scale)
    Vue.component('bm-navigation', Navigation)
    Vue.component('bm-map-type', MapType)
    Vue.component('bm-overview-map', OverviewMap)
    Vue.component('bm-geolocation', Geolocation)
    Vue.component('bm-copyright', Copyright)
    Vue.component('bm-city-list', CityList)
    Vue.component('bm-panorama', Panorama)
    Vue.component('bm-control', Control)

    Vue.component('bm-marker', Marker)
    Vue.component('bm-point-collection', PointCollection)
    Vue.component('bm-polyline', Polyline)
    Vue.component('bm-polygon', Polygon)
    Vue.component('bm-circle', Circle)
    Vue.component('bm-ground', Ground)
    Vue.component('bm-label', Label)
    Vue.component('bm-info-window', InfoWindow)
    Vue.component('bm-overlay', Overlay)

    Vue.component('bm-context-menu', Menu)
    Vue.component('bm-context-menu-item', Item)

    Vue.component('bm-local-search', LocalSearch)
    Vue.component('bm-transit', Transit)
    Vue.component('bm-walking', Walking)
    Vue.component('bm-driving', Driving)
    Vue.component('bm-bus', Bus)

    Vue.component('bm-tile', Tile)
    Vue.component('bm-traffic', Traffic)

    Vue.component('bm-auto-complete', AutoComplete)
    Vue.component('bm-boundary', Boundary)
  }
});





// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("a15b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js
var es_number_to_fixed = __webpack_require__("b680");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("5319");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.anchor.js
var es_string_anchor = __webpack_require__("18a5");

// CONCATENATED MODULE: ./src/utils/bMapLib.js













/**
 * @fileoverview 百度地图的鼠标绘制工具，对外开放。
 * 允许用户在地图上点击完成鼠标绘制的功能。
 * 使用者可以自定义所绘制结果的相关样式，例如线宽、颜色、测线段距离、面积等等。
 * 主入口类是<a href="symbols/BMapLib.DrawingManager.html">DrawingManager</a>，
 * 基于Baidu Map API 1.4。
 *
 * @author Baidu Map Api Group
 * @version 1.4
 */

/**
 * @namespace BMap的所有library类均放在BMapLib命名空间下
 */
// eslint-disable-next-line no-use-before-define
var bMapLib_BMapLib = window.BMapLib = bMapLib_BMapLib || {};
/**
 * 定义常量, 绘制的模式
 * @final {Number} DrawingType
 */

var BMAP_DRAWING_MARKER = 'marker'; // 鼠标画点模式

var BMAP_DRAWING_POLYLINE = 'polyline'; // 鼠标画线模式

var BMAP_DRAWING_CIRCLE = 'circle'; // 鼠标画圆模式

var BMAP_DRAWING_RECTANGLE = 'rectangle'; // 鼠标画矩形模式

var BMAP_DRAWING_POLYGON = 'polygon'; // 鼠标画多边形模式

function initBMapLib() {
  /**
   * 声明baidu包
   */
  // eslint-disable-next-line no-use-before-define
  var baidu = baidu || {
    guid: '$BAIDU$'
  };

  (function () {
    // 一些页面级别唯一的属性，需要挂载在window[baidu.guid]上
    window[baidu.guid] = {};
    /**
     * 将源对象的所有属性拷贝到目标对象中
     * @name baidu.extend
     * @function
     * @grammar baidu.extend(target, source)
     * @param {Object} target 目标对象
     * @param {Object} source 源对象
     * @returns {Object} 目标对象
     */

    baidu.extend = function (target, source) {
      for (var p in source) {
        // eslint-disable-next-line no-prototype-builtins
        if (source.hasOwnProperty(p)) {
          target[p] = source[p];
        }
      }

      return target;
    };
    /**
     * @ignore
     * @namespace
     * @baidu.lang 对语言层面的封装，包括类型判断、模块扩展、继承基类以及对象自定义事件的支持。
     * @property guid 对象的唯一标识
     */


    baidu.lang = baidu.lang || {};
    /**
     * 返回一个当前页面的唯一标识字符串。
     * @function
     * @grammar baidu.lang.guid()
     * @returns {String} 当前页面的唯一标识字符串
     */

    baidu.lang.guid = function () {
      return 'TANGRAM__' + (window[baidu.guid]._counter++).toString(36);
    };

    window[baidu.guid]._counter = window[baidu.guid]._counter || 1;
    /**
     * 所有类的实例的容器
     * key为每个实例的guid
     */

    window[baidu.guid]._instances = window[baidu.guid]._instances || {};
    /**
     * Tangram继承机制提供的一个基类，用户可以通过继承baidu.lang.Class来获取它的属性及方法。
     * @function
     * @name baidu.lang.Class
     * @grammar baidu.lang.Class(guid)
     * @param {string} guid对象的唯一标识
     * @meta standard
     * @remark baidu.lang.Class和它的子类的实例均包含一个全局唯一的标识guid。
     * guid是在构造函数中生成的，因此，继承自baidu.lang.Class的类应该直接或者间接调用它的构造函数。<br>
     * baidu.lang.Class的构造函数中产生guid的方式可以保证guid的唯一性，及每个实例都有一个全局唯一的guid。
     */

    baidu.lang.Class = function (guid) {
      this.guid = guid || baidu.lang.guid();
      window[baidu.guid]._instances[this.guid] = this;
    };

    window[baidu.guid]._instances = window[baidu.guid]._instances || {};
    /**
     * 判断目标参数是否string类型或String对象
     * @name baidu.lang.isString
     * @function
     * @grammar baidu.lang.isString(source)
     * @param {Any} source 目标参数
     * @shortcut isString
     * @meta standard
     *
     * @returns {boolean} 类型判断结果
     */

    baidu.lang.isString = function (source) {
      return Object.prototype.toString.call(source) === '[object String]';
    };
    /**
     * 判断目标参数是否为function或Function实例
     * @name baidu.lang.isFunction
     * @function
     * @grammar baidu.lang.isFunction(source)
     * @param {Any} source 目标参数
     * @returns {boolean} 类型判断结果
     */


    baidu.lang.isFunction = function (source) {
      return Object.prototype.toString.call(source) === '[object Function]';
    };
    /**
     * 重载了默认的toString方法，使得返回信息更加准确一些。
     * @return {string} 对象的String表示形式
     */


    baidu.lang.Class.prototype.toString = function () {
      return '[object ' + (this._className || 'Object') + ']';
    };
    /**
     * 释放对象所持有的资源，主要是自定义事件。
     * @name dispose
     * @grammar obj.dispose()
     */


    baidu.lang.Class.prototype.dispose = function () {
      delete window[baidu.guid]._instances[this.guid];

      for (var property in this) {
        if (!baidu.lang.isFunction(this[property])) {
          delete this[property];
        }
      }

      this.disposed = true;
    };
    /**
     * 自定义的事件对象。
     * @function
     * @name baidu.lang.Event
     * @grammar baidu.lang.Event(type[, target])
     * @param {string} type事件类型名称。为了方便区分事件和一个普通的方法，事件类型名称必须以"on"(小写)开头。
     * @param {Object} [target]触发事件的对象
     * @meta standard
     * @remark 引入该模块，会自动为Class引入3个事件扩展方法：addEventListener、removeEventListener和dispatchEvent。
     * @see baidu.lang.Class
     */


    baidu.lang.Event = function (type, target) {
      this.type = type;
      this.returnValue = true;
      this.target = target || null;
      this.currentTarget = null;
    };
    /**
     * 注册对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.addEventListener(type, handler[, key])
     * @param {string}   type         自定义事件的名称
     * @param {Function} handler      自定义事件被触发时应该调用的回调函数
     * @param {string}[key]为事件监听函数指定的名称，可在移除时使用。如果不提供，方法会默认为它生成一个全局唯一的key。
     * @remark 事件类型区分大小写。如果自定义事件名称不是以小写"on"开头，该方法会给它加上"on"再进行判断，即"click"和"onclick"会被认为是同一种事件。
     */


    baidu.lang.Class.prototype.addEventListener = function (type, handler, key) {
      if (!baidu.lang.isFunction(handler)) {
        return;
      }

      !this.__listeners && (this.__listeners = {});
      var t = this.__listeners;
      var id;

      if (typeof key === 'string' && key) {
        // eslint-disable-next-line no-useless-escape
        if (/[^\w\-]/.test(key)) {
          // eslint-disable-next-line no-throw-literal
          throw 'nonstandard key:' + key;
        } else {
          handler.hashCode = key;
          id = key;
        }
      }

      type.indexOf('on') !== 0 && (type = 'on' + type);
      _typeof(t[type]) !== 'object' && (t[type] = {});
      id = id || baidu.lang.guid();
      handler.hashCode = id;
      t[type][id] = handler;
    };
    /**
     * 移除对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.removeEventListener(type, handler)
     * @param {string}   type     事件类型
     * @param {Function|string} handler  要移除的事件监听函数或者监听函数的key
     * @remark 如果第二个参数handler没有被绑定到对应的自定义事件中，什么也不做。
     */


    baidu.lang.Class.prototype.removeEventListener = function (type, handler) {
      if (baidu.lang.isFunction(handler)) {
        handler = handler.hashCode;
      } else if (!baidu.lang.isString(handler)) {
        return;
      }

      !this.__listeners && (this.__listeners = {});
      type.indexOf('on') !== 0 && (type = 'on' + type);
      var t = this.__listeners;

      if (!t[type]) {
        return;
      }

      t[type][handler] && delete t[type][handler];
    };
    /**
     * 派发自定义事件，使得绑定到自定义事件上面的函数都会被执行。引入baidu.lang.Event后，Class的子类实例才会获得该方法。
     * @grammar obj.dispatchEvent(event, options)
     * @param {baidu.lang.Event|String} event Event对象，或事件名称(1.1.1起支持)
     * @param {Object} options 扩展参数,所含属性键值会扩展到Event对象上(1.2起支持)
     * @remark 处理会调用通过addEventListenr绑定的自定义事件回调函数之外，还会调用直接绑定到对象上面的自定义事件。
     * 例如：<br>
     * myobj.onMyEvent = function(){}<br>
     * myobj.addEventListener("onMyEvent", function(){});
     */


    baidu.lang.Class.prototype.dispatchEvent = function (event, options) {
      if (baidu.lang.isString(event)) {
        event = new baidu.lang.Event(event);
      }

      !this.__listeners && (this.__listeners = {});
      options = options || {};

      for (var i in options) {
        event[i] = options[i];
      }

      var t = this.__listeners;
      var p = event.type; // how ?
      //  event.target = event.target || this;
      //  event.currentTarget = this;
      // how ?

      p.indexOf('on') !== 0 && (p = 'on' + p);
      baidu.lang.isFunction(this[p]) && this[p].apply(this, arguments);

      if (_typeof(t[p]) === 'object') {
        for (i in t[p]) {
          t[p][i].apply(this, arguments);
        }
      }

      return event.returnValue;
    };
    /**
     * 为类型构造器建立继承关系
     * @name baidu.lang.inherits
     * @function
     * @grammar baidu.lang.inherits(subClass, superClass[, className])
     * @param {Function} subClass 子类构造器
     * @param {Function} superClass 父类构造器
     * @param {string} className 类名标识
     * @remark 使subClass继承superClass的prototype，
     * 因此subClass的实例能够使用superClass的prototype中定义的所有属性和方法。<br>
     * 这个函数实际上是建立了subClass和superClass的原型链集成，并对subClass进行了constructor修正。<br>
     * <strong>注意：如果要继承构造函数，需要在subClass里面call一下，具体见下面的demo例子</strong>
     * @shortcut inherits
     * @meta standard
     * @see baidu.lang.Class
     */


    baidu.lang.inherits = function (subClass, superClass, className) {
      var key;
      var proto;
      var selfProps = subClass.prototype; // eslint-disable-next-line no-new-func

      var clazz = new Function();
      clazz.prototype = superClass.prototype; // eslint-disable-next-line new-cap

      proto = subClass.prototype = new clazz();

      for (key in selfProps) {
        proto[key] = selfProps[key];
      }

      subClass.prototype.constructor = subClass;
      subClass.superClass = superClass.prototype;

      if (typeof className === 'string') {
        proto._className = className;
      }
    };
    /**
     * @ignore
     * @namespace baidu.dom 操作dom的方法。
     */


    baidu.dom = baidu.dom || {};
    /**
     * 从文档中获取指定的DOM元素
     *
     * @param {string|HTMLElement} id 元素的id或DOM元素
     * @meta standard
     * @return {HTMLElement} DOM元素，如果不存在，返回null，如果参数不合法，直接返回参数
     */

    baidu._g = baidu.dom._g = function (id) {
      if (baidu.lang.isString(id)) {
        return document.getElementById(id);
      }

      return id;
    };
    /**
     * 从文档中获取指定的DOM元素
     * @name baidu.dom.g
     * @function
     * @grammar baidu.dom.g(id)
     * @param {string|HTMLElement} id 元素的id或DOM元素
     * @meta standard
     *
     * @returns {HTMLElement|null} 获取的元素，查找不到时返回null,如果参数不合法，直接返回参数
     */


    baidu.g = baidu.dom.g = function (id) {
      if (typeof id === 'string' || id instanceof String) {
        return document.getElementById(id);
      } else if (id && id.nodeName && (id.nodeType === 1 || id.nodeType === 9)) {
        return id;
      }

      return null;
    };
    /**
     * 在目标元素的指定位置插入HTML代码
     * @name baidu.dom.insertHTML
     * @function
     * @grammar baidu.dom.insertHTML(element, position, html)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @param {string} position 插入html的位置信息，取值为beforeBegin,afterBegin,beforeEnd,afterEnd
     * @param {string} html 要插入的html
     * @remark
     *
     * 对于position参数，大小写不敏感<br>
     * 参数的意思：beforeBegin<span>afterBegin   this is span! beforeEnd</span> afterEnd <br />
     * 此外，如果使用本函数插入带有script标签的HTML字符串，script标签对应的脚本将不会被执行。
     *
     * @shortcut insertHTML
     * @meta standard
     *
     * @returns {HTMLElement} 目标元素
     */


    baidu.insertHTML = baidu.dom.insertHTML = function (element, position, html) {
      element = baidu.dom.g(element);
      var range, begin;

      if (element.insertAdjacentHTML) {
        element.insertAdjacentHTML(position, html);
      } else {
        // 这里不做"undefined" != typeof(HTMLElement) && !window.opera判断，其它浏览器将出错？！
        // 但是其实做了判断，其它浏览器下等于这个函数就不能执行了
        range = element.ownerDocument.createRange(); // FF下range的位置设置错误可能导致创建出来的fragment在插入dom树之后html结构乱掉
        // 改用range.insertNode来插入html, by wenyuxiang @ 2010-12-14.

        position = position.toUpperCase();

        if (position === 'AFTERBEGIN' || position === 'BEFOREEND') {
          range.selectNodeContents(element);
          range.collapse(position === 'AFTERBEGIN');
        } else {
          begin = position === 'BEFOREBEGIN';
          range[begin ? 'setStartBefore' : 'setEndAfter'](element);
          range.collapse(begin);
        }

        range.insertNode(range.createContextualFragment(html));
      }

      return element;
    };
    /**
     * 为目标元素添加className
     * @name baidu.dom.addClass
     * @function
     * @grammar baidu.dom.addClass(element, className)
     * @param {HTMLElement|string} element 目标元素或目标元素的id
     * @param {string} className 要添加的className，允许同时添加多个class，中间使用空白符分隔
     * @remark
     * 使用者应保证提供的className合法性，不应包含不合法字符，className合法字符参考：http://www.w3.org/TR/CSS2/syndata.html。
     * @shortcut addClass
     * @meta standard
     *
     * @returns {HTMLElement} 目标元素
     */


    baidu.ac = baidu.dom.addClass = function (element, className) {
      element = baidu.dom.g(element);
      var classArray = className.split(/\s+/);
      var result = element.className;
      var classMatch = ' ' + result + ' ';
      var i = 0;
      var l = classArray.length;

      for (; i < l; i++) {
        if (classMatch.indexOf(' ' + classArray[i] + ' ') < 0) {
          result += (result ? ' ' : '') + classArray[i];
        }
      }

      element.className = result;
      return element;
    };
    /**
     * @ignore
     * @namespace baidu.event 屏蔽浏览器差异性的事件封装。
     * @property target 事件的触发元素
     * @property pageX 鼠标事件的鼠标x坐标
     * @property pageY  鼠标事件的鼠标y坐标
     * @property keyCode 键盘事件的键值
     */


    baidu.event = baidu.event || {};
    /**
     * 事件监听器的存储表
     * @private
     * @meta standard
     */

    baidu.event._listeners = baidu.event._listeners || [];
    /**
     * 为目标元素添加事件监听器
     * @name baidu.event.on
     * @function
     * @grammar baidu.event.on(element, type, listener)
     * @param {HTMLElement|string|window} element 目标元素或目标元素id
     * @param {string} type 事件类型
     * @param {Function} listener 需要添加的监听器
     * @remark
     *  1. 不支持跨浏览器的鼠标滚轮事件监听器添加<br>
     *  2. 改方法不为监听器灌入事件对象，以防止跨iframe事件挂载的事件对象获取失败
     * @shortcut on
     * @meta standard
     * @see baidu.event.un
     *
     * @returns {HTMLElement|window} 目标元素
     */

    baidu.on = baidu.event.on = function (element, type, listener) {
      type = type.replace(/^on/i, '');
      element = baidu._g(element);

      var realListener = function realListener(ev) {
        // 1. 这里不支持EventArgument,  原因是跨frame的事件挂载
        // 2. element是为了修正this
        listener.call(element, ev);
      };

      var lis = baidu.event._listeners;
      var filter = baidu.event._eventFilter;
      var afterFilter;
      var realType = type;
      type = type.toLowerCase(); // filter过滤

      if (filter && filter[type]) {
        afterFilter = filter[type](element, type, realListener);
        realType = afterFilter.type;
        realListener = afterFilter.listener;
      } // 事件监听器挂载


      if (element.addEventListener) {
        element.addEventListener(realType, realListener, false);
      } else if (element.attachEvent) {
        element.attachEvent('on' + realType, realListener);
      } // 将监听器存储到数组中


      lis[lis.length] = [element, type, listener, realListener, realType];
      return element;
    };
    /**
     * 为目标元素移除事件监听器
     * @name baidu.event.un
     * @function
     * @grammar baidu.event.un(element, type, listener)
     * @param {HTMLElement|string|window} element 目标元素或目标元素id
     * @param {string} type 事件类型
     * @param {Function} listener 需要移除的监听器
     * @shortcut un
     * @meta standard
     *
     * @returns {HTMLElement|window} 目标元素
     */


    baidu.un = baidu.event.un = function (element, type, listener) {
      element = baidu._g(element);
      type = type.replace(/^on/i, '').toLowerCase();
      var lis = baidu.event._listeners;
      var len = lis.length;
      var isRemoveAll = !listener;
      var item;
      var realType;
      var realListener; // 如果将listener的结构改成json
      // 可以节省掉这个循环，优化性能
      // 但是由于un的使用频率并不高，同时在listener不多的时候
      // 遍历数组的性能消耗不会对代码产生影响
      // 暂不考虑此优化

      while (len--) {
        item = lis[len]; // listener存在时，移除element的所有以listener监听的type类型事件
        // listener不存在时，移除element的所有type类型事件

        if (item[1] === type && item[0] === element && (isRemoveAll || item[2] === listener)) {
          realType = item[4];
          realListener = item[3];

          if (element.removeEventListener) {
            element.removeEventListener(realType, realListener, false);
          } else if (element.detachEvent) {
            element.detachEvent('on' + realType, realListener);
          }

          lis.splice(len, 1);
        }
      }

      return element;
    };
    /**
     * 获取event事件,解决不同浏览器兼容问题
     * @param {Event}
     * @return {Event}
     */


    baidu.getEvent = baidu.event.getEvent = function (event) {
      return window.event || event;
    };
    /**
     * 获取event.target,解决不同浏览器兼容问题
     * @param {Event}
     * @return {Target}
     */


    baidu.getTarget = baidu.event.getTarget = function (event) {
      // eslint-disable-next-line no-redeclare
      var event = baidu.getEvent(event);
      return event.target || event.srcElement;
    };
    /**
     * 阻止事件的默认行为
     * @name baidu.event.preventDefault
     * @function
     * @grammar baidu.event.preventDefault(event)
     * @param {Event} event 事件对象
     * @meta standard
     */


    baidu.preventDefault = baidu.event.preventDefault = function (event) {
      // eslint-disable-next-line no-redeclare
      var event = baidu.getEvent(event);

      if (event.preventDefault) {
        event.preventDefault();
      } else {
        event.returnValue = false;
      }
    };
    /**
     * 停止事件冒泡传播
     * @param {Event}
     */


    baidu.stopBubble = baidu.event.stopBubble = function (event) {
      event = baidu.getEvent(event);
      event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
    };
  })();
  /**
   * @exports DrawingManager as BMapLib.DrawingManager
   */


  var DrawingManager =
  /**
   * DrawingManager类的构造函数
   * @class 鼠标绘制管理类，实现鼠标绘制管理的<b>入口</b>。
   * 实例化该类后，即可调用该类提供的open
   * 方法开启绘制模式状态。
   * 也可加入工具栏进行选择操作。
   *
   * @constructor
   * @param {Map} map Baidu map的实例对象
   * @param {Json Object} opts 可选的输入参数，非必填项。可输入选项包括：<br />
   * {"<b>isOpen</b>" : {Boolean} 是否开启绘制模式
   * <br />"<b>enableDrawingTool</b>" : {Boolean} 是否添加绘制工具栏控件，默认不添加
   * <br />"<b>drawingToolOptions</b>" : {Json Object} 可选的输入参数，非必填项。可输入选项包括
   * <br />      "<b>anchor</b>" : {ControlAnchor} 停靠位置、默认左上角
   * <br />      "<b>offset</b>" : {Size} 偏移值。
   * <br />      "<b>scale</b>" : {Number} 工具栏的缩放比例,默认为1
   * <br />      "<b>drawingModes</b>" : {DrawingType<Array>} 工具栏上可以选择出现的绘制模式,将需要显示的DrawingType以数组型形式传入，如[BMAP_DRAWING_MARKER, BMAP_DRAWING_CIRCLE] 将只显示画点和画圆的选项
   * <br />"<b>enableCalculate</b>" : {Boolean} 绘制是否进行测距(画线时候)、测面(画圆、多边形、矩形)
   * <br />"<b>markerOptions</b>" : {CircleOptions} 所画的点的可选参数，参考api中的<a href="http://developer.baidu.com/map/reference/index.php?title=Class:%E6%80%BB%E7%B1%BB/%E8%A6%86%E7%9B%96%E7%89%A9%E7%B1%BB">对应类</a>
   * <br />"<b>circleOptions</b>" : {CircleOptions} 所画的圆的可选参数，参考api中的<a href="http://developer.baidu.com/map/reference/index.php?title=Class:%E6%80%BB%E7%B1%BB/%E8%A6%86%E7%9B%96%E7%89%A9%E7%B1%BB">对应类</a>
   * <br />"<b>polylineOptions</b>" : {CircleOptions} 所画的线的可选参数，参考api中的<a href="http://developer.baidu.com/map/reference/index.php?title=Class:%E6%80%BB%E7%B1%BB/%E8%A6%86%E7%9B%96%E7%89%A9%E7%B1%BB">对应类</a>
   * <br />"<b>polygonOptions</b>" : {PolygonOptions} 所画的多边形的可选参数，参考api中的<a href="http://developer.baidu.com/map/reference/index.php?title=Class:%E6%80%BB%E7%B1%BB/%E8%A6%86%E7%9B%96%E7%89%A9%E7%B1%BB">对应类</a>
   * <br />"<b>rectangleOptions</b>" : {PolygonOptions} 所画的矩形的可选参数，参考api中的<a href="http://developer.baidu.com/map/reference/index.php?title=Class:%E6%80%BB%E7%B1%BB/%E8%A6%86%E7%9B%96%E7%89%A9%E7%B1%BB">对应类</a>
   *
   * @example <b>参考示例：</b><br />
   * var map = new BMap.Map("container");<br />map.centerAndZoom(new BMap.Point(116.404, 39.915), 15);<br />
   * var myDrawingManagerObject = new BMapLib.DrawingManager(map, {isOpen: true,
   *     drawingType: BMAP_DRAWING_MARKER, enableDrawingTool: true,
   *     enableCalculate: false,
   *     drawingToolOptions: {
   *         anchor: BMAP_ANCHOR_TOP_LEFT,
   *         offset: new BMap.Size(5, 5),
   *         drawingTypes : [
   *             BMAP_DRAWING_MARKER,
   *             BMAP_DRAWING_CIRCLE,
   *             BMAP_DRAWING_POLYLINE,
   *             BMAP_DRAWING_POLYGON,
   *             BMAP_DRAWING_RECTANGLE
   *          ]
   *     },
   *     polylineOptions: {
   *         strokeColor: "#333"
   *     });
   */
  bMapLib_BMapLib.DrawingManager = function (map, opts) {
    if (!map) {
      return;
    }

    instances.push(this);
    opts = opts || {};

    this._initialize(map, opts);
  }; // 通过baidu.lang下的inherits方法，让DrawingManager继承baidu.lang.Class


  baidu.lang.inherits(DrawingManager, baidu.lang.Class, 'DrawingManager');
  /**
   * 开启地图的绘制模式
   *
   * @example <b>参考示例：</b><br />
   * myDrawingManagerObject.open();
   */

  DrawingManager.prototype.open = function () {
    // 判断绘制状态是否已经开启
    if (this._isOpen === true) {
      return true;
    }

    closeInstanceExcept(this);

    this._open();
  };
  /**
   * 关闭地图的绘制状态
   *
   * @example <b>参考示例：</b><br />
   * myDrawingManagerObject.close();
   */


  DrawingManager.prototype.close = function () {
    // 判断绘制状态是否已经开启
    if (this._isOpen === false) {
      return true;
    }

    this._close();
  };
  /**
   * 设置当前的绘制模式，参数DrawingType，为5个可选常量:
   * <br/>BMAP_DRAWING_MARKER    画点
   * <br/>BMAP_DRAWING_CIRCLE    画圆
   * <br/>BMAP_DRAWING_POLYLINE  画线
   * <br/>BMAP_DRAWING_POLYGON   画多边形
   * <br/>BMAP_DRAWING_RECTANGLE 画矩形
   * @param {DrawingType} DrawingType
   * @return {Boolean}
   *
   * @example <b>参考示例：</b><br />
   * myDrawingManagerObject.setDrawingMode(BMAP_DRAWING_POLYLINE);
   */


  DrawingManager.prototype.setDrawingMode = function (drawingType) {
    // 与当前模式不一样时候才进行重新绑定事件
    if (this._drawingType !== drawingType) {
      closeInstanceExcept(this);

      this._setDrawingMode(drawingType);
    }
  };
  /**
   * 获取当前的绘制模式
   * @return {DrawingType} 绘制的模式
   *
   * @example <b>参考示例：</b><br />
   * alert(myDrawingManagerObject.getDrawingMode());
   */


  DrawingManager.prototype.getDrawingMode = function () {
    return this._drawingType;
  };
  /**
   * 打开距离或面积计算
   *
   * @example <b>参考示例：</b><br />
   * myDrawingManagerObject.enableCalculate();
   */


  DrawingManager.prototype.enableCalculate = function () {
    this._enableCalculate = true;

    this._addGeoUtilsLibrary();
  };
  /**
   * 关闭距离或面积计算
   *
   * @example <b>参考示例：</b><br />
   * myDrawingManagerObject.disableCalculate();
   */


  DrawingManager.prototype.disableCalculate = function () {
    this._enableCalculate = false;
  };
  /**
   * 鼠标绘制完成后，派发总事件的接口
   * @name DrawingManager#overlaycomplete
   * @event
   * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：
   * <br />{"<b>drawingMode</b> : {DrawingType} 当前的绘制模式
   * <br />"<b>overlay</b>：{Marker||Polyline||Polygon||Circle} 对应的绘制模式返回对应的覆盖物
   * <br />"<b>calculate</b>：{Number} 需要开启计算模式才会返回这个值，当绘制线的时候返回距离、绘制多边形、圆、矩形时候返回面积，单位为米，
   * <br />"<b>label</b>：{Label} 计算面积时候出现在Map上的Label对象
   *
   * @example <b>参考示例：</b>
   * myDrawingManagerObject.addEventListener("overlaycomplete", function(e) {
   *     alert(e.drawingMode);
   *     alert(e.overlay);
   *     alert(e.calculate);
   *     alert(e.label);
   * });
   */

  /**
   * 绘制点完成后，派发的事件接口
   * @name DrawingManager#markercomplete
   * @event
   * @param {Marker} overlay 回调函数会返回相应的覆盖物，
   * <br />{"<b>overlay</b> : {Marker}
   *
   * @example <b>参考示例：</b>
   * myDrawingManagerObject.addEventListener("circlecomplete", function(e, overlay) {
   *     alert(overlay);
   * });
   */

  /**
   * 绘制圆完成后，派发的事件接口
   * @name DrawingManager#circlecomplete
   * @event
   * @param {Circle} overlay 回调函数会返回相应的覆盖物，
   * <br />{"<b>overlay</b> : {Circle}
   */

  /**
   * 绘制线完成后，派发的事件接口
   * @name DrawingManager#polylinecomplete
   * @event
   * @param {Polyline} overlay 回调函数会返回相应的覆盖物，
   * <br />{"<b>overlay</b> : {Polyline}
   */

  /**
   * 绘制多边形完成后，派发的事件接口
   * @name DrawingManager#polygoncomplete
   * @event
   * @param {Polygon} overlay 回调函数会返回相应的覆盖物，
   * <br />{"<b>overlay</b> : {Polygon}
   */

  /**
   * 绘制矩形完成后，派发的事件接口
   * @name DrawingManager#rectanglecomplete
   * @event
   * @param {Polygon} overlay 回调函数会返回相应的覆盖物，
   * <br />{"<b>overlay</b> : {Polygon}
   */

  /**
   * 初始化状态
   * @param {Map} 地图实例
   * @param {Object} 参数
   */
  // eslint-disable-next-line no-unused-expressions


  DrawingManager.prototype._initialize = function (map, opts) {
    /**
     * map对象
     * @private
     * @type {Map}
     */
    this._map = map;
    /**
     * 配置对象
     * @private
     * @type {Object}
     */

    this._opts = opts;
    /**
     * 当前的绘制模式, 默认是绘制点
     * @private
     * @type {DrawingType}
     */

    this._drawingType = opts.drawingMode || BMAP_DRAWING_MARKER;
    /**
     * 是否添加添加鼠标绘制工具栏面板
     */

    if (opts.enableDrawingTool) {
      var drawingTool = new DrawingTool(this, opts.drawingToolOptions);
      this._drawingTool = drawingTool;
      map.addControl(drawingTool);
    } // 是否计算绘制出的面积


    if (opts.enableCalculate === true) {
      this.enableCalculate();
    } else {
      this.disableCalculate();
    }
    /**
     * 是否已经开启了绘制状态
     * @private
     * @type {Boolean}
     */


    this._isOpen = !!(opts.isOpen === true);

    if (this._isOpen) {
      this._open();
    }

    this.markerOptions = opts.markerOptions || {};
    this.circleOptions = opts.circleOptions || {};
    this.polylineOptions = opts.polylineOptions || {};
    this.polygonOptions = opts.polygonOptions || {};
    this.rectangleOptions = opts.rectangleOptions || {};
  };
  /**
     * 开启地图的绘制状态
     * @return {Boolean}，开启绘制状态成功，返回true；否则返回false。
     */


  DrawingManager.prototype._open = function () {
    this._isOpen = true; // 添加遮罩，所有鼠标操作都在这个遮罩上完成

    if (!this._mask) {
      this._mask = new Mask();
    }

    this._map.addOverlay(this._mask);

    this._setDrawingMode(this._drawingType);
  };
  /**
   * 设置当前的绘制模式
   * @param {DrawingType}
   */


  DrawingManager.prototype._setDrawingMode = function (drawingType) {
    this._drawingType = drawingType;
    /**
     * 开启编辑状态时候才重新进行事件绑定
     */

    if (this._isOpen) {
      // 清空之前的自定义事件
      this._mask.__listeners = {};

      switch (drawingType) {
        case BMAP_DRAWING_MARKER:
          this._bindMarker();

          break;

        case BMAP_DRAWING_CIRCLE:
          this._bindCircle();

          break;

        case BMAP_DRAWING_POLYLINE:
        case BMAP_DRAWING_POLYGON:
          this._bindPolylineOrPolygon();

          break;

        case BMAP_DRAWING_RECTANGLE:
          this._bindRectangle();

          break;
      }
    }
    /**
     * 如果添加了工具栏，则也需要改变工具栏的样式
     */


    if (this._drawingTool && this._isOpen) {
      this._drawingTool.setStyleByDrawingMode(drawingType);
    }
  };
  /**
   * 关闭地图的绘制状态
   * @return {Boolean}，关闭绘制状态成功，返回true；否则返回false。
   */


  DrawingManager.prototype._close = function () {
    this._isOpen = false;

    if (this._mask) {
      this._map.removeOverlay(this._mask);
    }
    /**
     * 如果添加了工具栏，则关闭时候将工具栏样式设置为拖拽地图
     */


    if (this._drawingTool) {
      this._drawingTool.setStyleByDrawingMode('hander');
    }
  };
  /**
   * 绑定鼠标画点的事件
   */


  DrawingManager.prototype._bindMarker = function () {
    var me = this;
    var map = this._map;
    var mask = this._mask;
    /**
     * 鼠标点击的事件
     */

    var clickAction = function clickAction(e) {
      // 往地图上添加marker
      var marker = new BMap.Marker(e.point, me.markerOptions);
      map.addOverlay(marker);

      me._dispatchOverlayComplete(marker);
    };

    mask.addEventListener('click', clickAction);
  };
  /**
   * 绑定鼠标画圆的事件
   */


  DrawingManager.prototype._bindCircle = function () {
    var me = this;
    var map = this._map;
    var mask = this._mask;
    var circle = null;
    var centerPoint = null; // 圆的中心点

    /**
     * 开始绘制圆形
     */

    var startAction = function startAction(e) {
      centerPoint = e.point;
      circle = new BMap.Circle(centerPoint, 0, me.circleOptions);
      map.addOverlay(circle);
      mask.enableEdgeMove();
      mask.addEventListener('mousemove', moveAction);
      baidu.on(document, 'mouseup', endAction);
    };
    /**
     * 绘制圆形过程中，鼠标移动过程的事件
     */


    var moveAction = function moveAction(e) {
      circle.setRadius(me._map.getDistance(centerPoint, e.point));
    };
    /**
     * 绘制圆形结束
     */


    var endAction = function endAction(e) {
      var calculate = me._calculate(circle, e.point);

      me._dispatchOverlayComplete(circle, calculate);

      centerPoint = null;
      mask.disableEdgeMove();
      mask.removeEventListener('mousemove', moveAction);
      baidu.un(document, 'mouseup', endAction);
    };
    /**
     * 鼠标点击起始点
     */


    var mousedownAction = function mousedownAction(e) {
      baidu.preventDefault(e);
      baidu.stopBubble(e);

      if (centerPoint == null) {
        startAction(e);
      }
    };

    mask.addEventListener('mousedown', mousedownAction);
  };
  /**
   * 画线和画多边形相似性比较大，公用一个方法
   */


  DrawingManager.prototype._bindPolylineOrPolygon = function () {
    var me = this;
    var map = this._map;
    var mask = this._mask;
    var points = []; // 用户绘制的点

    var drawPoint = null; // 实际需要画在地图上的点

    var overlay = null;
    var isBinded = false;
    /**
     * 鼠标点击的事件
     */

    var startAction = function startAction(e) {
      points.push(e.point);
      drawPoint = points.concat(points[points.length - 1]);

      if (points.length === 1) {
        if (me._drawingType === BMAP_DRAWING_POLYLINE) {
          overlay = new BMap.Polyline(drawPoint, me.polylineOptions);
        } else if (me._drawingType === BMAP_DRAWING_POLYGON) {
          overlay = new BMap.Polygon(drawPoint, me.polygonOptions);
        }

        map.addOverlay(overlay);
      } else {
        overlay.setPath(drawPoint);
      }

      if (!isBinded) {
        isBinded = true;
        mask.enableEdgeMove();
        mask.addEventListener('mousemove', mousemoveAction);
        mask.addEventListener('dblclick', dblclickAction);
      }
    };
    /**
     * 鼠标移动过程的事件
     */


    var mousemoveAction = function mousemoveAction(e) {
      overlay && overlay.setPositionAt(drawPoint.length - 1, e.point);
    };
    /**
     * 鼠标双击的事件
     */


    var dblclickAction = function dblclickAction(e) {
      baidu.stopBubble(e);
      isBinded = false;
      mask.disableEdgeMove();
      mask.removeEventListener('mousemove', mousemoveAction);
      mask.removeEventListener('dblclick', dblclickAction);
      overlay.setPath(points);

      var calculate = me._calculate(overlay, points.pop());

      me._dispatchOverlayComplete(overlay, calculate);

      points.length = 0;
      drawPoint.length = 0;
    };

    mask.addEventListener('click', startAction); // 双击时候不放大地图级别

    mask.addEventListener('dblclick', function (e) {
      baidu.stopBubble(e);
    });
  };
  /**
   * 绑定鼠标画矩形的事件
   */


  DrawingManager.prototype._bindRectangle = function () {
    var me = this;
    var map = this._map;
    var mask = this._mask;
    var polygon = null;
    var startPoint = null;
    /**
     * 开始绘制矩形
     */

    var startAction = function startAction(e) {
      baidu.stopBubble(e);
      baidu.preventDefault(e);
      startPoint = e.point;
      var endPoint = startPoint;
      polygon = new BMap.Polygon(me._getRectanglePoint(startPoint, endPoint), me.rectangleOptions);
      map.addOverlay(polygon);
      mask.enableEdgeMove();
      mask.addEventListener('mousemove', moveAction);
      baidu.on(document, 'mouseup', endAction);
    };
    /**
     * 绘制矩形过程中，鼠标移动过程的事件
     */


    var moveAction = function moveAction(e) {
      polygon.setPath(me._getRectanglePoint(startPoint, e.point));
    };
    /**
     * 绘制矩形结束
     */


    var endAction = function endAction(e) {
      var calculate = me._calculate(polygon, polygon.getPath()[2]);

      me._dispatchOverlayComplete(polygon, calculate);

      startPoint = null;
      mask.disableEdgeMove();
      mask.removeEventListener('mousemove', moveAction);
      baidu.un(document, 'mouseup', endAction);
    };

    mask.addEventListener('mousedown', startAction);
  };
  /**
   * 添加显示所绘制图形的面积或者长度
   * @param {overlay} 覆盖物
   * @param {point} 显示的位置
   */


  DrawingManager.prototype._calculate = function (overlay, point) {
    var result = {
      data: 0,
      // 计算出来的长度或面积
      label: null // 显示长度或面积的label对象

    };

    if (this._enableCalculate && bMapLib_BMapLib.GeoUtils) {
      var type = overlay.toString(); // 不同覆盖物调用不同的计算方法

      switch (type) {
        case '[object Polyline]':
          result.data = bMapLib_BMapLib.GeoUtils.getPolylineDistance(overlay);
          break;

        case '[object Polygon]':
          result.data = bMapLib_BMapLib.GeoUtils.getPolygonArea(overlay);
          break;

        case '[object Circle]':
          var radius = overlay.getRadius();
          result.data = Math.PI * radius * radius;
          break;
      } // 一场情况处理


      if (!result.data || result.data < 0) {
        result.data = 0;
      } else {
        // 保留2位小数位
        result.data = result.data.toFixed(2);
      } // 地图上不需要显示 // todo
      // result.label = this._addLabel(point, result.data)

    }

    return result;
  };
  /**
   * 开启测距和测面功能需要依赖于GeoUtils库
   * 所以这里判断用户是否已经加载,若未加载则用js动态加载
   */


  DrawingManager.prototype._addGeoUtilsLibrary = function () {
    if (!bMapLib_BMapLib.GeoUtils) {
      var script = document.createElement('script');
      script.setAttribute('type', 'text/javascript');
      script.setAttribute('src', 'http://api.map.baidu.com/library/GeoUtils/1.2/src/GeoUtils_min.js');
      document.body.appendChild(script);
    }
  };
  /**
   * 向地图中添加文本标注
   * @param {Point}
   * @param {String} 所以显示的内容
   */


  DrawingManager.prototype._addLabel = function (point, content) {
    var label = new BMap.Label(content, {
      position: point
    });

    this._map.addOverlay(label);

    return label;
  };
  /**
   * 根据起终点获取矩形的四个顶点
   * @param {Point} 起点
   * @param {Point} 终点
   */


  DrawingManager.prototype._getRectanglePoint = function (startPoint, endPoint) {
    return [new BMap.Point(startPoint.lng, startPoint.lat), new BMap.Point(endPoint.lng, startPoint.lat), new BMap.Point(endPoint.lng, endPoint.lat), new BMap.Point(startPoint.lng, endPoint.lat)];
  };
  /**
   * 派发事件
   */


  DrawingManager.prototype._dispatchOverlayComplete = function (overlay, calculate) {
    var options = {
      overlay: overlay,
      drawingMode: this._drawingType,
      calculate: calculate && calculate.data ? calculate.data : null,
      label: calculate && calculate.label ? calculate.label : null
    };
    this.dispatchEvent(this._drawingType + 'complete', overlay);
    this.dispatchEvent('overlaycomplete', options);
  };
  /**
   * 创建遮罩对象
   */


  function Mask() {
    /**
     * 鼠标到地图边缘的时候是否自动平移地图
     */
    this._enableEdgeMove = false;
  }

  Mask.prototype = new BMap.Overlay();
  /**
   * 这里不使用api中的自定义事件，是为了更灵活使用
   */

  Mask.prototype.dispatchEvent = baidu.lang.Class.prototype.dispatchEvent;
  Mask.prototype.addEventListener = baidu.lang.Class.prototype.addEventListener;
  Mask.prototype.removeEventListener = baidu.lang.Class.prototype.removeEventListener;

  Mask.prototype.initialize = function (map) {
    var me = this;
    this._map = map;
    var div = this.container = document.createElement('div');

    var size = this._map.getSize();

    div.style.cssText = 'position:absolute;background:url(about:blank);cursor:crosshair;width:' + size.width + 'px;height:' + size.height + 'px';

    this._map.addEventListener('resize', function (e) {
      me._adjustSize(e.size);
    });

    this._map.getPanes().floatPane.appendChild(div);

    this._bind();

    return div;
  };

  Mask.prototype.draw = function () {
    var map = this._map;
    var point = map.pixelToPoint(new BMap.Pixel(0, 0));
    var pixel = map.pointToOverlayPixel(point);
    this.container.style.left = pixel.x + 'px';
    this.container.style.top = pixel.y + 'px';
  };
  /**
   * 开启鼠标到地图边缘，自动平移地图
   */


  Mask.prototype.enableEdgeMove = function () {
    this._enableEdgeMove = true;
  };
  /**
   * 关闭鼠标到地图边缘，自动平移地图
   */


  Mask.prototype.disableEdgeMove = function () {
    clearInterval(this._edgeMoveTimer);
    this._enableEdgeMove = false;
  };
  /**
   * 绑定事件,派发自定义事件
   */


  Mask.prototype._bind = function () {
    var me = this; // eslint-disable-next-line no-unused-vars

    var map = this._map;
    var container = this.container;
    var lastMousedownXY = null;
    var lastClickXY = null;
    /**
     * 根据event对象获取鼠标的xy坐标对象
     * @param {Event}
     * @return {Object} {x:e.x, y:e.y}
     */

    var getXYbyEvent = function getXYbyEvent(e) {
      return {
        x: e.clientX,
        y: e.clientY
      };
    };

    var domEvent = function domEvent(e) {
      var type = e.type; // eslint-disable-next-line no-redeclare

      var e = baidu.getEvent(e); // 当前鼠标所在点的地理坐标

      var point = me.getDrawPoint(e);

      var dispatchEvent = function dispatchEvent(type) {
        e.point = point;
        me.dispatchEvent(e);
      };

      if (type === 'mousedown') {
        lastMousedownXY = getXYbyEvent(e);
      }

      var nowXY = getXYbyEvent(e); // click经过一些特殊处理派发，其他同事件按正常的dom事件派发

      if (type === 'click') {
        // 鼠标点击过程不进行移动才派发click和dblclick
        if (Math.abs(nowXY.x - lastMousedownXY.x) < 5 && Math.abs(nowXY.y - lastMousedownXY.y) < 5) {
          if (!lastClickXY || !(Math.abs(nowXY.x - lastClickXY.x) < 5 && Math.abs(nowXY.y - lastClickXY.y) < 5)) {
            dispatchEvent('click');
            lastClickXY = getXYbyEvent(e);
          } else {
            lastClickXY = null;
          }
        }
      } else {
        dispatchEvent(type);
      }
    };
    /**
     * 将事件都遮罩层的事件都绑定到domEvent来处理
     */


    var events = ['click', 'mousedown', 'mousemove', 'mouseup', 'dblclick'];
    var index = events.length;

    while (index--) {
      baidu.on(container, events[index], domEvent);
    } // 鼠标移动过程中，到地图边缘后自动平移地图


    baidu.on(container, 'mousemove', function (e) {
      if (me._enableEdgeMove) {
        me.mousemoveAction(e);
      }
    });
  }; // 鼠标移动过程中，到地图边缘后自动平移地图


  Mask.prototype.mousemoveAction = function (e) {
    function getClientPosition(e) {
      var clientX = e.clientX;
      var clientY = e.clientY;

      if (e.changedTouches) {
        clientX = e.changedTouches[0].clientX;
        clientY = e.changedTouches[0].clientY;
      }

      return new BMap.Pixel(clientX, clientY);
    }

    var map = this._map;
    var me = this;
    var pixel = map.pointToPixel(this.getDrawPoint(e));
    var clientPos = getClientPosition(e);
    var offsetX = clientPos.x - pixel.x;
    var offsetY = clientPos.y - pixel.y;
    pixel = new BMap.Pixel(clientPos.x - offsetX, clientPos.y - offsetY);
    this._draggingMovePixel = pixel; // var point = map.pixelToPoint(pixel)
    // var eventObj = {
    //   pixel: pixel,
    //   point: point
    // }
    // 拖拽到地图边缘移动地图

    this._panByX = this._panByY = 0;

    if (pixel.x <= 20 || pixel.x >= map.width - 20 || pixel.y <= 50 || pixel.y >= map.height - 10) {
      if (pixel.x <= 20) {
        this._panByX = 8;
      } else if (pixel.x >= map.width - 20) {
        this._panByX = -8;
      }

      if (pixel.y <= 50) {
        this._panByY = 8;
      } else if (pixel.y >= map.height - 10) {
        this._panByY = -8;
      }

      if (!this._edgeMoveTimer) {
        this._edgeMoveTimer = setInterval(function () {
          map.panBy(me._panByX, me._panByY, {
            noAnimation: true
          });
        }, 30);
      }
    } else {
      if (this._edgeMoveTimer) {
        clearInterval(this._edgeMoveTimer);
        this._edgeMoveTimer = null;
      }
    }
  };
  /*
   * 调整大小
   * @param {Size}
   */


  Mask.prototype._adjustSize = function (size) {
    this.container.style.width = size.width + 'px';
    this.container.style.height = size.height + 'px';
  };
  /**
   * 获取当前绘制点的地理坐标
   *
   * @param {Event} e e对象
   * @return Point对象的位置信息
   */


  Mask.prototype.getDrawPoint = function (e) {
    var map = this._map;
    var trigger = baidu.getTarget(e);
    var x = e.offsetX || e.layerX || 0;
    var y = e.offsetY || e.layerY || 0;
    if (trigger.nodeType !== 1) trigger = trigger.parentNode;

    while (trigger && trigger !== map.getContainer()) {
      if (!(trigger.clientWidth === 0 && trigger.clientHeight === 0 && trigger.offsetParent && trigger.offsetParent.nodeName === 'TD')) {
        x += trigger.offsetLeft || 0;
        y += trigger.offsetTop || 0;
      }

      trigger = trigger.offsetParent;
    }

    var pixel = new BMap.Pixel(x, y);
    var point = map.pixelToPoint(pixel);
    return point;
  };
  /**
   * 绘制工具面板，自定义控件
   */


  function DrawingTool(drawingManager, drawingToolOptions) {
    this.drawingManager = drawingManager;
    drawingToolOptions = this.drawingToolOptions = drawingToolOptions || {}; // 默认停靠位置和偏移量

    this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;
    this.defaultOffset = new BMap.Size(10, 10); // 默认所有工具栏都显示

    this.defaultDrawingModes = [BMAP_DRAWING_MARKER, BMAP_DRAWING_CIRCLE, BMAP_DRAWING_POLYLINE, BMAP_DRAWING_POLYGON, BMAP_DRAWING_RECTANGLE]; // 工具栏可显示的绘制模式

    if (drawingToolOptions.drawingModes) {
      this.drawingModes = drawingToolOptions.drawingModes;
    } else {
      this.drawingModes = this.defaultDrawingModes;
    } // 用户设置停靠位置和偏移量


    if (drawingToolOptions.anchor) {
      this.setAnchor(drawingToolOptions.anchor);
    }

    if (drawingToolOptions.offset) {
      this.setOffset(drawingToolOptions.offset);
    }
  } // 通过JavaScript的prototype属性继承于BMap.Control


  DrawingTool.prototype = new BMap.Control(); // 自定义控件必须实现自己的initialize方法,并且将控件的DOM元素返回
  // 在本方法中创建个div元素作为控件的容器,并将其添加到地图容器中

  DrawingTool.prototype.initialize = function (map) {
    // 创建一个DOM元素
    var container = this.container = document.createElement('div');
    container.className = 'BMapLib_Drawing'; // 用来设置外层边框阴影

    var panel = this.panel = document.createElement('div');
    panel.className = 'BMapLib_Drawing_panel';

    if (this.drawingToolOptions && this.drawingToolOptions.scale) {
      this._setScale(this.drawingToolOptions.scale);
    }

    container.appendChild(panel); // 添加内容

    panel.innerHTML = this._generalHtml(); // 绑定事件

    this._bind(panel); // 添加DOM元素到地图中


    map.getContainer().appendChild(container); // 将DOM元素返回

    return container;
  }; // 生成工具栏的html元素


  DrawingTool.prototype._generalHtml = function (map) {
    // 鼠标经过工具栏上的提示信息
    var tips = {};
    tips.hander = '拖动地图';
    tips[BMAP_DRAWING_MARKER] = '画点';
    tips[BMAP_DRAWING_CIRCLE] = '画圆';
    tips[BMAP_DRAWING_POLYLINE] = '画折线';
    tips[BMAP_DRAWING_POLYGON] = '画多边形';
    tips[BMAP_DRAWING_RECTANGLE] = '画矩形';

    var getItem = function getItem(className, drawingType) {
      return '<a class="' + className + '" drawingType="' + drawingType + '" href="javascript:void(0)" title="' + tips[drawingType] + '" onfocus="this.blur()"></a>';
    };

    var html = [];
    html.push(getItem('BMapLib_box BMapLib_hander', 'hander'));

    for (var i = 0, len = this.drawingModes.length; i < len; i++) {
      var classStr = 'BMapLib_box BMapLib_' + this.drawingModes[i];

      if (i === len - 1) {
        classStr += ' BMapLib_last';
      }

      html.push(getItem(classStr, this.drawingModes[i]));
    }

    return html.join('');
  };
  /**
   * 设置工具栏的缩放比例
   */


  DrawingTool.prototype._setScale = function (scale) {
    var width = 390;
    var height = 50;
    var ml = -parseInt((width - width * scale) / 2, 10);
    var mt = -parseInt((height - height * scale) / 2, 10);
    this.container.style.cssText = ['-moz-transform: scale(' + scale + ');', '-o-transform: scale(' + scale + ');', '-webkit-transform: scale(' + scale + ');', 'transform: scale(' + scale + ');', 'margin-left:' + ml + 'px;', 'margin-top:' + mt + 'px;', '*margin-left:0px;', // ie6、7
    '*margin-top:0px;', // ie6、7
    'margin-left:0px\\0;', // ie8
    'margin-top:0px\\0;', // ie8
    // ie下使用滤镜
    'filter: progid:DXImageTransform.Microsoft.Matrix(', 'M11=' + scale + ',', 'M12=0,', 'M21=0,', 'M22=' + scale + ',', "SizingMethod='auto expand');"].join('');
  }; // 绑定工具栏的事件


  DrawingTool.prototype._bind = function (panel) {
    var me = this;
    baidu.on(this.panel, 'click', function (e) {
      var target = baidu.getTarget(e);
      var drawingType = target.getAttribute('drawingType');
      me.setStyleByDrawingMode(drawingType);

      me._bindEventByDraingMode(drawingType);
    });
  }; // 设置工具栏当前选中的项样式


  DrawingTool.prototype.setStyleByDrawingMode = function (drawingType) {
    if (!drawingType) {
      return;
    }

    var boxs = this.panel.getElementsByTagName('a');

    for (var i = 0, len = boxs.length; i < len; i++) {
      var box = boxs[i];

      if (box.getAttribute('drawingType') === drawingType) {
        var classStr = 'BMapLib_box BMapLib_' + drawingType + '_hover';

        if (i === len - 1) {
          classStr += ' BMapLib_last';
        }

        box.className = classStr;
      } else {
        box.className = box.className.replace(/_hover/, '');
      }
    }
  }; // 设置工具栏当前选中的项样式


  DrawingTool.prototype._bindEventByDraingMode = function (drawingType) {
    var drawingManager = this.drawingManager; // 点在拖拽地图的按钮上

    if (drawingType === 'hander') {
      drawingManager.close();
    } else {
      drawingManager.setDrawingMode(drawingType);
      drawingManager.open();
    }
  }; // 用来存储用户实例化出来的drawingmanager对象


  var instances = [];
  /*
   * 关闭其他实例的绘制模式
   * @param {DrawingManager} 当前的实例
   */

  function closeInstanceExcept(instance) {
    var index = instances.length;

    while (index--) {
      if (instances[index] !== instance) {
        instances[index].close();
      }
    }
  }

  return bMapLib_BMapLib;
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// CONCATENATED MODULE: ./src/utils/index.js







/*
 * @Author: shiliangL
 * @Date: 2020-11-21 12:10:44
 * @LastEditTime: 2020-11-21 12:28:40
 * @LastEditors: Do not edit
 * @Description:
 * @FilePath: /cube-baidu-map/src/utils/index.js
 */
// 后往前合并
function deepMerge(target, merged) {
  for (var key in merged) {
    // eslint-disable-next-line no-prototype-builtins
    if (merged.hasOwnProperty(key)) {
      target[key] = target[key] && target[key].toString() === '[object Object]' ? deepMerge(target[key], merged[key]) : target[key] = merged[key];
    }

    return target;
  }
}
function deepClone(source) {
  if (!source && _typeof(source) !== 'object') {
    throw new Error('error arguments', 'deepClone');
  }

  var targetObj = source.constructor === Array ? [] : {};
  Object.keys(source).forEach(function (keys) {
    if (source[keys] && _typeof(source[keys]) === 'object') {
      targetObj[keys] = deepClone(source[keys]);
    } else {
      targetObj[keys] = source[keys];
    }
  });
  return targetObj;
}
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"82ee7416-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/CubeMapDraw/src/MapTools.vue?vue&type=template&id=38552c8e&scoped=true&
var MapToolsvue_type_template_id_38552c8e_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"map-drawing-tools"},[_c('a',{on:{"click":function($event){$event.stopPropagation();return _vm.draw(0)}}},[_c('full-screen',{attrs:{"theme":"outline","size":"14","fill":_vm.iconColor}}),_vm._v(" 视角 ")],1),(!_vm.preview)?[_c('a',{staticClass:"stop",on:{"click":function($event){$event.stopPropagation();return _vm.draw(1)}}},[_c('click-tap',{attrs:{"theme":"outline","size":"14","fill":"#E6A23C"}}),_vm._v(" 停止绘制 ")],1),_vm._l((_vm.drawType),function(item,index){return _c('a',{key:index,style:({color: item.iconColor || '' }),on:{"click":function($event){$event.stopPropagation();return _vm.draw(item.type)}}},[(item.iconName)?_c(item.iconName,{tag:"component",attrs:{"theme":item.iconTheme || 'outline',"size":item.iconSize || 14,"fill":item.iconColor || _vm.iconColor}}):_vm._e(),_c('span',{domProps:{"textContent":_vm._s(item.text)}})],1)})]:_vm._e()],2)}
var MapToolsvue_type_template_id_38552c8e_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/MapTools.vue?vue&type=template&id=38552c8e&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js









function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/runtime/index.js
var DEFAULT_ICON_CONFIGS = {
  size: '1em',
  strokeWidth: 4,
  strokeLinecap: 'round',
  strokeLinejoin: 'round',
  rtl: false,
  theme: 'outline',
  colors: {
    outline: {
      fill: '#333',
      background: 'transparent'
    },
    filled: {
      fill: '#333',
      background: '#FFF'
    },
    twoTone: {
      fill: '#333',
      twoTone: '#2F88FF'
    },
    multiColor: {
      outStrokeColor: '#333',
      outFillColor: '#2F88FF',
      innerStrokeColor: '#FFF',
      innerFillColor: '#43CCF8'
    }
  },
  prefix: 'i'
};

function guid() {
  return 'icon-' + ((1 + Math.random()) * 0x100000000 | 0).toString(16).substring(1);
}

function IconConverter(id, icon, config) {
  var fill = typeof icon.fill === 'string' ? [icon.fill] : icon.fill || [];
  var colors = [];
  var theme = icon.theme || config.theme;

  switch (theme) {
    case 'outline':
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push('transparent');
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push('transparent');
      break;

    case 'filled':
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push('#FFF');
      colors.push('#FFF');
      break;

    case 'two-tone':
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push(typeof fill[1] === 'string' ? fill[1] : config.colors.twoTone.twoTone);
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push(typeof fill[1] === 'string' ? fill[1] : config.colors.twoTone.twoTone);
      break;

    case 'multi-color':
      colors.push(typeof fill[0] === 'string' ? fill[0] : 'currentColor');
      colors.push(typeof fill[1] === 'string' ? fill[1] : config.colors.multiColor.outFillColor);
      colors.push(typeof fill[2] === 'string' ? fill[2] : config.colors.multiColor.innerStrokeColor);
      colors.push(typeof fill[3] === 'string' ? fill[3] : config.colors.multiColor.innerFillColor);
      break;
  }

  return {
    size: icon.size || config.size,
    strokeWidth: icon.strokeWidth || config.strokeWidth,
    strokeLinecap: icon.strokeLinecap || config.strokeLinecap,
    strokeLinejoin: icon.strokeLinejoin || config.strokeLinejoin,
    colors: colors,
    id: id
  };
}
function IconWrapper(name, rtl, _render) {
  var options = {
    name: 'icon-' + name,
    inject: ['ICON_CONFIGS'],
    props: ['size', 'strokeWidth', 'strokeLinecap', 'strokeLinejoin', 'theme', 'fill', 'spin'],
    data: function data() {
      return {
        id: guid()
      };
    },
    inheritAttrs: false,
    render: function render(h) {
      var size = this.size,
          strokeWidth = this.strokeWidth,
          strokeLinecap = this.strokeLinecap,
          strokeLinejoin = this.strokeLinejoin,
          theme = this.theme,
          fill = this.fill,
          id = this.id,
          spin = this.spin,
          _this$ICON_CONFIGS = this.ICON_CONFIGS,
          ICON_CONFIGS = _this$ICON_CONFIGS === void 0 ? DEFAULT_ICON_CONFIGS : _this$ICON_CONFIGS;
      var svgProps = IconConverter(id, {
        size: size,
        strokeWidth: strokeWidth,
        strokeLinecap: strokeLinecap,
        strokeLinejoin: strokeLinejoin,
        theme: theme,
        fill: fill
      }, ICON_CONFIGS);
      var cls = [ICON_CONFIGS.prefix + '-icon'];
      cls.push(ICON_CONFIGS.prefix + '-icon' + '-' + name);

      if (rtl && ICON_CONFIGS.rtl) {
        cls.push(ICON_CONFIGS.prefix + '-icon-rtl');
      }

      if (spin) {
        cls.push(ICON_CONFIGS.prefix + '-icon-spin');
      }

      return h("span", {
        "class": cls.join(' ')
      }, [_render(h, svgProps)]);
    }
  };
  return options;
}
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Home.js

/* harmony default export */ var Home = (IconWrapper('home', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9 18V42H39V18L24 6L9 18Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M9 42V18L4 22L24 6L44 22L39 18V42H9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 29V42H29V29H19Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 42H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mail.js

/* harmony default export */ var Mail = (IconWrapper('mail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 39H44V24V9H24H4V24V39Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 9L24 24L44 9",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 9H4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24V9H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Video.js

/* harmony default export */ var Video = (IconWrapper('video', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 10C4 8.89543 4.89543 8 6 8H42C43.1046 8 44 8.89543 44 10V38C44 39.1046 43.1046 40 42 40H6C4.89543 40 4 39.1046 4 38V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 18H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 30H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 18H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 30H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 19L29 24L21 29V19Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Comment.js

/* harmony default export */ var Comment = (IconWrapper('comment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 6H4V36H13V41L23 36H44V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 19.5V22.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19.5V22.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 19.5V22.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CommentOne.js

/* harmony default export */ var CommentOne = (IconWrapper('comment-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 6H4V36H13V41L23 36H44V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 21H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MessageOne.js

/* harmony default export */ var MessageOne = (IconWrapper('message-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 6H44V36H29L24 41L19 36H4V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 21H25.0025",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33.0011 21H35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.001 21H14.9999",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MessageUnread.js

/* harmony default export */ var MessageUnread = (IconWrapper('message-unread', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 16V36H29L24 41L19 36H4V6H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 20H25.0025",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33.0011 20H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.001 20H14.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("circle", {
    "attrs": {
      "cx": "43",
      "cy": "7",
      "r": "3",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Communication.js

/* harmony default export */ var Communication = (IconWrapper('communication', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 38H22V30H36V22H44V38H39L36 41L33 38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 6H36V30H17L13 34L9 30H4V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M26 18H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18H13",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Comments.js

/* harmony default export */ var Comments = (IconWrapper('comments', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 38H22V30H36V22H44V38H39L36 41L33 38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 6H36V30H17L13 34L9 30H4V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 14H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Experiment.js

/* harmony default export */ var Experiment = (IconWrapper('experiment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 4H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.019 4V15.0386L6.27443 39.3014C5.48692 40.9283 6.16737 42.8855 7.79427 43.673C8.23882 43.8882 8.7263 44 9.22019 44H38.7875C40.595 44 42.0602 42.5347 42.0602 40.7273C42.0602 40.2348 41.9491 39.7488 41.7351 39.3052L30.0282 15.0386V4H18.019Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.9604 29.9998C13.1241 31.3401 15.2893 32.0103 17.4559 32.0103C19.6226 32.0103 21.7908 31.3401 23.9605 29.9998C26.1088 28.6735 28.2664 28.0103 30.433 28.0103C32.5997 28.0103 34.7755 28.6735 36.9604 29.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExperimentOne.js

/* harmony default export */ var ExperimentOne = (IconWrapper('experiment-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.019 4V15.0386L6.27437 39.3014C5.48686 40.9283 6.16731 42.8855 7.79421 43.673C8.23876 43.8882 8.72624 44 9.22013 44H38.7874C40.5949 44 42.0602 42.5347 42.0602 40.7273C42.0602 40.2348 41.949 39.7488 41.7351 39.3052L30.0282 15.0386V4H18.019Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.9604 29.9998C13.1241 31.3401 15.2893 32.0103 17.4559 32.0103C19.6226 32.0103 21.7908 31.3401 23.9605 29.9998C26.1088 28.6735 28.2664 28.0103 30.433 28.0103C32.5997 28.0103 34.7755 28.6735 36.9604 29.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Camera.js

/* harmony default export */ var Camera = (IconWrapper('camera', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 12L18 6H30L33 12H15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "12",
      "width": "40",
      "height": "30",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C28.4183 35 32 31.4183 32 27C32 22.5817 28.4183 19 24 19C19.5817 19 16 22.5817 16 27C16 31.4183 19.5817 35 24 35Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Delete.js

/* harmony default export */ var Delete = (IconWrapper('delete', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9 10V44H39V10H9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 20V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 10L19.289 4H28.7771L32 10H16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DeleteOne.js

/* harmony default export */ var DeleteOne = (IconWrapper('delete-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 12L16.2 5H31.8L33 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 12H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M37 12L35 43H13L11 12H37Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 35H29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DeleteTwo.js

/* harmony default export */ var DeleteTwo = (IconWrapper('delete-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 11L4 24L14 37H44V11H14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 19L31 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 19L21 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Success.js

/* harmony default export */ var Success = (IconWrapper('success', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4L29.2533 7.83204L35.7557 7.81966L37.7533 14.0077L43.0211 17.8197L41 24L43.0211 30.1803L37.7533 33.9923L35.7557 40.1803L29.2533 40.168L24 44L18.7467 40.168L12.2443 40.1803L10.2467 33.9923L4.97887 30.1803L7 24L4.97887 17.8197L10.2467 14.0077L12.2443 7.81966L18.7467 7.83204L24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 24L22 29L32 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Notepad.js

/* harmony default export */ var Notepad = (IconWrapper('notepad', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 8H11C10.4477 8 10 8.44772 10 9V43C10 43.5523 10.4477 44 11 44H39C39.5523 44 40 43.5523 40 43V9C40 8.44772 39.5523 8 39 8H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M18 13V8H21.9505C21.9778 8 22 7.97784 22 7.9505V6C22 4.34315 23.3431 3 25 3C26.6569 3 28 4.34315 28 6V7.9505C28 7.97784 28.0222 8 28.0495 8H32V13C32 13.5523 31.5523 14 31 14H19C18.4477 14 18 13.5523 18 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ViewList.js

/* harmony default export */ var ViewList = (IconWrapper('view-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 14H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 24H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 34H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 16C16.1046 16 17 15.1046 17 14C17 12.8954 16.1046 12 15 12C13.8954 12 13 12.8954 13 14C13 15.1046 13.8954 16 15 16Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 26C16.1046 26 17 25.1046 17 24C17 22.8954 16.1046 22 15 22C13.8954 22 13 22.8954 13 24C13 25.1046 13.8954 26 15 26Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 36C16.1046 36 17 35.1046 17 34C17 32.8954 16.1046 32 15 32C13.8954 32 13 32.8954 13 34C13 35.1046 13.8954 36 15 36Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Notes.js

/* harmony default export */ var Notes = (IconWrapper('notes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 6C8 4.89543 8.89543 4 10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 20H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 28H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NotebookOne.js

/* harmony default export */ var NotebookOne = (IconWrapper('notebook-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 6C8 4.89543 8.89543 4 10 4H38C39.1046 4 40 4.89543 40 6V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4V44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bookmark.js

/* harmony default export */ var Bookmark = (IconWrapper('bookmark', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 44C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4H38C39.1046 4 40 4.89543 40 6V42C40 43.1046 39.1046 44 38 44H10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M21 22V4H33V22L27 15.7273L21 22Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tag.js

/* harmony default export */ var Tag = (IconWrapper('tag', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 44L8 6C8 4.89543 8.89543 4 10 4H38C39.1046 4 40 4.89543 40 6V44L24 35.7273L8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 18H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rss.js

/* harmony default export */ var Rss = (IconWrapper('rss', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 44L8 6C8 4.89543 8.89543 4 10 4H38C39.1046 4 40 4.89543 40 6V44L24 35.7273L8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9497 13.9497L23.9497 25.9497",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.9497 19.9497L29.9497 19.9497",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Like.js

/* harmony default export */ var Like = (IconWrapper('like', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 8C8.92487 8 4 12.9249 4 19C4 30 17 40 24 42.3262C31 40 44 30 44 19C44 12.9249 39.0751 8 33 8C29.2797 8 25.9907 9.8469 24 12.6738C22.0093 9.8469 18.7203 8 15 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Unlike.js

/* harmony default export */ var Unlike = (IconWrapper('unlike', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 19C44 12.9249 39.0751 8 33 8C29.2797 8 25.9907 9.8469 24 12.6738C22.0093 9.8469 18.7203 8 15 8C8.92487 8 4 12.9249 4 19C4 30 17 40 24 42.3262C25.1936 41.9295 26.5616 41.3098 28.0099 40.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.9589 27L41.8373 35.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.8373 27L34.9589 35.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Command.js

/* harmony default export */ var Command = (IconWrapper('command', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 14.9091C10.5023 14.9091 12.3205 14.9091 14.9091 14.9091C14.9091 12.2333 14.9091 10.4151 14.9091 9.45455C14.9091 6.44208 12.467 4 9.45455 4C6.44208 4 4 6.44208 4 9.45455C4 12.467 6.44208 14.9091 9.45455 14.9091Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.45455 33.0909H14.9091V38.5455C14.9091 41.558 12.467 44 9.45455 44C6.44208 44 4 41.558 4 38.5455C4 35.533 6.44208 33.0909 9.45455 33.0909Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "14.9092",
      "y": "14.9091",
      "width": "18.1818",
      "height": "18.1818",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5454 14.9091H33.0908V9.45455C33.0908 6.44208 35.5329 4 38.5454 4C41.5578 4 43.9999 6.44208 43.9999 9.45455C43.9999 12.467 41.5578 14.9091 38.5454 14.9091Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5454 33.0909C41.5578 33.0909 43.9999 35.533 43.9999 38.5455C43.9999 41.558 41.5578 44 38.5454 44C35.5329 44 33.0908 41.558 33.0908 38.5455V33.0909H38.5454Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Box.js

/* harmony default export */ var Box = (IconWrapper('box', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "12",
      "width": "36",
      "height": "30",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.9498 24.0083L29.9498 24.0083",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 13L13 5H35L42 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bowl.js

/* harmony default export */ var Bowl = (IconWrapper('bowl', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 44C32 44 32 40.1355 32.0015 40.1282C32.6987 39.7817 33.3702 39.3913 34.0124 38.9606C34.9896 38.3053 35.899 37.5569 36.7279 36.7279C39.9853 33.4706 42 28.9706 42 24H6C6 28.9706 8.01472 33.4706 11.2721 36.7279C12.1086 37.5645 13.0271 38.319 14.0145 38.9786C14.653 39.4051 15.3204 39.792 16.0131 40.1355L16 44H32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18.0083V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 18.0083V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18.0083V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 8C37.7909 8 36 9.79086 36 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 4C25.7909 4 24 5.79086 24 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 8C13.7909 8 12 9.79086 12 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BankCard.js

/* harmony default export */ var BankCard = (IconWrapper('bank-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 10C4 8.89543 4.89543 8 6 8H42C43.1046 8 44 8.89543 44 10V38C44 39.1046 43.1046 40 42 40H6C4.89543 40 4 39.1046 4 38V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 32H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 10V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CopyLink.js

/* harmony default export */ var CopyLink = (IconWrapper('copy-link', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", [h("g", [h("g", [h("path", {
    "attrs": {
      "d": "M12 9.92704V7C12 5.34315 13.3431 4 15 4H41C42.6569 4 44 5.34315 44 7V33C44 34.6569 42.6569 36 41 36H38.0174",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "10",
      "width": "34",
      "height": "34",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]), h("g", [h("g", [h("path", {
    "attrs": {
      "d": "M18.4396 23.1098L23.7321 17.6003C25.1838 16.1486 27.5693 16.1806 29.0604 17.6717C30.5515 19.1628 30.5835 21.5483 29.1319 23L27.2218 25.0228",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.4661 28.7469C12.9558 29.2573 11.9006 30.2762 11.9006 30.2762C10.4489 31.7279 10.4095 34.3152 11.9006 35.8063C13.3917 37.2974 15.7772 37.3294 17.2289 35.8777L22.3931 31.1894",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.6631 28.3283C17.9705 27.6357 17.5927 26.7501 17.5321 25.8547C17.4624 24.8225 17.8143 23.7774 18.5916 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.3218 25.8611C23.8129 27.3522 23.8449 29.7377 22.3932 31.1894",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Copy.js

/* harmony default export */ var Copy = (IconWrapper('copy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", [h("g", [h("path", {
    "attrs": {
      "d": "M12 11.927V7C12 5.34315 13.3431 4 15 4H41C42.6569 4 44 5.34315 44 7V33C44 34.6569 42.6569 36 41 36H36.0174",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "12",
      "width": "32",
      "height": "32",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Terminal.js

/* harmony default export */ var Terminal = (IconWrapper('terminal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "32",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18L19 24L12 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 32H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Save.js

/* harmony default export */ var Save = (IconWrapper('save', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 9C6 7.34315 7.34315 6 9 6H34.2814L42 13.2065V39C42 40.6569 40.6569 42 39 42H9C7.34315 42 6 40.6569 6 39V9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24.0083 6L24 13.3846C24 13.7245 23.5523 14 23 14H15C14.4477 14 14 13.7245 14 13.3846L14 6",
      "fill": props.colors[3]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 6L24 13.3846C24 13.7245 23.5523 14 23 14H15C14.4477 14 14 13.7245 14 13.3846L14 6H24.0083Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 6H34.2814",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34H24.0083",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SaveOne.js

/* harmony default export */ var SaveOne = (IconWrapper('save-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4.00012H7C5.34315 4.00012 4 5.34326 4 7.00012V41.0001C4 42.657 5.34315 44.0001 7 44.0001H41C42.6569 44.0001 44 42.657 44 41.0001V7.00012C44 5.34326 42.6569 4.00012 41 4.00012Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 4.00012V22.0001H15V4.00012H34Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 11.0001V15.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M11.9969 4.00012H36.9985",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tape.js

/* harmony default export */ var Tape = (IconWrapper('tape', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 12C4 10.8954 4.89543 10 6 10H10H38H42C43.1046 10 44 10.8954 44 12V36C44 37.1046 43.1046 38 42 38H6C4.89543 38 4 37.1046 4 36V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14.2701 10C12.5744 10 11.6481 11.9777 12.7336 13.2804L14.4003 15.2804C14.7803 15.7364 15.3432 16 15.9367 16H24H32.0633C32.6568 16 33.2197 15.7364 33.5997 15.2804L35.2664 13.2804C36.3519 11.9777 35.4256 10 33.7299 10H14.2701Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 10V10H10H38H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 31C35.2091 31 37 29.2091 37 27C37 24.7909 35.2091 23 33 23C30.7909 23 29 24.7909 29 27C29 29.2091 30.7909 31 33 31Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 31C17.2091 31 19 29.2091 19 27C19 24.7909 17.2091 23 15 23C12.7909 23 11 24.7909 11 27C11 29.2091 12.7909 31 15 31Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Message.js

/* harmony default export */ var Message = (IconWrapper('message', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C18.0265 44 4 44 4 44C4 44 4 29.0722 4 24C4 12.9543 12.9543 4 24 4C35.0457 4 44 12.9543 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 18L32 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MessageSent.js

/* harmony default export */ var MessageSent = (IconWrapper('message-sent', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C18.0265 44 4 44 4 44C4 44 4 29.0722 4 24C4 12.9543 12.9543 4 24 4C35.0457 4 44 12.9543 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26L20.0001 32L33.0001 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Browser.js

/* harmony default export */ var Browser = (IconWrapper('browser', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43 16V42H5V16V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 4H43V16H5V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M11 12C12.1046 12 13 11.1046 13 10C13 8.89543 12.1046 8 11 8C9.89543 8 9 8.89543 9 10C9 11.1046 9.89543 12 11 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17 12C18.1046 12 19 11.1046 19 10C19 8.89543 18.1046 8 17 8C15.8954 8 15 8.89543 15 10C15 11.1046 15.8954 12 17 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23 12C24.1046 12 25 11.1046 25 10C25 8.89543 24.1046 8 23 8C21.8954 8 21 8.89543 21 10C21 11.1046 21.8954 12 23 12Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Clipboard.js

/* harmony default export */ var Clipboard = (IconWrapper('clipboard', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 7H16H10C8.89543 7 8 7.89543 8 9L8 42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V9C40 7.89543 39.1046 7 38 7H33.0499H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "17",
      "y": "4",
      "width": "14",
      "height": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Voice.js

/* harmony default export */ var Voice = (IconWrapper('voice', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "17",
      "y": "4",
      "width": "14",
      "height": "27",
      "rx": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 23C9 31.2843 15.7157 38 24 38C32.2843 38 39 31.2843 39 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VoiceOff.js

/* harmony default export */ var VoiceOff = (IconWrapper('voice-off', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31 24V11C31 7.13401 27.866 4 24 4C20.134 4 17 7.13401 17 11V24C17 27.866 20.134 31 24 31C27.866 31 31 27.866 31 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 23C9 31.2843 15.7157 38 24 38C25.7532 38 27.4361 37.6992 29 37.1465M39 23C39 25.1333 38.5547 27.1626 37.7519 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 42L6 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Unlock.js

/* harmony default export */ var Unlock = (IconWrapper('unlock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "7",
      "y": "22.0476",
      "width": "34",
      "height": "22",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 22V14.0047C13.9948 8.87022 17.9227 4.56718 23.0859 4.05117C28.249 3.53516 32.9673 6.97408 34 12.0059",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Lock.js

/* harmony default export */ var Lock = (IconWrapper('lock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "22",
      "width": "36",
      "height": "22",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 22V14C14 8.47715 18.4772 4 24 4C29.5228 4 34 8.47715 34 14V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FolderOpen.js

/* harmony default export */ var FolderOpen = (IconWrapper('folder-open', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 9V41L9 21H39.5V15C39.5 13.8954 38.6046 13 37.5 13H24L19 7H6C4.89543 7 4 7.89543 4 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 41L44 21H8.8125L4 41H40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FolderClose.js

/* harmony default export */ var FolderClose = (IconWrapper('folder-close', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 7H6C4.89543 7 4 7.89543 4 9V39C4 40.1046 4.89543 41 6 41H42C43.1046 41 44 40.1046 44 39V15C44 13.8954 43.1046 13 42 13H24L19 7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 22H4",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 16V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FolderDownload.js

/* harmony default export */ var FolderDownload = (IconWrapper('folder-download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 9C4 7.89543 4.89543 7 6 7H19L24 13H42C43.1046 13 44 13.8954 44 15V39C44 40.1046 43.1046 41 42 41H6C4.89543 41 4 40.1046 4 39V9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0277 26.9724L24 34.0001L16.988 26.9881",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V33.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FolderPlus.js

/* harmony default export */ var FolderPlus = (IconWrapper('folder-plus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 10C4 8.89543 4.89543 8 6 8H19L24 14H42C43.1046 14 44 14.8954 44 16V40C44 41.1046 43.1046 42 42 42H6C4.89543 42 4 41.1046 4 40V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9497 22.5L23.9497 34.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.9497 28.5L29.9497 28.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FolderMinus.js

/* harmony default export */ var FolderMinus = (IconWrapper('folder-minus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 10C4 8.89543 4.89543 8 6 8H19L24 14H42C43.1046 14 44 14.8954 44 16V40C44 41.1046 43.1046 42 42 42H6C4.89543 42 4 41.1046 4 40V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.9497 28L29.9497 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ViewGridCard.js

/* harmony default export */ var ViewGridCard = (IconWrapper('view-grid-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "12",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "12",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "28",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "28",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ViewGridList.js

/* harmony default export */ var ViewGridList = (IconWrapper('view-grid-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "12",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "28",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 28L36 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 36H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 12L36 12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20L36 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ViewGridDetail.js

/* harmony default export */ var ViewGridDetail = (IconWrapper('view-grid-detail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "12",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 12L36 12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20L36 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28L36 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Notebook.js

/* harmony default export */ var Notebook = (IconWrapper('notebook', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 6C10 4.89543 10.8954 4 12 4H40C41.1046 4 42 4.89543 42 6V42C42 43.1046 41.1046 44 40 44H12C10.8954 44 10 43.1046 10 42V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 6V42",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 14H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 34H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 4H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 44H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Monitor.js

/* harmony default export */ var Monitor = (IconWrapper('monitor', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "10",
      "width": "32",
      "height": "28",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 14L36 20.75V27.25L44 34V14Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 19L23 24L17 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MonitorOff.js

/* harmony default export */ var MonitorOff = (IconWrapper('monitor-off', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 12V38H20H28H30M18 10H20H36V24V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 14L36 20.75V27.25L44 34V14Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44L4 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pic.js

/* harmony default export */ var Pic = (IconWrapper('pic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(5.000000, 8.000000)",
      "stroke": props.colors[0]
    }
  }, [h("path", {
    "attrs": {
      "d": "M2,0 L36,0 C37.1045695,-2.02906125e-16 38,0.8954305 38,2 L38,30 C38,31.1045695 37.1045695,32 36,32 L2,32 C0.8954305,32 1.3527075e-16,31.1045695 0,30 L0,2 C-1.3527075e-16,0.8954305 0.8954305,2.02906125e-16 2,0 Z",
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("circle", {
    "attrs": {
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "cx": "9.5",
      "cy": "8.5",
      "r": "1.5"
    }
  }), h("path", {
    "attrs": {
      "d": "M10,16 L15,20 L21,13 L38,26 L38,30 C38,31.1045695 37.1045695,32 36,32 L2,32 C0.8954305,32 2.27508946e-13,31.1045695 2.27373675e-13,30 L2.27373675e-13,26 L10,16 Z",
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThreeDGlasses.js

/* harmony default export */ var ThreeDGlasses = (IconWrapper('three-d-glasses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.6 34.5H28.4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M2.30286 27.3909L9.95797 9.5618L14.9492 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M45.8047 27.6333L38.0501 9.5618L33.0588 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M3.40066 26.7998H18.717C19.4317 26.7998 20.0111 27.3792 20.0111 28.0939C20.0111 28.128 20.0098 28.1621 20.0071 28.1961L19.0797 39.9078C19.0264 40.5808 18.4647 41.0998 17.7896 41.0998H4.32806C3.65296 41.0998 3.09127 40.5808 3.03798 39.9078L2.11058 28.1961C2.05416 27.4836 2.58601 26.8603 3.2985 26.8038C3.33249 26.8012 3.36657 26.7998 3.40066 26.7998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M29.283 26.7998H44.5994C45.3141 26.7998 45.8935 27.3792 45.8935 28.0939C45.8935 28.128 45.8921 28.1621 45.8895 28.1961L44.962 39.9078C44.9088 40.5808 44.3471 41.0998 43.672 41.0998H30.2104C29.5353 41.0998 28.9736 40.5808 28.9203 39.9078L27.9929 28.1961C27.9365 27.4836 28.4684 26.8603 29.1809 26.8038C29.2148 26.8012 29.2489 26.7998 29.283 26.7998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Glasses.js

/* harmony default export */ var Glasses = (IconWrapper('glasses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "35",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "35",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 34V10.883C5 9.49159 5 8.79587 5.37752 8.2721C5.75503 7.74832 6.41505 7.52832 7.73509 7.0883L11 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43 34V10.883C43 9.49159 43 8.79587 42.6225 8.2721C42.245 7.74832 41.5849 7.52832 40.2649 7.0883L37 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 34C29 31.2386 26.7614 29 24 29C21.2386 29 19 31.2386 19 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Telescope.js

/* harmony default export */ var Telescope = (IconWrapper('telescope', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "4",
      "width": "12",
      "height": "40",
      "rx": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "4",
      "width": "12",
      "height": "40",
      "rx": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 44C15.3137 44 18 41.3137 18 38C18 34.6863 15.3137 32 12 32C8.68629 32 6 34.6863 6 38C6 41.3137 8.68629 44 12 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 44C39.3137 44 42 41.3137 42 38C42 34.6863 39.3137 32 36 32C32.6863 32 30 34.6863 30 38C30 41.3137 32.6863 44 36 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 21C30 17.6863 27.3137 15 24 15C20.6863 15 18 17.6863 18 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 31C30 27.6863 27.3137 25 24 25C20.6863 25 18 27.6863 18 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Financing.js

/* harmony default export */ var Financing = (IconWrapper('financing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "24",
      "y": "16.929",
      "width": "10",
      "height": "10",
      "rx": "2",
      "transform": "rotate(45 24 16.929)",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Finance.js

/* harmony default export */ var Finance = (IconWrapper('finance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 22H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 28H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 22V34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 15L24 21L18 15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Movie.js

/* harmony default export */ var Movie = (IconWrapper('movie', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18C25.6569 18 27 16.6569 27 15C27 13.3431 25.6569 12 24 12C22.3431 12 21 13.3431 21 15C21 16.6569 22.3431 18 24 18Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36C25.6569 36 27 34.6569 27 33C27 31.3431 25.6569 30 24 30C22.3431 30 21 31.3431 21 33C21 34.6569 22.3431 36 24 36Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 27C16.6569 27 18 25.6569 18 24C18 22.3431 16.6569 21 15 21C13.3431 21 12 22.3431 12 24C12 25.6569 13.3431 27 15 27Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 27C34.6569 27 36 25.6569 36 24C36 22.3431 34.6569 21 33 21C31.3431 21 30 22.3431 30 24C30 25.6569 31.3431 27 33 27Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Forbid.js

/* harmony default export */ var Forbid = (IconWrapper('forbid', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 15L33 33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Play.js

/* harmony default export */ var Play = (IconWrapper('play', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24V17.0718L26 20.5359L32 24L26 27.4641L20 30.9282V24Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PauseOne.js

/* harmony default export */ var PauseOne = (IconWrapper('pause-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Reduce.js

/* harmony default export */ var Reduce = (IconWrapper('reduce', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L32 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Add.js

/* harmony default export */ var Add = (IconWrapper('add', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L32 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AddOne.js

/* harmony default export */ var AddOne = (IconWrapper('add-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L32 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Setting.js

/* harmony default export */ var Setting = (IconWrapper('setting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36.686 15.171C37.9364 16.9643 38.8163 19.0352 39.2147 21.2727H44V26.7273H39.2147C38.8163 28.9648 37.9364 31.0357 36.686 32.829L40.0706 36.2137L36.2137 40.0706L32.829 36.686C31.0357 37.9364 28.9648 38.8163 26.7273 39.2147V44H21.2727V39.2147C19.0352 38.8163 16.9643 37.9364 15.171 36.686L11.7863 40.0706L7.92939 36.2137L11.314 32.829C10.0636 31.0357 9.18372 28.9648 8.78533 26.7273H4V21.2727H8.78533C9.18372 19.0352 10.0636 16.9643 11.314 15.171L7.92939 11.7863L11.7863 7.92939L15.171 11.314C16.9643 10.0636 19.0352 9.18372 21.2727 8.78533V4H26.7273V8.78533C28.9648 9.18372 31.0357 10.0636 32.829 11.314L36.2137 7.92939L40.0706 11.7863L36.686 15.171Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C26.7614 29 29 26.7614 29 24C29 21.2386 26.7614 19 24 19C21.2386 19 19 21.2386 19 24C19 26.7614 21.2386 29 24 29Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SettingTwo.js

/* harmony default export */ var SettingTwo = (IconWrapper('setting-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18.2838 43.1712C14.9327 42.1735 11.9498 40.3212 9.58787 37.8669C10.469 36.8226 11 35.4733 11 34C11 30.6863 8.31371 28 5 28C4.79955 28 4.60139 28.0098 4.40599 28.029C4.13979 26.7276 4 25.3801 4 24C4 21.9094 4.32077 19.8937 4.91579 17.9994C4.94381 17.9998 4.97188 18 5 18C8.31371 18 11 15.3137 11 12C11 11.0487 10.7786 10.1491 10.3846 9.34999C12.6975 7.19937 15.5205 5.5899 18.6521 4.72302C19.6444 6.66807 21.6667 8.00001 24 8.00001C26.3333 8.00001 28.3556 6.66807 29.3479 4.72302C32.4795 5.5899 35.3025 7.19937 37.6154 9.34999C37.2214 10.1491 37 11.0487 37 12C37 15.3137 39.6863 18 43 18C43.0281 18 43.0562 17.9998 43.0842 17.9994C43.6792 19.8937 44 21.9094 44 24C44 25.3801 43.8602 26.7276 43.594 28.029C43.3986 28.0098 43.2005 28 43 28C39.6863 28 37 30.6863 37 34C37 35.4733 37.531 36.8226 38.4121 37.8669C36.0502 40.3212 33.0673 42.1735 29.7162 43.1712C28.9428 40.7518 26.676 39 24 39C21.324 39 19.0572 40.7518 18.2838 43.1712Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C27.866 31 31 27.866 31 24C31 20.134 27.866 17 24 17C20.134 17 17 20.134 17 24C17 27.866 20.134 31 24 31Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SettingOne.js

/* harmony default export */ var SettingOne = (IconWrapper('setting-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34.0003 41L44 24L34.0003 7H14.0002L4 24L14.0002 41H34.0003Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C26.7614 29 29 26.7614 29 24C29 21.2386 26.7614 19 24 19C21.2386 19 19 21.2386 19 24C19 26.7614 21.2386 29 24 29Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SettingThree.js

/* harmony default export */ var SettingThree = (IconWrapper('setting-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "15",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 39V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 23H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 23H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.6066 34.6067L38.1421 38.1422",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.8995 12.6863L37.435 9.15075",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.15076 37.4351L12.6863 33.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85785 9.85791L13.3934 13.3934",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Config.js

/* harmony default export */ var Config = (IconWrapper('config', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "fill-rule": "nonzero",
      "stroke-width": props.strokeWidth
    }
  }, [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "points": "20 1.74860126e-15 14 6 6 6 6 14 1.74860126e-15 20 6 26 6 34 14 34 20 40 26 34 34 34 34 26 40 20 34 14 34 6 26 6"
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "cx": "20",
      "cy": "20",
      "r": "6"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlarmClock.js

/* harmony default export */ var AlarmClock = (IconWrapper('alarm-clock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44.3333C34.1252 44.3333 42.3333 36.1252 42.3333 26C42.3333 15.8747 34.1252 7.66663 24 7.66663C13.8747 7.66663 5.66663 15.8747 5.66663 26C5.66663 36.1252 13.8747 44.3333 24 44.3333Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.7594 15.3535L23.7582 26.3623L31.5305 34.1346",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 8.99995L11 3.99995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8.99995L37 3.99995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Stopwatch.js

/* harmony default export */ var Stopwatch = (IconWrapper('stopwatch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C33.3888 44 41 36.3888 41 27C41 17.6112 33.3888 10 24 10C14.6112 10 7 17.6112 7 27C7 36.3888 14.6112 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 10L35 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Help.js

/* harmony default export */ var Help = (IconWrapper('help', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28.6249V24.6249C27.3137 24.6249 30 21.9386 30 18.6249C30 15.3112 27.3137 12.6249 24 12.6249C20.6863 12.6249 18 15.3112 18 18.6249",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 37.6249C25.3807 37.6249 26.5 36.5056 26.5 35.1249C26.5 33.7442 25.3807 32.6249 24 32.6249C22.6193 32.6249 21.5 33.7442 21.5 35.1249C21.5 36.5056 22.6193 37.6249 24 37.6249Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Attention.js

/* harmony default export */ var Attention = (IconWrapper('attention', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 37C25.3807 37 26.5 35.8807 26.5 34.5C26.5 33.1193 25.3807 32 24 32C22.6193 32 21.5 33.1193 21.5 34.5C21.5 35.8807 22.6193 37 24 37Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Info.js

/* harmony default export */ var Info = (IconWrapper('info', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 11C25.3807 11 26.5 12.1193 26.5 13.5C26.5 14.8807 25.3807 16 24 16C22.6193 16 21.5 14.8807 21.5 13.5C21.5 12.1193 22.6193 11 24 11Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.5 34V20H23.5H22.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 34H28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Time.js

/* harmony default export */ var Time = (IconWrapper('time', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 12L24.0071 24.0088L32.4865 32.4882",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CloseOne.js

/* harmony default export */ var CloseOne = (IconWrapper('close-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.6569 18.3431L18.3432 29.6568",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3432 18.3431L29.6569 29.6568",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CheckOne.js

/* harmony default export */ var CheckOne = (IconWrapper('check-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L22 30L34 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ReduceOne.js

/* harmony default export */ var ReduceOne = (IconWrapper('reduce-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L32 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Radar.js

/* harmony default export */ var Radar = (IconWrapper('radar', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 34C29.5228 34 34 29.5228 34 24C34 18.4772 29.5228 14 24 14C18.4772 14 14 18.4772 14 24C14 29.5228 18.4772 34 24 34Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24L18 24.0083",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24.0083L44 24.0083",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/History.js

/* harmony default export */ var History = (IconWrapper('history', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5.81824 6.72729V14H13.091",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 35.0457 12.9543 44 24 44V44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C16.598 4 10.1351 8.02111 6.67677 13.9981",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.005 12L24.0038 24.0088L32.4832 32.4882",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoadingThree.js

/* harmony default export */ var LoadingThree = (IconWrapper('loading-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4853 15.5147L30.364 17.636",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4853 32.4853L30.364 30.364",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.5147 32.4853L17.636 30.364",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24H15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.5147 15.5147L17.636 17.636",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Aiming.js

/* harmony default export */ var Aiming = (IconWrapper('aiming', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 37V44V37Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 37V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M36 24H44H36Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 24H11H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 11V4V11Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 11V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Refresh.js

/* harmony default export */ var Refresh = (IconWrapper('refresh', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(-0.500000, 0.000000)"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42,24 C42,14.0588745 33.9411255,6 24,6 C21.559467,6 19.2323766,6.48570507 17.1101186,7.36572524 C16.0143739,7.82008913 14.9732329,8.37956827 13.999274,9.03158409 C13.0176762,9.68871375 12.1043185,10.4398373 11.2720779,11.2720779 C10.4398373,12.1043185 9.68871375,13.0176762 9.03158409,13.999274 M6,24 C6,33.9411255 14.0588745,42 24,42 L24,42 C26.440533,42 28.7676234,41.5142949 30.8898814,40.6342748 C31.9856261,40.1799109 33.0267671,39.6204317 34.000726,38.9684159 C34.9823238,38.3112862 35.8956815,37.5601627 36.7279221,36.7279221 C37.5601627,35.8956815 38.3112862,34.9823238 38.9684159,34.000726",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34,16 L50,16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(42.000000, 16.000000) rotate(90.000000) translate(-42.000000, -16.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M-2,32 L14,32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(6.000000, 32.000000) rotate(90.000000) translate(-6.000000, -32.000000) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Redo.js

/* harmony default export */ var Redo = (IconWrapper('redo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36.7279 36.7279C33.4706 39.9853 28.9706 42 24 42C14.0589 42 6 33.9411 6 24C6 14.0589 14.0589 6 24 6C28.9706 6 33.4706 8.01472 36.7279 11.2721C38.3859 12.9301 42 17 42 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 8V17H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Undo.js

/* harmony default export */ var Undo = (IconWrapper('undo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.2721 36.7279C14.5294 39.9853 19.0294 42 24 42C33.9411 42 42 33.9411 42 24C42 14.0589 33.9411 6 24 6C19.0294 6 14.5294 8.01472 11.2721 11.2721C9.61407 12.9301 6 17 6 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 9V17H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Flashlight.js

/* harmony default export */ var Flashlight = (IconWrapper('flashlight', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 22.1961C17 22.0726 16.9419 21.9564 16.8431 21.8824C11.9058 18.1793 9 12.3678 9 6.19608L9 4H39V6.19608C39 12.3678 36.0942 18.1793 31.1569 21.8824C31.0581 21.9564 31 22.0726 31 22.1961V44H17V22.1961Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 11H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28.0083V32.0083",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BookmarkOne.js

/* harmony default export */ var BookmarkOne = (IconWrapper('bookmark-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 10V4H8V38L14 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 44V10H40V44L27 37.7273L14 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TagOne.js

/* harmony default export */ var TagOne = (IconWrapper('tag-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.1691 29.2451L29.2631 42.1511C28.5879 42.8271 27.6716 43.2069 26.7161 43.2069C25.7606 43.2069 24.8444 42.8271 24.1691 42.1511L8 26V8H26L42.1691 24.1691C43.5649 25.5732 43.5649 27.841 42.1691 29.2451Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.5 21C19.8807 21 21 19.8807 21 18.5C21 17.1193 19.8807 16 18.5 16C17.1193 16 16 17.1193 16 18.5C16 19.8807 17.1193 21 18.5 21Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Local.js

/* harmony default export */ var Local = (IconWrapper('local', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.85786 32.7574C6.23858 33.8432 4 35.3432 4 37C4 40.3137 12.9543 43 24 43V43C35.0457 43 44 40.3137 44 37C44 35.3432 41.7614 33.8432 38.1421 32.7574",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C24 35 37 26.504 37 16.6818C37 9.67784 31.1797 4 24 4C16.8203 4 11 9.67784 11 16.6818C11 26.504 24 35 24 35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 22C26.7614 22 29 19.7614 29 17C29 14.2386 26.7614 12 24 12C21.2386 12 19 14.2386 19 17C19 19.7614 21.2386 22 24 22Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Navigation.js

/* harmony default export */ var icons_Navigation = (IconWrapper('navigation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.5 4L9 44L24.5 34.9091L40 44L24.5 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PreviewOpen.js

/* harmony default export */ var PreviewOpen = (IconWrapper('preview-open', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 36C35.0457 36 44 24 44 24C44 24 35.0457 12 24 12C12.9543 12 4 24 4 24C4 24 12.9543 36 24 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C26.7614 29 29 26.7614 29 24C29 21.2386 26.7614 19 24 19C21.2386 19 19 21.2386 19 24C19 26.7614 21.2386 29 24 29Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PreviewClose.js

/* harmony default export */ var PreviewClose = (IconWrapper('preview-close', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 16C6.63472 17.2193 7.59646 18.3504 8.82276 19.3554C12.261 22.1733 17.779 24 24 24C30.221 24 35.739 22.1733 39.1772 19.3554C40.4035 18.3504 41.3653 17.2193 42 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.9777 24L31.0482 31.7274",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37.3535 21.3536L43.0104 27.0104",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.99998 27.0104L10.6568 21.3536",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.9276 31.7274L18.9982 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PreviewCloseOne.js

/* harmony default export */ var PreviewCloseOne = (IconWrapper('preview-close-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.85786 18C6.23858 21 4 24 4 24C4 24 12.9543 36 24 36C25.3699 36 26.7076 35.8154 28 35.4921M20.0318 12.5C21.3144 12.1816 22.6414 12 24 12C35.0457 12 44 24 44 24C44 24 41.7614 27 38.1421 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20.3142 20.6213C19.4981 21.5112 19 22.6974 19 24C19 26.7614 21.2386 29 24 29C25.3627 29 26.5981 28.4548 27.5 27.5707",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 42L6 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mark.js

/* harmony default export */ var Mark = (IconWrapper('mark', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 9H25L32 12H39C40.1046 12 41 12.8954 41 14V31C41 32.1046 40.1046 33 39 33H32L25 30H11V9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 42H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Wallet.js

/* harmony default export */ var Wallet = (IconWrapper('wallet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17.9821 11.9689L31.7847 4L36.3971 11.9889L17.9821 11.9689Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14C4 12.8954 4.89543 12 6 12H42C43.1046 12 44 12.8954 44 14V42C44 43.1046 43.1046 44 42 44H6C4.89543 44 4 43.1046 4 42V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.25 33H44V23H35.25C32.3505 23 30 25.2386 30 28C30 30.7614 32.3505 33 35.25 33Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 16.5V40.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Consume.js

/* harmony default export */ var Consume = (IconWrapper('consume', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "10",
      "width": "40",
      "height": "33",
      "rx": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 17L24 23L30 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 25H31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 31H31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 25V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.99999 4H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Clear.js

/* harmony default export */ var Clear = (IconWrapper('clear', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 5.91396H28V13.914H43V21.914H5V13.914H20V5.91396Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 40H40V22H8V40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 39.8975V33.914",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 39.8975V33.8975",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 39.8975V33.914",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Search.js

/* harmony default export */ var Search = (IconWrapper('search', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 38C30.3888 38 38 30.3888 38 21C38 11.6112 30.3888 4 21 4C11.6112 4 4 11.6112 4 21C4 30.3888 11.6112 38 21 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.6568 14.3431C25.2091 12.8954 23.2091 12 21 12C18.7909 12 16.7909 12.8954 15.3431 14.3431",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2218 33.2218L41.7071 41.7071",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ZoomOut.js

/* harmony default export */ var ZoomOut = (IconWrapper('zoom-out', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 38C30.3888 38 38 30.3888 38 21C38 11.6112 30.3888 4 21 4C11.6112 4 4 11.6112 4 21C4 30.3888 11.6112 38 21 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 21L27 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2218 33.2218L41.7071 41.7071",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ZoomIn.js

/* harmony default export */ var ZoomIn = (IconWrapper('zoom-in', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 38C30.3888 38 38 30.3888 38 21C38 11.6112 30.3888 4 21 4C11.6112 4 4 11.6112 4 21C4 30.3888 11.6112 38 21 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 15L21 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 21L27 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2218 33.2218L41.7071 41.7071",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TipsOne.js

/* harmony default export */ var TipsOne = (IconWrapper('tips-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 8H4V38H19L24 43L29 38H44V8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23V32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Caution.js

/* harmony default export */ var Caution = (IconWrapper('caution', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 5.00018L2 43.0002H46L24 5.00018Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35.0002V36.0002",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19.0007L24.0083 29.0002",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Remind.js

/* harmony default export */ var Remind = (IconWrapper('remind', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4C16.268 4 10 10.268 10 18V38H38V18C38 10.268 31.732 4 24 4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38V18C10 10.268 16.268 4 24 4C31.732 4 38 10.268 38 18V38M4 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C26.7614 44 29 41.7614 29 39V38H19V39C19 41.7614 21.2386 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CloseRemind.js

/* harmony default export */ var CloseRemind = (IconWrapper('close-remind', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 38C42 38 36 33 36 19C36 12.3726 30.6274 7 24 7C21.46 7 19.1042 7.78918 17.1647 9.13571M30 38H6C6 38 11.5692 33.359 11.9765 20.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 38L30 38C30 41.3137 27.3137 44 24 44C20.6863 44 18 41.3137 18 38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 2C21.7909 2 20 3.79086 20 6H28C28 3.79086 26.2091 2 24 2Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M7 6.5L41 44.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShoppingCart.js

/* harmony default export */ var ShoppingCart = (IconWrapper('shopping-cart', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 32H13L8 12H44L39 32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M3 6H6.5L8 12M8 12L13 32H39L44 12H8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "13",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "39",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 22H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 26V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShoppingCartAdd.js

/* harmony default export */ var ShoppingCartAdd = (IconWrapper('shopping-cart-add', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 32H13L8 12H44L39 32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M3 6H6.5L8 12M8 12L13 32H39L44 12H8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "13",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "39",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 22H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 26V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShoppingCartDel.js

/* harmony default export */ var ShoppingCartDel = (IconWrapper('shopping-cart-del', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 32H13L8 12H44L39 32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M3 6H6.5L8 12M8 12L13 32H39L44 12H8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "13",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "39",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 22H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HamburgerButton.js

/* harmony default export */ var HamburgerButton = (IconWrapper('hamburger-button', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.94977 11.9498H39.9498",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.94977 23.9498H39.9498",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.94977 35.9498H39.9498",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Headset.js

/* harmony default export */ var Headset = (IconWrapper('headset', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 30V24.4615C42 14.2655 33.9411 6 24 6C14.0589 6 6 14.2655 6 24.4615V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 32C34 29.7909 35.7909 28 38 28H42V42H38C35.7909 42 34 40.2091 34 38V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 32H44C45.1046 32 46 32.8954 46 34V36C46 37.1046 45.1046 38 44 38H42V32Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 32H4C2.89543 32 2 32.8954 2 34V36C2 37.1046 2.89543 38 4 38H6V32Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 28H10C12.2091 28 14 29.7909 14 32V38C14 40.2091 12.2091 42 10 42H6V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HeadsetOne.js

/* harmony default export */ var HeadsetOne = (IconWrapper('headset-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 32C40.4183 32 44 28.4183 44 24C44 19.5817 40.4183 16 36 16",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32V32C40.4183 32 44 28.4183 44 24C44 19.5817 40.4183 16 36 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 16C7.58172 16 4 19.5817 4 24C4 28.4183 7.58172 32 12 32",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 16C7.58172 16 4 19.5817 4 24C4 28.4183 7.58172 32 12 32V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32V31.5V29V24V16C12 9.37258 17.3726 4 24 4C30.6274 4 36 9.37258 36 16V32C36 38.6274 30.6274 44 24 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Airplay.js

/* harmony default export */ var Airplay = (IconWrapper('airplay', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 35.0136H9H4V8.01267C4 6.90862 4.89543 6.01361 6 6.01361H42C43.1046 6.01361 44 6.90862 44 8.01267V35.0136H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32L14 42H34L24 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Loading.js

/* harmony default export */ var Loading = (IconWrapper('loading', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24C4 35.0457 12.9543 44 24 44V44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24C36 17.3726 30.6274 12 24 12C17.3726 12 12 17.3726 12 24C12 30.6274 17.3726 36 24 36V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Share.js

/* harmony default export */ var Share = (IconWrapper('share', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M26 6H42V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 29.4737V39C42 40.6569 40.6569 42 39 42H9C7.34315 42 6 40.6569 6 39V9C6 7.34315 7.34315 6 9 6L18 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25.8 22.2L41.1 6.89999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cutting.js

/* harmony default export */ var Cutting = (IconWrapper('cutting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 5.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(0.000000, 0.021632)"
    }
  }, [h("polyline", {
    "attrs": {
      "points": "0 4.97836848 32 4.97836848 32 36.9783685"
    }
  }), h("path", {
    "attrs": {
      "d": "M20.4664367,-6 L20.4664367,39.0238636",
      "transform": "translate(20.466437, 16.511932) rotate(-135.000000) translate(-20.466437, -16.511932) "
    }
  }), h("polyline", {
    "attrs": {
      "transform": "translate(20.000000, 16.978368) scale(-1, -1) translate(-20.000000, -16.978368) ",
      "points": "4 0.978368479 36 0.978368479 36 32.9783685"
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Windmill.js

/* harmony default export */ var Windmill = (IconWrapper('windmill', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 23.9917L23.9707 13.9958L23.9415 4L12 14V24L24 23.9917Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24.0083 24L34.0042 23.9707L44 23.9415L34 12L24 12L24.0083 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 24.0083L24.0293 34.0042L24.0585 44L36 34V24L24 24.0083Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23.9917 24L13.9958 24.0293L4 24.0585L14 36L24 36L23.9917 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Wifi.js

/* harmony default export */ var Wifi = (IconWrapper('wifi', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4.00001 18.9653C4.58881 18.4073 5.19523 17.8786 5.81741 17.3792C17.0371 8.37423 33.3821 8.90292 44 18.9653",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 25.799C30.268 18.067 17.732 18.067 10 25.799",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 32.3137C27.5817 27.8954 20.4183 27.8954 16 32.3137",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 40C25.3807 40 26.5 38.8807 26.5 37.5C26.5 36.1193 25.3807 35 24 35C22.6193 35 21.5 36.1193 21.5 37.5C21.5 38.8807 22.6193 40 24 40Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CloseWifi.js

/* harmony default export */ var CloseWifi = (IconWrapper('close-wifi', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 18.9653C37.2253 12.545 28.1189 10.0059 19.5 11.3481",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 25.799C35.2866 23.0855 31.9815 21.3243 28.5 20.5154",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 25.799C11.3276 24.4714 12.7969 23.3717 14.3591 22.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32.3137C17.4388 30.8749 19.1686 29.9047 21 29.403",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 40C25.3807 40 26.5 38.8807 26.5 37.5C26.5 36.1193 25.3807 35 24 35C22.6193 35 21.5 36.1193 21.5 37.5C21.5 38.8807 22.6193 40 24 40Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 40L8 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 18.9652C4.5888 18.4072 5.19522 17.8785 5.81741 17.3792C6.36642 16.9385 6.92771 16.5207 7.49999 16.1257",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Broadcast.js

/* harmony default export */ var Broadcast = (IconWrapper('broadcast', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 10.000000)"
    }
  }, [h("ellipse", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "20",
      "cy": "14.0979414",
      "rx": "4.54545455",
      "ry": "4.53125",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M12,5 C6.66666667,9.97056275 6.66666667,18.0294373 12,23 M28,23 C33.3333333,18.0294373 33.3333333,9.97056275 28,5",
      "stroke-linecap": props.strokeLinecap,
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M5.85786438,1.59872116e-14 C-1.95262146,7.78607807 -1.95262146,20.4098048 5.85786438,28.1958829 M34.1421356,28.1958829 C41.9526215,20.4098048 41.9526215,7.78607807 34.1421356,1.24344979e-14",
      "stroke-linecap": props.strokeLinecap,
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Voicemail.js

/* harmony default export */ var Voicemail = (IconWrapper('voicemail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 31C14.866 31 18 27.866 18 24C18 20.134 14.866 17 11 17C7.13401 17 4 20.134 4 24C4 27.866 7.13401 31 11 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 31C40.866 31 44 27.866 44 24C44 20.134 40.866 17 37 17C33.134 17 30 20.134 30 24C30 27.866 33.134 31 37 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 31H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bluetooth.js

/* harmony default export */ var Bluetooth = (IconWrapper('bluetooth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 13L34 34L23 44V4L34 14L12 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TurnOffBluetooth.js

/* harmony default export */ var TurnOffBluetooth = (IconWrapper('turn-off-bluetooth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20.6718 11.7778V4L35.2562 15.1111L28.077 19.5556M32.4995 35.9744L20.675 44V29.6275L32.4995 35.9744Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 12.5L44 35.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7.44421 33.9999L20.6749 29.6274",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Gift.js

/* harmony default export */ var Gift = (IconWrapper('gift', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 44V20H7V44H41Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 44H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "12",
      "width": "40",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4L24 12L32 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AnchorOne.js

/* harmony default export */ var AnchorOne = (IconWrapper('anchor-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 35C40 25.7953 32.8366 10 24 10C15.1634 10 8 25.7953 8 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "35",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "6",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "35",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "6",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 10H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Anchor.js

/* harmony default export */ var Anchor = (IconWrapper('anchor', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("line", {
    "attrs": {
      "x1": "14",
      "y1": "8",
      "x2": "34",
      "y2": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("line", {
    "attrs": {
      "x1": "14",
      "y1": "8",
      "x2": "34",
      "y2": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("line", {
    "attrs": {
      "x1": "14",
      "y1": "40",
      "x2": "34",
      "y2": "40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "4",
      "width": "8",
      "height": "8",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "8",
      "height": "8",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "36",
      "width": "8",
      "height": "8",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "36",
      "width": "8",
      "height": "8",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "40",
      "y1": "14",
      "x2": "40",
      "y2": "34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("line", {
    "attrs": {
      "x1": "8",
      "y1": "14",
      "x2": "8",
      "y2": "34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Music.js

/* harmony default export */ var Music = (IconWrapper('music', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 34.5C30 32.567 31.567 31 33.5 31H41V34.4C41 36.3882 39.3882 38 37.4 38H33.5C31.567 38 30 36.433 30 34.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 38.5C6 36.567 7.567 35 9.5 35H16V38.4C16 40.3882 14.3882 42 12.4 42H9.5C7.567 42 6 40.433 6 38.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 18.044V18.044L41 12.125",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 38V10L41 4V33.6924",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlayOne.js

/* harmony default export */ var PlayOne = (IconWrapper('play-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 24V11.8756L25.5 17.9378L36 24L25.5 30.0622L15 36.1244V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pause.js

/* harmony default export */ var Pause = (IconWrapper('pause', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Switch.js

/* harmony default export */ var Switch = (IconWrapper('switch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 19H5.99998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 7L42 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.79897 29H42.799",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.79895 29L18.799 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Close.js

/* harmony default export */ var Close = (IconWrapper('close', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 8L40 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 40L40 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CloseSmall.js

/* harmony default export */ var CloseSmall = (IconWrapper('close-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 14L34 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34L34 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CheckSmall.js

/* harmony default export */ var CheckSmall = (IconWrapper('check-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 24L20 34L40 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Check.js

/* harmony default export */ var Check = (IconWrapper('check', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43 11L16.875 37L5 25.1818",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Plus.js

/* harmony default export */ var Plus = (IconWrapper('plus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0607 10L24.024 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24L38 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Minus.js

/* harmony default export */ var Minus = (IconWrapper('minus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.5 24L38.5 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CuttingOne.js

/* harmony default export */ var CuttingOne = (IconWrapper('cutting-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "11",
      "cy": "37",
      "r": "5"
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "37",
      "cy": "37",
      "r": "5"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(24.938660, 22.892210) rotate(-150.000000) translate(-24.938660, -22.892210) ",
      "points": "24.9585851 3.80404093 24.9187342 7.98037837 24.9187342 41.9803784"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(23.061077, 22.794133) rotate(-30.000000) translate(-23.061077, -22.794133) ",
      "points": "23.0866842 3.61900443 23.0866842 37.6190044 23.0354696 41.9692624"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Link.js

/* harmony default export */ var Link = (IconWrapper('link', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.7071 9.56496L9.85789 24.4142C6.34317 27.9289 6.34317 33.6274 9.85789 37.1421V37.1421C13.3726 40.6568 19.0711 40.6568 22.5858 37.1421L40.2635 19.4645C42.6066 17.1213 42.6066 13.3223 40.2635 10.9792V10.9792C37.9203 8.63603 34.1213 8.63603 31.7782 10.9792L14.1005 28.6568C12.929 29.8284 12.929 31.7279 14.1005 32.8995V32.8995C15.2721 34.0711 17.1716 34.0711 18.3432 32.8995L33.1924 18.0502",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FinancingOne.js

/* harmony default export */ var FinancingOne = (IconWrapper('financing-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 14.3845C19.1254 15.9999 24.0083 15.9999 24.0083 15.9999C24.0083 15.9999 28.88 15.9999 33 14.3845C37.5017 19.6384 40.6564 26.5644 42.7297 32.3974C44.8286 38.3026 40.2005 43.9999 33.9334 43.9999H14.0197C7.76812 43.9999 3.14583 38.3287 5.23423 32.4363C7.29788 26.6137 10.4548 19.6854 15 14.3845Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 28H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 34H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 28V38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 22L24 28L18 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 16C31.1797 16 37 13.3137 37 10C37 6.68629 31.1797 4 24 4C16.8203 4 11 6.68629 11 10C11 13.3137 16.8203 16 24 16Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MusicOne.js

/* harmony default export */ var MusicOne = (IconWrapper('music-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 36.04C10 33.2565 12.2565 31 15.04 31H24V36.96C24 39.7435 21.7435 42 18.96 42H15.04C12.2565 42 10 39.7435 10 36.96V36.04Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 14.0664L36.8834 17.1215V9.01341L24 6.00002V14.0664Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Filter.js

/* harmony default export */ var Filter = (IconWrapper('filter', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "6 9 20.4 25.8177778 20.4 38.4444444 27.6 42 27.6 25.8177778 42 9"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tips.js

/* harmony default export */ var Tips = (IconWrapper('tips', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 20C40 26.8077 35.7484 32.6224 29.7555 34.9336H24H18.2445C12.2516 32.6224 8 26.8077 8 20C8 11.1634 15.1634 4 24 4C32.8366 4 40 11.1634 40 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.7555 34.9336L29.0764 43.083C29.0332 43.6013 28.5999 44 28.0798 44H19.9201C19.4 44 18.9668 43.6013 18.9236 43.083L18.2444 34.9336",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 17V23L24 20L30 23V17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClickTap.js

/* harmony default export */ var ClickTap = (IconWrapper('click-tap', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(8.000000, 5.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 7.000000)",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,14 L0,3 C0,1.34314575 1.34314575,0 3,0 C4.65685425,0 6,1.34314575 6,3 L6,14"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,13 L24,19.5 C24,25.8512746 18.8512746,31 12.5,31 L11.5,31 C5.14872538,31 0,25.8512746 0,19.5 L0,13"
    }
  }), h("path", {
    "attrs": {
      "d": "M6,17 L6,15.1057529 L6,12 C6,10.3431458 7.34314575,9 9,9 C10.6568542,9 12,10.3431458 12,12 L12,15.1818037 L12,17"
    }
  }), h("path", {
    "attrs": {
      "d": "M12,17 L12,15.1057529 L12,12 C12,10.3431458 13.3431458,9 15,9 C16.6568542,9 18,10.3431458 18,12 L18,15.1818037 L18,17"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,17 L18,15.1057529 L18,12 C18,10.3431458 19.3431458,9 21,9 C22.6568542,9 24,10.3431458 24,12 L24,15.1818037 L24,17"
    }
  })]), h("path", {
    "attrs": {
      "d": "M20,10 C20,8.94888684 19.8378284,7.93565088 19.5371411,6.98394793 C19.2008409,5.91952713 18.6912709,4.93207821 18.0415268,4.05469702 C16.2197921,1.59471942 13.2961294,0 10,0 C6.70387063,0 3.78020794,1.59471942 1.95847316,4.05469702 C1.30872911,4.93207821 0.799159071,5.91952713 0.462858909,6.98394793 C0.162171574,7.93565088 0,8.94888684 0,10"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LinkOne.js

/* harmony default export */ var LinkOne = (IconWrapper('link-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(2.000000, 2.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(21.646447, 22.353553) rotate(-45.000000) translate(-21.646447, -22.353553) translate(14.146447, -0.646447)"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.9769622,19.1908822 L14.9769622,7.26495624 C14.9769622,3.50123794 11.8429554,0.450141421 7.97696219,0.450141421 C4.11096894,0.450141421 0.97696219,3.50123794 0.97696219,7.26495624 L0.97696219,17.4871785"
    }
  }), h("path", {
    "attrs": {
      "d": "M15,43.9237133 L15,33.7014911 C15,29.9377728 11.8659932,26.8866763 8,26.8866763 C4.13400675,26.8866763 1,29.9377728 1,33.7014911 L1,45.627417",
      "transform": "translate(8.000000, 36.257047) scale(1, -1) translate(-8.000000, -36.257047) "
    }
  }), h("path", {
    "attrs": {
      "d": "M7.97696219,26.005697 C11.8429554,26.005697 14.9769622,22.9546005 14.9769622,19.1908822"
    }
  }), h("path", {
    "attrs": {
      "d": "M1,26.7014911 C4.86599325,26.7014911 8,23.6503946 8,19.8866763",
      "transform": "translate(4.500000, 23.294084) scale(-1, -1) translate(-4.500000, -23.294084) "
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Unlink.js

/* harmony default export */ var Unlink = (IconWrapper('unlink', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M25.8927 16.0306L18.1145 8.25238C15.2506 5.38854 10.7031 5.2929 7.9572 8.03878C5.21132 10.7846 5.30696 15.3322 8.1708 18.1961L15.949 25.9742",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.9161 22.0706L39.6943 29.8488C42.5581 32.7126 42.9291 37.1231 39.9079 40.0061C36.8867 42.889 32.6144 42.6563 29.7506 39.7925L21.9724 32.0143",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.2384 21.0758L17.3493 17.1867",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.3131 30.1502L26.424 26.2612",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShareOne.js

/* harmony default export */ var ShareOne = (IconWrapper('share-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35 16C37.7614 16 40 13.7614 40 11C40 8.23858 37.7614 6 35 6C32.2386 6 30 8.23858 30 11C30 13.7614 32.2386 16 35 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 29C15.7614 29 18 26.7614 18 24C18 21.2386 15.7614 19 13 19C10.2386 19 8 21.2386 8 24C8 26.7614 10.2386 29 13 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.9999 13.5745L17.3388 21.2454",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.3388 26.5639L30.6792 34.4469",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 32C37.7614 32 40 34.2386 40 37C40 39.7614 37.7614 42 35 42C32.2386 42 30 39.7614 30 37C30 34.2386 32.2386 32 35 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BatteryCharge.js

/* harmony default export */ var BatteryCharge = (IconWrapper('battery-charge', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 14H6C4.89543 14 4 14.8954 4 16V32C4 33.1046 4.89543 34 6 34H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 34H38C39.1046 34 40 33.1046 40 32V16C40 14.8954 39.1046 14 38 14H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.002 14L17 24.0012H27.004L22 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H44C45.1046 20 46 20.8954 46 22V26C46 27.1046 45.1046 28 44 28H42V20Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BatteryFull.js

/* harmony default export */ var BatteryFull = (IconWrapper('battery-full', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "14",
      "width": "36",
      "height": "20",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H44C45.1046 20 46 20.8954 46 22V26C46 27.1046 45.1046 28 44 28H42V20Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M13 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BatteryWorking.js

/* harmony default export */ var BatteryWorking = (IconWrapper('battery-working', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "14",
      "width": "36",
      "height": "20",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H44C45.1046 20 46 20.8954 46 22V26C46 27.1046 45.1046 28 44 28H42V20Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M13 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BatteryEmpty.js

/* harmony default export */ var BatteryEmpty = (IconWrapper('battery-empty', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "14",
      "width": "36",
      "height": "20",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H44C45.1046 20 46 20.8954 46 22V26C46 27.1046 45.1046 28 44 28H42V20Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VoiceMessage.js

/* harmony default export */ var VoiceMessage = (IconWrapper('voice-message', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)"
    }
  }, [h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "20",
      "cy": "20",
      "r": "20"
    }
  }), h("g", {
    "attrs": {
      "transform": "translate(11.000000, 10.000000)"
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[2],
      "cx": "2",
      "cy": "9.89949494",
      "r": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M6.94974747,14.8492424 C8.21649831,13.5824916 9,11.8324916 9,9.89949494 C9,7.96649831 8.21649831,6.21649831 6.94974747,4.94974747",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.8994949,19.7989899 C14.4329966,17.2654882 16,13.7654882 16,9.89949494 C16,6.03350169 14.4329966,2.53350169 11.8994949,5.68434189e-14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CastScreen.js

/* harmony default export */ var CastScreen = (IconWrapper('cast-screen', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 39C21 30.1634 13.8366 23 5 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 39C13 34.5817 9.41828 31 5 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M5.5 41C6.88071 41 8 39.8807 8 38.5C8 37.1193 6.88071 36 5.5 36C4.11929 36 3 37.1193 3 38.5C3 39.8807 4.11929 41 5.5 41Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16.0566V8H44V40H28.7712",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/List.js

/* harmony default export */ var List = (IconWrapper('list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 10L8 13L14 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 24L8 27L14 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 38L8 41L14 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 24H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 38H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 10H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Trophy.js

/* harmony default export */ var Trophy = (IconWrapper('trophy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M20,26 C26.627417,26 32,20.4693999 32,13.6470588 L32,0 L8,0 L8,13.6470588 C8,20.4693999 13.372583,26 20,26 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M8,17 L8,7 L0,7 C0,13.6666667 4,17 8,17 Z",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32,17 L32,7 L40,7 C40,13.6666667 36,17 32,17 Z",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20,28 L20,32",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("polygon", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "points": "11 38 14.690036 32 25.0425158 32 29 38"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MailOpen.js

/* harmony default export */ var MailOpen = (IconWrapper('mail-open', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M40,14 L40,35.8181818 C40,37.0231667 39.1045695,38 38,38 L2,38 C0.8954305,38 0,37.0231667 0,35.8181818 L0,14 L20,27 L40,14 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "-3.55271368e-15 13.7839098 20 -2.48689958e-14 40 13.7839098"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Shopping.js

/* harmony default export */ var Shopping = (IconWrapper('shopping', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 32H13L8 12H44L39 32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M3 6H6.5L8 12M8 12L13 32H39L44 12H8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "13",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "39",
      "cy": "39",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThumbsUp.js

/* harmony default export */ var ThumbsUp = (IconWrapper('thumbs-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27.6 18.6V11.4C27.6 8.41766 25.1823 6 22.2 6L15 22.2V42H35.916C37.7111 42.0203 39.2468 40.7149 39.516 38.94L42 22.74C42.1585 21.6957 41.8504 20.6346 41.1573 19.8375C40.4643 19.0405 39.4561 18.588 38.4 18.6H27.6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 22.0002H10.194C8.08532 21.9629 6.2827 23.7096 6 25.7996V38.3996C6.2827 40.4896 8.08532 42.0369 10.194 41.9996H15V22.0002Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThumbsDown.js

/* harmony default export */ var ThumbsDown = (IconWrapper('thumbs-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20.3795 29.4V36.6C20.3795 39.5823 22.7972 42 25.7795 42L32.9795 25.8V6H12.0635C10.2684 5.97971 8.73268 7.28507 8.46351 9.06L5.97951 25.26C5.82101 26.3043 6.1291 27.3654 6.82217 28.1625C7.51524 28.9595 8.52336 29.412 9.57951 29.4H20.3795Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.9795 6H37.7855C39.8942 5.96271 41.6968 7.51003 41.9795 9.6V22.2C41.6968 24.29 39.8942 26.0373 37.7855 26H32.9795V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Male.js

/* harmony default export */ var Male = (IconWrapper('male', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.9514 15.0485V6.04846H32.9514",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.413 38.001C15.8803 43.4683 24.7447 43.4683 30.212 38.001C32.9457 35.2673 34.3125 31.6844 34.3125 28.1015C34.3125 24.5186 32.9457 20.9357 30.212 18.202C24.7447 12.7346 15.8803 12.7346 10.413 18.202C4.94567 23.6693 4.94567 32.5336 10.413 38.001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.9999 18L39.9515 8.0485",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Female.js

/* harmony default export */ var Female = (IconWrapper('female', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(-6.000000, -2.000000)"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(28.000000, 28.000000) scale(-1, -1) rotate(45.000000) translate(-28.000000, -28.000000) translate(13.500000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.3370491,47 C22.0690356,47 28.3370491,40.7319865 28.3370491,33 C28.3370491,29.1340068 26.7700457,25.6340068 24.236544,23.1005051 C21.7030423,20.5670034 18.2030423,19 14.3370491,19 C6.6050626,19 0.337049096,25.2680135 0.337049096,33 C0.337049096,40.7319865 6.6050626,47 14.3370491,47 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M14.5,19 L14.5,1",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M5.5,11 L23.5,11",
      "stroke-linecap": props.strokeLinecap
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ScanCode.js

/* harmony default export */ var ScanCode = (IconWrapper('scan-code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", [h("g", [h("path", {
    "attrs": {
      "d": "M33 6H42V15M42 33V42H33M15 42H6V33M6 15V6H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SettingConfig.js

/* harmony default export */ var SettingConfig = (IconWrapper('setting-config', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.5 10H35.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.5 6V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.5 10L5.5 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.5 24H5.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.5 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.5 24H21.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.5 38H35.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.5 34V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.5 38H5.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Application.js

/* harmony default export */ var Application = (IconWrapper('application', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.0393 22V42H8.03931V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.84231 13.7766C4.31276 17.7377 7.26307 22 11.5092 22C14.8229 22 17.5276 19.3137 17.5276 16C17.5276 19.3137 20.2139 22 23.5276 22H24.546C27.8597 22 30.546 19.3137 30.546 16C30.546 19.3137 33.2518 22 36.5655 22C40.8139 22 43.767 17.7352 42.2362 13.7723L39.2337 6H8.84523L5.84231 13.7766Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AllApplication.js

/* harmony default export */ var AllApplication = (IconWrapper('all-application', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "28",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "6",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "28",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AtSign.js

/* harmony default export */ var AtSign = (IconWrapper('at-sign', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44V44C28.9886 44 33.5507 42.1735 37.0539 39.1529",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.4183 32 32 28.4183 32 24C32 19.5817 28.4183 16 24 16C19.5817 16 16 19.5817 16 24C16 28.4183 19.5817 32 24 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24C32 27.3137 34.6863 30 38 30V30C41.3137 30 44 27.3137 44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 25V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MapDraw.js

/* harmony default export */ var MapDraw = (IconWrapper('map-draw', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 6L4.83812 4.18408C4.21884 3.89826 3.49661 3.94774 2.92209 4.31533C2.34758 4.68292 2 5.31795 2 6H4ZM4 36H2C2 36.7801 2.45358 37.489 3.16188 37.8159L4 36ZM17 42L16.1619 43.8159C16.7812 44.1017 17.5034 44.0523 18.0779 43.6847C18.6524 43.3171 19 42.682 19 42H17ZM17 12H19C19 11.2199 18.5464 10.511 17.8381 10.1841L17 12ZM3.16188 37.8159L16.1619 43.8159L17.8381 40.1841L4.83812 34.1841L3.16188 37.8159ZM17.8381 10.1841L4.83812 4.18408L3.16188 7.81592L16.1619 13.8159L17.8381 10.1841ZM15 12V42H19V12H15ZM6 36V6H2V36H6Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 42H15C15 42.6723 15.3378 43.2996 15.899 43.6697C16.4603 44.0398 17.1699 44.1031 17.7878 43.8383L17 42ZM31 36L31.7878 37.8383C32.5232 37.5231 33 36.8001 33 36H31ZM31 6H33C33 5.32771 32.6622 4.70041 32.101 4.33032C31.5397 3.96023 30.8301 3.89688 30.2122 4.16171L31 6ZM17 12L16.2122 10.1617C15.4768 10.4769 15 11.1999 15 12H17ZM17.7878 43.8383L31.7878 37.8383L30.2122 34.1617L16.2122 40.1617L17.7878 43.8383ZM30.2122 4.16171L16.2122 10.1617L17.7878 13.8383L31.7878 7.83829L30.2122 4.16171ZM33 36V6H29V36H33ZM15 12V42H19V12H15Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M31 36H29C29 36.7801 29.4536 37.489 30.1619 37.8159L31 36ZM44 42L43.1619 43.8159C43.7812 44.1017 44.5034 44.0523 45.0779 43.6847C45.6524 43.3171 46 42.682 46 42H44ZM44 12H46C46 11.2199 45.5464 10.511 44.8381 10.1841L44 12ZM31 6L31.8381 4.18408C31.2188 3.89826 30.4966 3.94774 29.9221 4.31533C29.3476 4.68292 29 5.31795 29 6H31ZM30.1619 37.8159L43.1619 43.8159L44.8381 40.1841L31.8381 34.1841L30.1619 37.8159ZM44.8381 10.1841L31.8381 4.18408L30.1619 7.81592L43.1619 13.8159L44.8381 10.1841ZM42 12V42H46V12H42ZM33 36V6H29V36H33Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LocalTwo.js

/* harmony default export */ var LocalTwo = (IconWrapper('local-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C24 44 39 32 39 19C39 10.7157 32.2843 4 24 4C15.7157 4 9 10.7157 9 19C9 32 24 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 25C27.3137 25 30 22.3137 30 19C30 15.6863 27.3137 13 24 13C20.6863 13 18 15.6863 18 19C18 22.3137 20.6863 25 24 25Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LocalPin.js

/* harmony default export */ var LocalPin = (IconWrapper('local-pin', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 20C28.4183 20 32 16.4183 32 12C32 7.58172 28.4183 4 24 4C19.5817 4 16 7.58172 16 12C16 16.4183 19.5817 20 24 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32H12L4 44H44L36 32H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Planet.js

/* harmony default export */ var Planet = (IconWrapper('planet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 40C32.8366 40 40 32.8366 40 24C40 15.1634 32.8366 8 24 8C15.1634 8 8 15.1634 8 24C8 32.8366 15.1634 40 24 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37.5641 15.5098V15.5098C41.7833 15.878 44.6787 17.1724 45.2504 19.306C46.3939 23.5737 37.8068 29.5827 26.0705 32.7274C14.3343 35.8721 3.89316 34.9617 2.74963 30.694C2.1505 28.458 4.22245 25.744 8.01894 23.2145V23.2145",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpandRight.js

/* harmony default export */ var ExpandRight = (IconWrapper('expand-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4V44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 4H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 44H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 20L28 24L32 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpandLeft.js

/* harmony default export */ var ExpandLeft = (IconWrapper('expand-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 7C4 5.34315 5.34315 4 7 4H41C42.6569 4 44 5.34315 44 7V41C44 42.6569 42.6569 44 41 44H7C5.34315 44 4 42.6569 4 41V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4V44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 20L20 24L16 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 44H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpandUp.js

/* harmony default export */ var ExpandUp = (IconWrapper('expand-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 32L24 28L28 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 8V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpandDown.js

/* harmony default export */ var ExpandDown = (IconWrapper('expand-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8C4 5.79086 5.79086 4 8 4H40C42.2091 4 44 5.79086 44 8V40C44 42.2091 42.2091 44 40 44H8C5.79086 44 4 42.2091 4 40V8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 32H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 16L24 20L28 16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WindmillTwo.js

/* harmony default export */ var WindmillTwo = (IconWrapper('windmill-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 24C29.5228 24 34 19.5228 34 14C34 8.47715 29.5228 4 24 4V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24C24 29.5228 28.4772 34 34 34C39.5228 34 44 29.5228 44 24H24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24C24 18.4772 19.5228 14 14 14C8.47715 14 4 18.4772 4 24H24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24C18.4772 24 14 28.4772 14 34C14 39.5228 18.4772 44 24 44V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HomeTwo.js

/* harmony default export */ var HomeTwo = (IconWrapper('home-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 44V20L24 4L4 20L4 44H16V26H32V44H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Clue.js

/* harmony default export */ var Clue = (IconWrapper('clue', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 16C39.7614 16 42 13.7614 42 11C42 8.23858 39.7614 6 37 6C34.2386 6 32 8.23858 32 11C32 13.7614 34.2386 16 37 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 42C13.7614 42 16 39.7614 16 37C16 34.2386 13.7614 32 11 32C8.23858 32 6 34.2386 6 37C6 39.7614 8.23858 42 11 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 16V35.5042C37 39.0917 34.0917 42 30.5042 42V42C26.9166 42 24.0083 39.0917 24.0083 35.5042V12.5042C24.0083 8.91201 21.0963 6 17.5042 6V6C13.912 6 11 8.91201 11 12.5042L11 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConnectionPointTwo.js

/* harmony default export */ var ConnectionPointTwo = (IconWrapper('connection-point-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 8L13 8C10 8 4 10 4 16C4 22 10 24 13 24H35C38 24 44 26 44 32C44 38 38 40 35 40H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 12C42.2091 12 44 10.2091 44 8C44 5.79086 42.2091 4 40 4C37.7909 4 36 5.79086 36 8C36 10.2091 37.7909 12 40 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44C10.2091 44 12 42.2091 12 40C12 37.7909 10.2091 36 8 36C5.79086 36 4 37.7909 4 40C4 42.2091 5.79086 44 8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConnectionArrow.js

/* harmony default export */ var ConnectionArrow = (IconWrapper('connection-arrow', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 3.953742)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(0.000000, 4.046258)"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36.9898007,0.0264752559 L8.18181818,0.0264752559 C5.45454545,0.0264752559 0,1.550592 0,7.96725867 C0,14.3839253 5.45454545,16 8.18181818,16 L31.9938556,16 C34.7211284,16 40,17.5679494 40,23.9846161 C40,30.4012828 34.7211284,32.0029211 31.9938556,32.0029211 L2.06499237,32.0029211"
    }
  }), h("polyline", {
    "attrs": {
      "points": "4.04568993 27.99261 0.0673983189 32.0591365 4.04568993 36"
    }
  })]), h("polyline", {
    "attrs": {
      "transform": "translate(36.032050, 4.003695) scale(-1, 1) translate(-36.032050, -4.003695) ",
      "points": "38.0211961 5.32907052e-15 34.0429045 4.06652653 38.0211961 8.00739003"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Platte.js

/* harmony default export */ var Platte = (IconWrapper('platte', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C29.9601 44 26.3359 35.136 30 31C33.1264 27.4709 44 29.0856 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 17C29.6569 17 31 15.6569 31 14C31 12.3431 29.6569 11 28 11C26.3431 11 25 12.3431 25 14C25 15.6569 26.3431 17 28 17Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 21C17.6569 21 19 19.6569 19 18C19 16.3431 17.6569 15 16 15C14.3431 15 13 16.3431 13 18C13 19.6569 14.3431 21 16 21Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 34C18.6569 34 20 32.6569 20 31C20 29.3431 18.6569 28 17 28C15.3431 28 14 29.3431 14 31C14 32.6569 15.3431 34 17 34Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RecordDisc.js

/* harmony default export */ var RecordDisc = (IconWrapper('record-disc', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12C17.3726 12 12 17.3726 12 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36C30.6274 36 36 30.6274 36 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Earth.js

/* harmony default export */ var Earth = (IconWrapper('earth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C28.4183 44 32 35.0457 32 24C32 12.9543 28.4183 4 24 4C19.5817 4 16 12.9543 16 24C16 35.0457 19.5817 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 10.1421C13.4772 13.7614 18.4772 16 24 16V16C29.5229 16 34.5229 13.7614 38.1422 10.1421",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1422 37.8579C34.5229 34.2386 29.5229 32 24 32C18.4772 32 13.4772 34.2386 9.85791 37.8579",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Report.js

/* harmony default export */ var Report = (IconWrapper('report', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(3.754351, 2.827607)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.2456488,32.1723935 L8.24564876,32.1723935 L8.24564876,18.1723935 C8.24564876,11.5449765 13.6182318,6.1723935 20.2456488,6.1723935 C26.8730658,6.1723935 32.2456488,11.5449765 32.2456488,18.1723935 L32.2456488,32.1723935 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M4.24564876,39.1723935 L36.2456488,39.1723935",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M1,9.08742569 L2.51206274,11.8647745",
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(2.000000, 10.587426) rotate(-43.000000) translate(-2.000000, -10.587426) "
    }
  }), h("path", {
    "attrs": {
      "d": "M10.3594726,1 L9.0448312,3.87605946",
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(10.021384, 2.500000) rotate(-43.000000) translate(-10.021384, -2.500000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M2.78432782,5.80894292 L7.02438401,5.6608769",
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(4.681446, 6.068090) scale(-1, 1) rotate(-43.000000) translate(-4.681446, -6.068090) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Protect.js

/* harmony default export */ var Protect = (IconWrapper('protect', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 49",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 9.25564L24.0086 4L42 9.25564V20.0337C42 31.3622 34.7502 41.4194 24.0026 45.0005C13.2521 41.4195 6 31.36 6 20.0287V9.25564Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 23L22 30L34 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Harm.js

/* harmony default export */ var Harm = (IconWrapper('harm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 49",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 9.25564L24.0086 4L42 9.25564V20.0337C42 31.3622 34.7502 41.4194 24.0026 45.0005C13.2521 41.4195 6 31.36 6 20.0287V9.25564Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.5 18.4081L18.1863 29.7218",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.1863 18.4081L29.5 29.7218",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Shield.js

/* harmony default export */ var Shield = (IconWrapper('shield', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M6,8.25564385 L24.008642,3 L42,8.25564385 L42,19.0336798 C42,30.3621834 34.7502223,40.4194233 24.0026245,44.0005035 L24.0026245,44.0005035 C13.2520792,40.4194856 6,30.3599802 6,19.0286999 L6,8.25564385 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShieldAdd.js

/* harmony default export */ var ShieldAdd = (IconWrapper('shield-add', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M6,8.25564385 L24.008642,3 L42,8.25564385 L42,19.0336798 C42,30.3621834 34.7502223,40.4194233 24.0026245,44.0005035 L24.0026245,44.0005035 C13.2520792,40.4194856 6,30.3599802 6,19.0286999 L6,8.25564385 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.2928932,17.2928932 L29.6066017,28.6066017",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(23.949747, 22.949747) rotate(45.000000) translate(-23.949747, -22.949747) "
    }
  }), h("path", {
    "attrs": {
      "d": "M29.6066017,17.2928932 L18.2928932,28.6066017",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(23.949747, 22.949747) rotate(-135.000000) translate(-23.949747, -22.949747) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bug.js

/* harmony default export */ var Bug = (IconWrapper('bug', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M20,38 C32,38 34,27.5323633 34,24 C34,20.837862 34,16.1711953 34,10 L6,10 C6,13.442296 6,18.1089627 6,24 C6,27.450596 8,38 20,38 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M3.55271368e-15,4 L6,10",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40,4 L34,10",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M0,23 L6,23",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40,23 L34,23",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M3,40 L9,34",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37,40 L31,34",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20,38 L20,10",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10.920475,35.0408965 C13.002464,36.7831828 15.9245088,38 20,38 L20,38 C24.1112534,38 27.0487287,36.7713317 29.1341392,35.0138386",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28,8.33333333 C28,3.73096042 24.418278,0 20,0 C15.581722,0 12,3.73096042 12,8.33333333 L12,10 L28,10 L28,8.33333333 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxSuccessR.js

/* harmony default export */ var InboxSuccessR = (IconWrapper('inbox-success-r', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L15 34L17 38H31L33 34L44 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 20L23 27L36 14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxUploadR.js

/* harmony default export */ var InboxUploadR = (IconWrapper('inbox-upload-r', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L15 34L17 38H31L33 34L44 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 20L24 12L32 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V13",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxDownloadR.js

/* harmony default export */ var InboxDownloadR = (IconWrapper('inbox-download-r', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L15 34L17 38H31L33 34L44 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 22L24 30L32 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29V12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxR.js

/* harmony default export */ var InboxR = (IconWrapper('inbox-r', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L15 34L17 38H31L33 34L44 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 16H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxSuccess.js

/* harmony default export */ var InboxSuccess = (IconWrapper('inbox-success', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 9 6 9 6 39 6 44 30"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 14.9090909 30 16.7272727 36 31.2727273 36 33.0909091 30 44 30 44 43 4 43"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "19 19.2142857 23 24 31 16"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Inbox.js

/* harmony default export */ var Inbox = (IconWrapper('inbox', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 9 6 9 6 39 6 44 30"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 14.9090909 30 16.7272727 36 31.2727273 36 33.0909091 30 44 30 44 43 4 43"
    }
  }), h("path", {
    "attrs": {
      "d": "M19,14 L29,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16,22 L32,22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxIn.js

/* harmony default export */ var InboxIn = (IconWrapper('inbox-in', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 9 6 9 6 39 6 44 30"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 14.9090909 30 16.7272727 36 31.2727273 36 33.0909091 30 44 30 44 43 4 43"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "18 20 24 26 30 20"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,26 L24,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InboxOut.js

/* harmony default export */ var InboxOut = (IconWrapper('inbox-out', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 9 6 9 6 39 6 44 30"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "4 30 14.9090909 30 16.7272727 36 31.2727273 36 33.0909091 30 44 30 44 43 4 43"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(24.000000, 17.000000) scale(1, -1) translate(-24.000000, -17.000000) ",
      "points": "18 14 24 20 30 14"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,26 L24,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Umbrella.js

/* harmony default export */ var Umbrella = (IconWrapper('umbrella', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 3.000000)",
      "stroke": props.colors[0],
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.7272727,24 C15.1515152,21.5757576 17.5757576,20.3636364 20,20.3636364 C22.4242424,20.3636364 24.8484848,21.5757576 27.2727273,24 C30.1010101,21.5757576 32.2222222,20.3636364 33.6363636,20.3636364 C35.0505051,20.3636364 37.1717172,21.5757576 40,24 C40,12.954305 31.045695,4 20,4 C8.954305,4 0,12.954305 0,24 C2.82828283,21.5757576 4.94949495,20.3636364 6.36363636,20.3636364 C7.77777778,20.3636364 9.8989899,21.5757576 12.7272727,24 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M20,21 L20,35.5536268 C20,38.5677816 22.4858452,41.0112369 25.5,41.0112369 C28.5141548,41.0112369 31,38.5677816 31,35.5536268",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20,0 L20,4",
      "stroke-linecap": props.strokeLinecap
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UmbrellaOne.js

/* harmony default export */ var UmbrellaOne = (IconWrapper('umbrella-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M44,24 C44,12.954305 35.045695,4 24,4 C12.954305,4 4,12.954305 4,24 L44,24 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,24 L24,38.5536268 C24,41.5677816 26.4858452,44.0112369 29.5,44.0112369 C32.5141548,44.0112369 35,41.5677816 35,38.5536268",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Parachute.js

/* harmony default export */ var Parachute = (IconWrapper('parachute', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.7272727,20 C15.1515152,17.5757576 17.5757576,16.3636364 20,16.3636364 C22.4242424,16.3636364 24.8484848,17.5757576 27.2727273,20 C30.1010101,17.5757576 32.2222222,16.3636364 33.6363636,16.3636364 C35.0505051,16.3636364 37.1717172,17.5757576 40,20 C40,8.954305 31.045695,0 20,0 C8.954305,0 0,8.954305 0,20 C2.82828283,17.5757576 4.94949495,16.3636364 6.36363636,16.3636364 C7.77777778,16.3636364 9.8989899,17.5757576 12.7272727,20 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "0 20 20 40 12.7272727 20"
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "27.2727273 20 20 40 40 20"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Coupon.js

/* harmony default export */ var Coupon = (IconWrapper('coupon', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 8.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,11.3129605 L0,0 L40,0 L40,11.3129605 C37.8814684,12.0679939 36.3636364,14.1052655 36.3636364,16.5 C36.3636364,18.8947345 37.8814684,20.9320061 40,21.6870395 L40,33 L0,33 L0,21.6870395 C2.11853159,20.9320061 3.63636364,18.8947345 3.63636364,16.5 C3.63636364,14.1052655 2.11853159,12.0679939 3.33066907e-16,11.3129605 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap,
      "points": "14.5454545 6.41666667 20 11.9166667 25.4545455 6.41666667"
    }
  }), h("path", {
    "attrs": {
      "d": "M13.6363636,13.75 L26.3636364,13.75",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.6363636,20.1666667 L26.3636364,20.1666667",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20,13.75 L20,26.5833333",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocumentFolder.js

/* harmony default export */ var DocumentFolder = (IconWrapper('document-folder', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(5.000000, 5.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "18",
      "y": "1",
      "width": "10",
      "height": "36"
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "28",
      "y": "1",
      "width": "10",
      "height": "36"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "points": "3.5 0 14 0.840909091 10.5 37 0 36.1590909"
    }
  }), h("path", {
    "attrs": {
      "d": "M33,13 L33,10",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23,13 L23,10",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterfallsV.js

/* harmony default export */ var WaterfallsV = (IconWrapper('waterfalls-v', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(5.500000, 5.500000)",
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "transform": "translate(9.000000, 7.500000) rotate(-270.000000) translate(-9.000000, -7.500000) ",
      "x": "2",
      "y": "-1",
      "width": "14",
      "height": "17"
    }
  }), h("rect", {
    "attrs": {
      "transform": "translate(28.000000, 29.500000) rotate(-270.000000) translate(-28.000000, -29.500000) ",
      "x": "21",
      "y": "21",
      "width": "14",
      "height": "17"
    }
  }), h("rect", {
    "attrs": {
      "transform": "translate(31.000000, 7.500000) rotate(-90.000000) translate(-31.000000, -7.500000) ",
      "x": "24",
      "y": "2",
      "width": "14",
      "height": "11"
    }
  }), h("rect", {
    "attrs": {
      "transform": "translate(6.000000, 29.500000) rotate(-90.000000) translate(-6.000000, -29.500000) ",
      "x": "-1",
      "y": "24",
      "width": "14",
      "height": "11"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterfallsH.js

/* harmony default export */ var WaterfallsH = (IconWrapper('waterfalls-h', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 6.000000)",
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "x": "0",
      "y": "0",
      "width": "14",
      "height": "11"
    }
  }), h("rect", {
    "attrs": {
      "x": "22",
      "y": "25",
      "width": "14",
      "height": "11"
    }
  }), h("rect", {
    "attrs": {
      "x": "22",
      "y": "0",
      "width": "14",
      "height": "17"
    }
  }), h("rect", {
    "attrs": {
      "x": "0",
      "y": "19",
      "width": "14",
      "height": "17"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Me.js

/* harmony default export */ var Me = (IconWrapper('me', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23C26.7614 23 29 20.7614 29 18C29 15.2386 26.7614 13 24 13C21.2386 13 19 15.2386 19 18C19 20.7614 21.2386 23 24 23Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.022 38.332C10.3657 33.1206 14.7016 29 20 29H28C33.2914 29 37.6229 33.1097 37.9767 38.3113",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/System.js

/* harmony default export */ var System = (IconWrapper('system', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "28",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 20C38.866 20 42 16.866 42 13C42 9.13401 38.866 6 35 6C31.134 6 28 9.13401 28 13C28 16.866 31.134 20 35 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "28",
      "width": "14",
      "height": "14",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Log.js

/* harmony default export */ var Log = (IconWrapper('log', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "13",
      "y": "10",
      "width": "28",
      "height": "34",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 10V4H8C7.44772 4 7 4.44772 7 5V38H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 22H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 30H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Order.js

/* harmony default export */ var Order = (IconWrapper('order', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33.0499 7H38C39.1046 7 40 7.89543 40 9V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42L8 9C8 7.89543 8.89543 7 10 7H16H17V10H31V7H33.0499Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "17",
      "y": "4",
      "width": "14",
      "height": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.9996 19L19 27.0012H29.004L21.0003 35.0018",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BookOne.js

/* harmony default export */ var BookOne = (IconWrapper('book-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 37C6 29.2967 6 11 6 11C6 7.68629 8.68629 5 12 5H36V31C36 31 17.2326 31 12 31C8.7 31 6 33.6842 6 37Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 31C36 31 13.1537 31 12 31C8.68629 31 6 33.6863 6 37C6 40.3137 8.68629 43 12 43C14.2091 43 26.8758 43 42 43V7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 37H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BookOpen.js

/* harmony default export */ var BookOpen = (IconWrapper('book-open', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 7H16C20.4183 7 24 10.5817 24 15V43C24 39.6863 21.3137 37 18 37H4V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 7H32C27.5817 7 24 10.5817 24 15V43C24 39.6863 26.6863 37 30 37H44V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Alarm.js

/* harmony default export */ var Alarm = (IconWrapper('alarm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 25C14 19.4772 18.4772 15 24 15C29.5228 15 34 19.4772 34 25V41H14V25Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 5V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.8916 9.32817L33.9632 11.6263",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.219 20.2875L39.2645 20.8085",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.78104 20.2875L8.73546 20.8084",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.1084 9.32817L14.0368 11.6263",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 41H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GamePs.js

/* harmony default export */ var GamePs = (IconWrapper('game-ps', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "28",
      "y": "28",
      "width": "16",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 4L22 20H4L13 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 20C40.4183 20 44 16.4183 44 12C44 7.58172 40.4183 4 36 4C31.5817 4 28 7.58172 28 12C28 16.4183 31.5817 20 36 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28L20 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 28L4 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlusCross.js

/* harmony default export */ var PlusCross = (IconWrapper('plus-cross', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 4H18V18H4V30H18V44H30V30H44V18H30V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Error.js

/* harmony default export */ var icons_Error = (IconWrapper('error', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 11L11 6L24 19L37 6L42 11L29 24L42 37L37 42L24 29L11 42L6 37L19 24L6 11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Correct.js

/* harmony default export */ var Correct = (IconWrapper('correct', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 24L9 19L19 29L39 9L44 14L19 39L4 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fingerprint.js

/* harmony default export */ var Fingerprint = (IconWrapper('fingerprint', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 43V22C18 18.6863 20.6863 16 24 16C27.3137 16 30 18.6863 30 22V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40V22C12 15.3726 17.3726 10 24 10C30.6274 10 36 15.3726 36 22V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 35V22C6 12.0589 14.0589 4 24 4C33.9411 4 42 12.0589 42 22V35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24.625V21.875",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Projector.js

/* harmony default export */ var Projector = (IconWrapper('projector', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 16H44V32H4V16H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 38V32H12V38H6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 38V32H36V38H42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "16",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "16",
      "r": "3",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Slide.js

/* harmony default export */ var Slide = (IconWrapper('slide', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 5.000000)",
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "3",
      "y": "0.5",
      "width": "34",
      "height": "28"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "points": "12 36.5 20 28.5 28 36.5"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(19.950550, 14.097000) rotate(-135.000000) translate(-19.950550, -14.097000) ",
      "points": "23.1048003 3.07144261 23.009533 10.9557885 16.7962996 11.0244674 16.8108301 25.1225569"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,0.5 L40,0.5",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ppt.js

/* harmony default export */ var Ppt = (IconWrapper('ppt', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 8H40V34H8L8 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 16L27 21L22 26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42L24 34L32 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlideTwo.js

/* harmony default export */ var SlideTwo = (IconWrapper('slide-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 8H40V34H8L8 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18L34 21L31 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 24L14 21L17 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42L24 34L32 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CalendarThirty.js

/* harmony default export */ var CalendarThirty = (IconWrapper('calendar-thirty', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "4",
      "y1": "11",
      "x2": "4",
      "y2": "23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "44",
      "y1": "11",
      "x2": "44",
      "y2": "23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M28 22V36H36V22H28Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22H20V36H12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 29H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CalendarThirtyTwo.js

/* harmony default export */ var CalendarThirtyTwo = (IconWrapper('calendar-thirty-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "36",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M28 20V34H36V20H28Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20H20V34H12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 27H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CalendarDot.js

/* harmony default export */ var CalendarDot = (IconWrapper('calendar-dot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "44",
      "y1": "11",
      "x2": "44",
      "y2": "23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 22H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 22H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 29H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 29H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 29H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 36H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 36H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "4",
      "y1": "11",
      "x2": "4",
      "y2": "23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Connect.js

/* harmony default export */ var Connect = (IconWrapper('connect', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10 42C13.3137 42 16 39.3137 16 36C16 32.6863 13.3137 30 10 30C6.68629 30 4 32.6863 4 36C4 39.3137 6.68629 42 10 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 44C41.3137 44 44 41.3137 44 38C44 34.6863 41.3137 32 38 32C34.6863 32 32 34.6863 32 38C32 41.3137 34.6863 44 38 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M22 28C26.4183 28 30 24.4183 30 20C30 15.5817 26.4183 12 22 12C17.5817 12 14 15.5817 14 20C14 24.4183 17.5817 28 22 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34 12C36.2091 12 38 10.2091 38 8C38 5.79086 36.2091 4 34 4C31.7909 4 30 5.79086 30 8C30 10.2091 31.7909 12 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 11L15 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12L28 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 33.5L28 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 31L18 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MallBag.js

/* harmony default export */ var MallBag = (IconWrapper('mall-bag', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 12.6V41C6 42.1045 6.89543 43 8 43H40C41.1046 43 42 42.1045 42 41V12.6H6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 12.6L36.3333 5H11.6667L6 12.6V12.6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.5554 19.2C31.5554 23.3973 28.1727 26.7999 23.9999 26.7999C19.8271 26.7999 16.4443 23.3973 16.4443 19.2",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MapDistance.js

/* harmony default export */ var MapDistance = (IconWrapper('map-distance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3"
    }
  }), h("path", {
    "attrs": {
      "d": "M12,38 L37,28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2,6"
    }
  }), h("path", {
    "attrs": {
      "d": "M14,31 C16.6666667,27.139426 18,24.4727593 18,23 C18,20.790861 16.209139,19 14,19 C11.790861,19 10,20.790861 10,23 C10,24.4727593 11.3333333,27.139426 14,31 Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34,22 C36.6666667,18.139426 38,15.4727593 38,14 C38,11.790861 36.209139,10 34,10 C31.790861,10 30,11.790861 30,14 C30,15.4727593 31.3333333,18.139426 34,22 Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pound.js

/* harmony default export */ var Pound = (IconWrapper('pound', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 5.500000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,10.5 L36,10.5"
    }
  }), h("path", {
    "attrs": {
      "d": "M-8,18.5 L28,18.5",
      "transform": "translate(10.000000, 18.500000) rotate(90.000000) translate(-10.000000, -18.500000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M8,18.5 L44,18.5",
      "transform": "translate(26.000000, 18.500000) rotate(90.000000) translate(-26.000000, -18.500000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M0,26.5 L36,26.5"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Radiation.js

/* harmony default export */ var Radiation = (IconWrapper('radiation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 6.000000)"
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[0],
      "cx": "20.0036696",
      "cy": "18",
      "r": "3"
    }
  }), h("path", {
    "attrs": {
      "d": "M15.0405459,25.4759893 C16.4625532,26.4194367 18.1673051,26.9687808 20,26.9687808 C21.8326949,26.9687808 23.5374468,26.4194367 24.9594541,25.4759893 L31.0210091,34.6826856 C27.8609928,36.7792354 24.0726554,38 20,38 C15.9273446,38 12.1390072,36.7792354 8.97899086,34.6826856 L15.0405459,25.4759893 Z M11.0158888,18.4840224 L0.0353083641,19.1449814 C0.0118800062,18.7474045 0,18.3467124 0,17.9432378 C0,10.0911138 4.49943957,3.29287286 11.0537715,4.05231404e-14 L15.9741972,9.86878078 C13.0247478,11.3505736 11,14.409782 11,17.9432378 C11,18.1248014 11.005346,18.3051128 11.0158888,18.4840224 Z M24.0258028,9.86878078 L28.9462285,-3.55271368e-15 C35.5005604,3.29287286 40,10.0911138 40,17.9432378 C40,18.3467124 39.98812,18.7474045 39.9646916,19.1449814 L28.9841112,18.4840224 C28.994654,18.3051128 29,18.1248014 29,17.9432378 C29,14.409782 26.9752522,11.3505736 24.0258028,9.86878078 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Screenshot.js

/* harmony default export */ var Screenshot = (IconWrapper('screenshot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(0.000000, -0.000000)"
    }
  }, [h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "10",
      "cy": "36",
      "r": "6"
    }
  }), h("path", {
    "attrs": {
      "d": "M40.0614849,8 C24,28.4331467 15.8047379,38.6805435 14.2426407,40.2426407 C11.8994949,42.5857864 8.10050506,42.5857864 5.75735931,40.2426407",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "38",
      "cy": "36",
      "r": "6"
    }
  }), h("path", {
    "attrs": {
      "d": "M42.2426407,40.2426407 C39.8994949,42.5857864 36.1005051,42.5857864 33.7573593,40.2426407 C32.1952621,38.6805435 24,28.4459921 8.00071241,8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ScreenshotTwo.js

/* harmony default export */ var ScreenshotTwo = (IconWrapper('screenshot-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24V4H44V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10 44C13.3137 44 16 41.3137 16 38C16 34.6863 13.3137 32 10 32C6.68629 32 4 34.6863 4 38C4 41.3137 6.68629 44 10 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 12C20.3905 33.2663 15.8047 40.6805 14.2426 42.2426C11.8995 44.5858 8.10047 44.5858 5.75732 42.2426",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 44C41.3137 44 44 41.3137 44 38C44 34.6863 41.3137 32 38 32C34.6863 32 32 34.6863 32 38C32 41.3137 34.6863 44 38 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.2426 42.2426C39.8995 44.5858 36.1005 44.5858 33.7574 42.2426C32.1953 40.6805 27.6095 33.2663 12 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Electrocardiogram.js

/* harmony default export */ var Electrocardiogram = (IconWrapper('electrocardiogram', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "24",
      "cy": "24",
      "r": "20"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "11 28.1320956 16.6844708 28.1320956 21.2233858 13 24.8952638 35 29.4483373 24.6175277 32.9127137 28.1320956 37 28.1320956"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StopwatchStart.js

/* harmony default export */ var StopwatchStart = (IconWrapper('stopwatch-start', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 3.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "17",
      "cy": "24",
      "r": "17"
    }
  }), h("path", {
    "attrs": {
      "d": "M11,1 L23,1",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17,16 L17,24",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25,24 L17,24",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17,1 L17,5",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Puzzle.js

/* harmony default export */ var Puzzle = (IconWrapper('puzzle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,20 L0,8 L9,8 L9,6 C9,2.6862915 11.6862915,0 15,0 C18.3137085,0 21,2.6862915 21,6 L21,8 L30,8 L30,20 L34,20 C37.3137085,20 40,22.6862915 40,26 C40,29.3137085 37.3137085,32 34,32 L30,32 L30,40 L0,40 L0,32 L4,32 C7.3137085,32 10,29.3137085 10,26 C10,22.6862915 7.3137085,20 4,20 L0,20 Z"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rocket.js

/* harmony default export */ var Rocket = (IconWrapper('rocket', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.7050001,3.89449161 L17,0 L22.2949999,3.89449161 C25.8819274,6.53268984 28,10.7198227 28,15.172478 L28,33 L6,33 L6,15.172478 C6,10.7198227 8.11807256,6.53268984 11.7050001,3.89449161 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("polygon", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "6 13 -2.83106871e-14 19 -2.83106871e-14 27 6 24"
    }
  }), h("polygon", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "28 13 34 19 34 27 28 24"
    }
  }), h("path", {
    "attrs": {
      "d": "M11,35 L11,38",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17,35 L17,40",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23,35 L23,38",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/City.js

/* harmony default export */ var City = (IconWrapper('city', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "26",
      "width": "8",
      "height": "16",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 34H13",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "4",
      "width": "24",
      "height": "38",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "22",
      "y": "10",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "10",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "22",
      "y": "17",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "17",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "24",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "31",
      "width": "4",
      "height": "4",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Page.js

/* harmony default export */ var Page = (IconWrapper('page', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17.3333H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.3333 44V17.3333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoadSignBoth.js

/* harmony default export */ var RoadSignBoth = (IconWrapper('road-sign-both', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", [h("g", [h("path", {
    "attrs": {
      "d": "M10 8V16H38L42 12L38 8L10 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 23V31H10L6 27L10 23L38 23Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 44H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwitchButton.js

/* harmony default export */ var SwitchButton = (IconWrapper('switch-button', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "16",
      "rx": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "28",
      "width": "40",
      "height": "16",
      "rx": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 14C37.1046 14 38 13.1046 38 12C38 10.8954 37.1046 10 36 10C34.8954 10 34 10.8954 34 12C34 13.1046 34.8954 14 36 14Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 38C13.1046 38 14 37.1046 14 36C14 34.8954 13.1046 34 12 34C10.8954 34 10 34.8954 10 36C10 37.1046 10.8954 38 12 38Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BasketballClothes.js

/* harmony default export */ var BasketballClothes = (IconWrapper('basketball-clothes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 4C30 7.31371 27.3137 10 24 10C20.6863 10 18 7.31371 18 4H15C13.8954 4 12.9976 4.89414 12.9681 5.99832C12.8995 8.57035 12.6829 12.9512 12 15C11.2389 17.2832 8.16103 20.1456 6.73361 21.3831C6.27454 21.7811 6 22.3537 6 22.9613V42C6 43.1046 6.89543 44 8 44H40C41.1046 44 42 43.1046 42 42V22.9613C42 22.3537 41.7255 21.7811 41.2664 21.3831C39.839 20.1456 36.7611 17.2832 36 15C35.3171 12.9512 35.1005 8.57035 35.0319 5.99832C35.0024 4.89414 34.1046 4 33 4H30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "27",
      "y": "24",
      "width": "6",
      "height": "12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 24H21V36H15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 30H15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RemindDisable.js

/* harmony default export */ var RemindDisable = (IconWrapper('remind-disable', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4C16.268 4 10 10.268 10 18V38H38V18C38 10.268 31.732 4 24 4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38V18C10 10.268 16.268 4 24 4C31.732 4 38 10.268 38 18V38M4 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C26.7614 44 29 41.7614 29 39V38H19V39C19 41.7614 21.2386 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 17L29 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 17L19 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VolumeDown.js

/* harmony default export */ var VolumeDown = (IconWrapper('volume-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V42C17 42 11.7985 32.8391 11.7985 32.8391H6C4.89543 32.8391 4 31.9437 4 30.8391V17.0108C4 15.9062 4.89543 15.0108 6 15.0108H11.7985C11.7985 15.0108 17 6 24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VolumeUp.js

/* harmony default export */ var VolumeUp = (IconWrapper('volume-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V42C17 42 11.7985 32.8391 11.7985 32.8391H6C4.89543 32.8391 4 31.9437 4 30.8391V17.0108C4 15.9062 4.89543 15.0108 6 15.0108H11.7985C11.7985 15.0108 17 6 24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 18V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowLeft.js

/* harmony default export */ var ArrowLeft = (IconWrapper('arrow-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5.79891 24L41.7989 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.7988 36L5.79883 24L17.7988 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowRight.js

/* harmony default export */ var ArrowRight = (IconWrapper('arrow-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.9999 24H5.99992",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12L42 24L30 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowUp.js

/* harmony default export */ var ArrowUp = (IconWrapper('arrow-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6L24 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18L24 6L36 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowDown.js

/* harmony default export */ var ArrowDown = (IconWrapper('arrow-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 42L24 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 30L24 42L12 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightSmall.js

/* harmony default export */ var RightSmall = (IconWrapper('right-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 24.0083H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12L36 24L24 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpSmall.js

/* harmony default export */ var UpSmall = (IconWrapper('up-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0083 12.1005V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24L24 12L36 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftSmall.js

/* harmony default export */ var LeftSmall = (IconWrapper('left-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 23.9917L36 23.9917",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36L12 24L24 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownSmall.js

/* harmony default export */ var DownSmall = (IconWrapper('down-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0083 35.8995V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24L24 36L12 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowRightUp.js

/* harmony default export */ var ArrowRightUp = (IconWrapper('arrow-right-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 11H37V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.5441 36.4559L36.9999 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowRightDown.js

/* harmony default export */ var ArrowRightDown = (IconWrapper('arrow-right-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 19V37H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.5441 11.5442L36.9999 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowLeftUp.js

/* harmony default export */ var ArrowLeftUp = (IconWrapper('arrow-left-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.0001 11L36.456 36.4558",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 11H11V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowLeftDown.js

/* harmony default export */ var ArrowLeftDown = (IconWrapper('arrow-left-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 37H11L11 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.0001 37L36.456 11.5441",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftSmallUp.js

/* harmony default export */ var LeftSmallUp = (IconWrapper('left-small-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 32L15 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 33L15 15H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftSmallDown.js

/* harmony default export */ var LeftSmallDown = (IconWrapper('left-small-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 33L32 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 33H15L15 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightSmallUp.js

/* harmony default export */ var RightSmallUp = (IconWrapper('right-small-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 32L33 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 15H33V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightSmallDown.js

/* harmony default export */ var RightSmallDown = (IconWrapper('right-small-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.3535 32.3536L15.3535 15.3536",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.3535 14.3535V32.3535H14.3535",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToRight.js

/* harmony default export */ var ToRight = (IconWrapper('to-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 24.0083H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 12L34 24L22 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToLeft.js

/* harmony default export */ var ToLeft = (IconWrapper('to-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 23.9917L42 23.9917",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 36L14 24L26 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 36L5 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToTop.js

/* harmony default export */ var ToTop = (IconWrapper('to-top', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0083 14.1005V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 26L24 14L36 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 6H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToBottom.js

/* harmony default export */ var ToBottom = (IconWrapper('to-bottom', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0083 33.8995V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 22L24 34L12 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 42H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Right.js

/* harmony default export */ var Right = (IconWrapper('right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 12L31 24L19 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Left.js

/* harmony default export */ var Left = (IconWrapper('left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31 36L19 24L31 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Down.js

/* harmony default export */ var Down = (IconWrapper('down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 18L25 30L13 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Up.js

/* harmony default export */ var Up = (IconWrapper('up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 30L25 18L37 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Download.js

/* harmony default export */ var Download = (IconWrapper('download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 24.0083V42H42V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 23L24 32L15 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9917 6V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Logout.js

/* harmony default export */ var Logout = (IconWrapper('logout', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9917 6L6 6L6 42H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 33L42 24L33 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 23.9917H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Upload.js

/* harmony default export */ var Upload = (IconWrapper('upload', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("mask", {
    "attrs": {
      "id": props.id + '6cfa13a7',
      "maskUnits": "userSpaceOnUse",
      "x": "0",
      "y": "0",
      "width": "48",
      "height": "48"
    },
    "style": {
      maskType: 'alpha'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })]), h("g", {
    "attrs": {
      "mask": 'url(#' + props.id + '6cfa13a7' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 24.0083V42H42V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 15L24 6L15 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9917 32V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Login.js

/* harmony default export */ var Login = (IconWrapper('login', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9917 6L6 6L6 42H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 33L16 24L25 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 23.9917L16 23.9917",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoubleLeft.js

/* harmony default export */ var DoubleLeft = (IconWrapper('double-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 36L12 24L24 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 36L24 24L36 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoubleRight.js

/* harmony default export */ var DoubleRight = (IconWrapper('double-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 12L24 24L12 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12L36 24L24 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoubleUp.js

/* harmony default export */ var DoubleUp = (IconWrapper('double-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 24L24 12L36 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36L24 24L36 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoubleDown.js

/* harmony default export */ var DoubleDown = (IconWrapper('double-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 12L24 24L12 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24L24 36L12 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpOne.js

/* harmony default export */ var UpOne = (IconWrapper('up-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 29L24 17L36 29H12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownOne.js

/* harmony default export */ var DownOne = (IconWrapper('down-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 19L24 31L12 19H36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftOne.js

/* harmony default export */ var LeftOne = (IconWrapper('left-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 36L18 24L30 12L30 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightOne.js

/* harmony default export */ var RightOne = (IconWrapper('right-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 12L32 24L20 36V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FullScreen.js

/* harmony default export */ var FullScreen = (IconWrapper('full-screen', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 6H42V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 33V42H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 42H6V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 15V6H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OffScreen.js

/* harmony default export */ var OffScreen = (IconWrapper('off-screen', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 6V15H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 6V15H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 42V33H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 42V33H41.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FullScreenOne.js

/* harmony default export */ var FullScreenOne = (IconWrapper('full-screen-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6L16 15.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 41.8995L16 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.0001 41.8995L32.1006 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.8995 6L32 15.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 6H42V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 33V42H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 42H6V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 15V6H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OffScreenOne.js

/* harmony default export */ var OffScreenOne = (IconWrapper('off-screen-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6L16 15.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 41.8995L16 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.0001 41.8995L32.1006 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.8995 6L32 15.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 7V16H41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 7V16H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 41V32H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 41V32H40.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MenuUnfold.js

/* harmony default export */ var MenuUnfold = (IconWrapper('menu-unfold', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 11H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 37H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.3433 29.6569L42.0001 24L36.3433 18.3431",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MenuFold.js

/* harmony default export */ var MenuFold = (IconWrapper('menu-fold', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 11H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 37H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.6567 29.6569L7.99988 24L13.6567 18.3431",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MenuUnfoldOne.js

/* harmony default export */ var MenuUnfoldOne = (IconWrapper('menu-unfold-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 10.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 37.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19L8 24L16 29V19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MenuFoldOne.js

/* harmony default export */ var MenuFoldOne = (IconWrapper('menu-fold-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 10.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 37.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 19L16 24L8 29V19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownloadOne.js

/* harmony default export */ var DownloadOne = (IconWrapper('download-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.6777 20.271C7.27476 21.3181 4 25.2766 4 30C4 35.5228 8.47715 40 14 40V40C14.9474 40 15.864 39.8683 16.7325 39.6221",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.0547 20.271C40.4577 21.3181 43.7324 25.2766 43.7324 30C43.7324 35.5228 39.2553 40 33.7324 40V40C32.785 40 31.8684 39.8683 30.9999 39.6221",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 20C36 13.3726 30.6274 8 24 8C17.3726 8 12 13.3726 12 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.0654 30.119L23.9999 37.0764L31.1318 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V33.5382",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownloadTwo.js

/* harmony default export */ var DownloadTwo = (IconWrapper('download-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.5178 34.3161C43.8044 32.005 45.2136 27.8302 44.0001 24C42.7866 20.1698 39.0705 18.0714 35.0527 18.0745H32.7317C31.2144 12.1613 26.2082 7.79572 20.1435 7.0972C14.0787 6.39868 8.21121 9.5118 5.38931 14.9253C2.56741 20.3388 3.37545 26.9317 7.42115 31.5035",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0086 41L24.0002 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.3638 34.636L23.9998 41L17.6358 34.636",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UploadOne.js

/* harmony default export */ var UploadOne = (IconWrapper('upload-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.6777 20.271C7.27476 21.3181 4 25.2766 4 30C4 35.5228 8.47715 40 14 40C14.9474 40 15.864 39.8683 16.7325 39.6221",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.0547 20.271C40.4577 21.3181 43.7324 25.2766 43.7324 30C43.7324 35.5228 39.2553 40 33.7324 40V40C32.785 40 31.8684 39.8683 30.9999 39.6221",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 20C36 13.3726 30.6274 8 24 8C17.3726 8 12 13.3726 12 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.0654 27.881L23.9999 20.9236L31.1318 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V24.4618",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UploadTwo.js

/* harmony default export */ var UploadTwo = (IconWrapper('upload-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0081 41L23.9997 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.5178 34.3161C43.8044 32.005 45.2136 27.8302 44.0001 24C42.7866 20.1698 39.0705 18.0714 35.0527 18.0745H32.7317C31.2144 12.1613 26.2082 7.79572 20.1435 7.0972C14.0787 6.39868 8.21121 9.5118 5.38931 14.9253C2.56741 20.3388 3.37545 26.9317 7.42115 31.5035",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.3638 27.636L23.9998 21.2721L17.6358 27.636",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Send.js

/* harmony default export */ var Send = (IconWrapper('send', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43 5L29.7 43L22.1 25.9L5 18.3L43 5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.0001 5L22.1001 25.9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Reject.js

/* harmony default export */ var Reject = (IconWrapper('reject', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M19.0099137,42 L9,42 C7.34314575,42 6,40.6568542 6,39 L6,9 C6,7.34314575 7.34314575,6 9,6 L9,6 L39,6 C40.6568542,6 42,7.34314575 42,9 L42,19.0303905",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42,29.0345925 L42,41 C42,41.5522847 41.5522847,42 41,42 L29.037068,42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42,29.0345925 L18,29.0345925",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(20.000000, 29.000000) scale(-1, 1) translate(-20.000000, -29.000000) ",
      "points": "17 23 23 29 17 35"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SortOne.js

/* harmony default export */ var SortOne = (IconWrapper('sort-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 11.5H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24.5H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 11.5V37.5L42 30.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 37.5H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SortTwo.js

/* harmony default export */ var SortTwo = (IconWrapper('sort-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 6L19 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 17.8995L19 5.89949",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 42.1005L29 6.10051",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 42.1005L41 30.1005",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SortThree.js

/* harmony default export */ var SortThree = (IconWrapper('sort-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M25 17L16 8L7 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.9917 34L15.9917 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 31L33 40L24 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.9917 14V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SortFour.js

/* harmony default export */ var SortFour = (IconWrapper('sort-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.9922 12.0076L23.9999 3.99994L32.02 12.02",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.02 36.0124L24.0123 44.0201L15.9923 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6L24 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowCircleUp.js

/* harmony default export */ var ArrowCircleUp = (IconWrapper('arrow-circle-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 33.5V15.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 24.5L24 15.5L15 24.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowCircleDown.js

/* harmony default export */ var ArrowCircleDown = (IconWrapper('arrow-circle-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 24L24 33L15 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowCircleLeft.js

/* harmony default export */ var ArrowCircleLeft = (IconWrapper('arrow-circle-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4917 24.5H14.4917",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.4917 15.5L14.4917 24.5L23.4917 33.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowCircleRight.js

/* harmony default export */ var ArrowCircleRight = (IconWrapper('arrow-circle-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.4917 24.5H32.4917",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.4917 15.5L32.4917 24.5L23.4917 33.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpC.js

/* harmony default export */ var UpC = (IconWrapper('up-c', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 27L24 18L15 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightC.js

/* harmony default export */ var RightC = (IconWrapper('right-c', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 33L30 24L21 15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftC.js

/* harmony default export */ var LeftC = (IconWrapper('left-c', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 33L18 24L27 15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownC.js

/* harmony default export */ var DownC = (IconWrapper('down-c', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 21L24 30L15 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DownloadThree.js

/* harmony default export */ var DownloadThree = (IconWrapper('download-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 28L24 36L16 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V35.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 14H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UploadThree.js

/* harmony default export */ var UploadThree = (IconWrapper('upload-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 28L24 20L16 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V20.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 14H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Install.js

/* harmony default export */ var Install = (IconWrapper('install', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.4004 11.551L36.3332 5H11.6666L6.58398 11.551",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 13C6 11.8954 6.89543 11 8 11H40C41.1046 11 42 11.8954 42 13V40C42 41.6569 40.6569 43 39 43H9C7.34315 43 6 41.6569 6 40V13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 27L24 35L16 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9917 19V35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlayCycle.js

/* harmony default export */ var PlayCycle = (IconWrapper('play-cycle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 25C4 18.3502 9.39624 13 16 13L44 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 7L44 13L38 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 23C44 29.6498 38.6038 35 32 35H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 41L4 35L10 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoopOnce.js

/* harmony default export */ var LoopOnce = (IconWrapper('loop-once', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43.8233 25.2305C43.7019 25.9889 43.5195 26.727 43.2814 27.4395C42.763 28.9914 41.9801 30.4222 40.9863 31.6785C38.4222 34.9201 34.454 37 30 37H16C9.39697 37 4 31.6785 4 25C4 18.3502 9.39624 13 16 13L44 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 7L44 13L38 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlayOnce.js

/* harmony default export */ var PlayOnce = (IconWrapper('play-once', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43.8233 25.2305C43.7019 25.9889 43.5195 26.727 43.2814 27.4395C42.763 28.9914 41.9801 30.4222 40.9863 31.6785C38.4222 34.9201 34.454 37 30 37H16C9.39697 37 4 31.6785 4 25C4 18.3502 9.39624 13 16 13L44 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 7L44 13L38 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19L21 22L19.5 23.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Return.js

/* harmony default export */ var Return = (IconWrapper('return', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.3638 8L5.99981 14.364L12.3638 20.7279",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 14.364L28.6722 14.364C35.557 14.364 41.2122 19.8028 41.4805 26.6824V26.6824C41.7641 33.952 35.9474 40 28.6722 40H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GoStart.js

/* harmony default export */ var GoStart = (IconWrapper('go-start', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 36L22 24L34 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GoEnd.js

/* harmony default export */ var GoEnd = (IconWrapper('go-end', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 12L26 24L14 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToBottomOne.js

/* harmony default export */ var ToBottomOne = (IconWrapper('to-bottom-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 14L24 26L12 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 34H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ToTopOne.js

/* harmony default export */ var ToTopOne = (IconWrapper('to-top-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 33L24 21L36 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 13H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rotate.js

/* harmony default export */ var Rotate = (IconWrapper('rotate', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 24H42V42H12V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 8V17H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.4747 13.2985C35.1956 8.87049 29.933 6 24 6C18.1788 6 13.0029 8.76334 9.71272 13.0498L6 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FullScreenTwo.js

/* harmony default export */ var FullScreenTwo = (IconWrapper('full-screen-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 6H42V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 6H6V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 42H42V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 42H6V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L29 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 29L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OffScreenTwo.js

/* harmony default export */ var OffScreenTwo = (IconWrapper('off-screen-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 19H29V7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 6H6V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 42H42V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 29H19V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L29 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 29L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MoveIn.js

/* harmony default export */ var MoveIn = (IconWrapper('move-in', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 12L24 16L28 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 36L24 32L28 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 20L32 24L36 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24L44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20L16 24L12 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CycleMovement.js

/* harmony default export */ var CycleMovement = (IconWrapper('cycle-movement', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 15L24 19L28 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19V8C24 5.79086 25.7909 4 28 4H40C42.2091 4 44 5.79086 44 8V19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 33L24 29L20 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29V40C24 42.2091 22.2091 44 20 44H8C5.79086 44 4 42.2091 4 40V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 20L29 24L33 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24L40 24C42.2091 24 44 25.7909 44 28V40C44 42.2091 42.2091 44 40 44H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 28L19 24L15 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 24L8 24C5.79086 24 4 22.2091 4 20L4 8C4 5.79086 5.79086 4 8 4L19 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RotationVertical.js

/* harmony default export */ var RotationVertical = (IconWrapper('rotation-vertical', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 28L34 24L30 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.1679 16C31.6248 8.93638 28.1006 4 24 4C18.4772 4 14 12.9543 14 24C14 35.0457 18.4772 44 24 44C29.5228 44 34 35.0457 34 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RotationHorizontal.js

/* harmony default export */ var RotationHorizontal = (IconWrapper('rotation-horizontal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 31L24 35L20 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 34.1679C39.0636 32.6248 44 29.1006 44 25C44 19.4772 35.0457 15 24 15C12.9543 15 4 19.4772 4 25C4 30.5228 12.9543 35 24 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cycle.js

/* harmony default export */ var Cycle = (IconWrapper('cycle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 35H7V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 41H35V35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 13H41V7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 7H13V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 7.29405C7.57778 10.8715 4 17.0179 4 24C4 25.0196 4.0763 26.0214 4.2235 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.9999 43.7765C26.0213 43.9237 25.0195 44 23.9999 44C17.0178 44 10.8714 40.4222 7.29395 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.7765 21C43.9237 21.9786 44 22.9804 44 24C44 30.9821 40.4222 37.1285 35 40.706",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 4.2235C21.9786 4.0763 22.9804 4 24 4C30.9821 4 37.1285 7.57778 40.706 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RecyclingPool.js

/* harmony default export */ var RecyclingPool = (IconWrapper('recycling-pool', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 16L24 20L28 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 29L36 33L40 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 29L12 33L16 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32.8669V19.637C36 17.4278 37.7909 15.637 40 15.637H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32.8669V19.637C12 17.4278 10.2091 15.637 8 15.637H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36V40C4 42.2091 5.79086 44 8 44H40C42.2091 44 44 42.2091 44 40V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlphabeticalSortingTwo.js

/* harmony default export */ var AlphabeticalSortingTwo = (IconWrapper('alphabetical-sorting-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 4V43.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 4H23L7 20H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 44L15.2759 28L23 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36L36 44L28 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlphabeticalSorting.js

/* harmony default export */ var AlphabeticalSorting = (IconWrapper('alphabetical-sorting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 4V43.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 28H23L7 44H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 20L15.2759 4L23 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36L36 44L28 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sort.js

/* harmony default export */ var Sort = (IconWrapper('sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 42L15 29H33L24 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6L15 19H33L24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SendOne.js

/* harmony default export */ var SendOne = (IconWrapper('send-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6L4 20.1383L24 24.0083L29.0052 44L42 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 24.0083L29.6651 18.3515",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Recycling.js

/* harmony default export */ var Recycling = (IconWrapper('recycling', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33.5264 19.5L25.793 6.10544C25.01 4.74918 23.0425 4.77835 22.3 6.15723L17 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 40H41.4209C42.9855 40 43.9442 38.2843 43.1242 36.9518L37 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 23L4.77297 36.986C3.98869 38.3192 4.95001 40 6.49684 40H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 36L25 40L29 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 18.2004L33.4641 19.6646L34.9282 14.2004",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.5 24.4641L12.9641 23L14.4282 28.4641",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Change.js

/* harmony default export */ var Change = (IconWrapper('change', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 31H38V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 21H10V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 11L38 5L32 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 37L10 43L4 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Outgoing.js

/* harmony default export */ var Outgoing = (IconWrapper('outgoing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 35C18 32.7909 16.2091 31 14 31C11.7909 31 10 32.7909 10 35C10 37.2091 11.7909 39 14 39C16.2091 39 18 37.2091 18 35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 35C37 32.7909 35.2091 31 33 31C30.7909 31 29 32.7909 29 35C29 37.2091 30.7909 39 33 39C35.2091 39 37 37.2091 37 35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 35H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 35H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37 35H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M38 19L44 13L38 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Incoming.js

/* harmony default export */ var Incoming = (IconWrapper('incoming', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 13C18 10.7909 16.2091 9 14 9C11.7909 9 10 10.7909 10 13C10 15.2091 11.7909 17 14 17C16.2091 17 18 15.2091 18 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 13C37 10.7909 35.2091 9 33 9C30.7909 9 29 10.7909 29 13C29 15.2091 30.7909 17 33 17C35.2091 17 37 15.2091 37 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 13H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37 13H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10 29L4 35L10 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 35H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TransferData.js

/* harmony default export */ var TransferData = (IconWrapper('transfer-data', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 8L4 14L10 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 28L44 34L38 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerDownLeft.js

/* harmony default export */ var CornerDownLeft = (IconWrapper('corner-down-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 18L8 26L16 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 10V23C40 24.6569 38.6569 26 37 26H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerDownRight.js

/* harmony default export */ var CornerDownRight = (IconWrapper('corner-down-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 18L40 26L32 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 10V23C8 24.6569 9.34315 26 11 26H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerLeftDown.js

/* harmony default export */ var CornerLeftDown = (IconWrapper('corner-left-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 34L20 42L28 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 10H23C21.3431 10 20 11.3431 20 13V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerLeftUp.js

/* harmony default export */ var CornerLeftUp = (IconWrapper('corner-left-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 16L20 8L28 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 40H23C21.3431 40 20 38.6569 20 37V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerRightDown.js

/* harmony default export */ var CornerRightDown = (IconWrapper('corner-right-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 34L28 42L36 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 10H25C26.6569 10 28 11.3431 28 13V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerRightUp.js

/* harmony default export */ var CornerRightUp = (IconWrapper('corner-right-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 16L28 8L36 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40H25C26.6569 40 28 38.6569 28 37V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerUpLeft.js

/* harmony default export */ var CornerUpLeft = (IconWrapper('corner-up-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 14L8 22L16 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 38V25C40 23.3431 38.6569 22 37 22H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CornerUpRight.js

/* harmony default export */ var CornerUpRight = (IconWrapper('corner-up-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 14L40 22L32 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 38V25C8 23.3431 9.34315 22 11 22H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Shuffle.js

/* harmony default export */ var Shuffle = (IconWrapper('shuffle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 41.9999H42V29.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 17.9999V5.99994H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23.9999L6 5.99994M31.5 31.4999L34 33.9999L39 38.9999L41.5 41.4999L42 41.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShuffleOne.js

/* harmony default export */ var ShuffleOne = (IconWrapper('shuffle-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 33L44 37L40 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 7L44 11L40 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 11.0001H37C29.8203 11.0001 24 16.8204 24 24.0001V24.0001C24 31.1798 29.8203 37.0001 37 37.0001H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 37.0001H11C18.1797 37.0001 24 31.1798 24 24.0001V24.0001C24 16.8204 18.1797 11.0001 11 11.0001L4 11.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TrendingDown.js

/* harmony default export */ var TrendingDown = (IconWrapper('trending-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 34.9999L41 34.9999L41 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 13L16.3385 25.5L26.1846 19.5L41 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TrendingUp.js

/* harmony default export */ var TrendingUp = (IconWrapper('trending-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.9999 27.0007L40.9999 15.0007L29 15.0007",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 37.0002L16.3385 24.5002L26.1846 30.5002L41 15.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FigmaFlattenSelection.js

/* harmony default export */ var FigmaFlattenSelection = (IconWrapper('figma-flatten-selection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 18L24 26L16 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 42L12 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 34L6 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6L24 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignRight.js

/* harmony default export */ var AlignRight = (IconWrapper('align-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "17",
      "width": "28",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignBottom.js

/* harmony default export */ var AlignBottom = (IconWrapper('align-bottom', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "17",
      "y": "6",
      "width": "14",
      "height": "28",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 42H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignVertically.js

/* harmony default export */ var AlignVertically = (IconWrapper('align-vertically', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "17",
      "y": "7",
      "width": "14",
      "height": "34",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 24H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignHorizontally.js

/* harmony default export */ var AlignHorizontally = (IconWrapper('align-horizontally', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "7",
      "y": "17",
      "width": "34",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignLeft.js

/* harmony default export */ var AlignLeft = (IconWrapper('align-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "14.5",
      "y": "17",
      "width": "28",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.5 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTop.js

/* harmony default export */ var AlignTop = (IconWrapper('align-top', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "17",
      "y": "14.5",
      "width": "14",
      "height": "28",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6.5H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DistributeHorizontally.js

/* harmony default export */ var DistributeHorizontally = (IconWrapper('distribute-horizontally', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "30",
      "y": "10",
      "width": "28",
      "height": "12",
      "transform": "rotate(90 30 10)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DistributeVertically.js

/* harmony default export */ var DistributeVertically = (IconWrapper('distribute-vertically', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("mask", {
    "attrs": {
      "id": props.id + 'adb5128d',
      "maskUnits": "userSpaceOnUse",
      "x": "0",
      "y": "0",
      "width": "48",
      "height": "48"
    },
    "style": {
      maskType: 'alpha'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })]), h("g", {
    "attrs": {
      "mask": 'url(#' + props.id + 'adb5128d' + ')'
    }
  }, [h("rect", {
    "attrs": {
      "x": "38",
      "y": "30",
      "width": "28",
      "height": "12",
      "transform": "rotate(180 38 30)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 40H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 8L6 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextBottom.js

/* harmony default export */ var AlignTextBottom = (IconWrapper('align-text-bottom', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 36.3056H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 23L24 29L18 23V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextMiddle.js

/* harmony default export */ var AlignTextMiddle = (IconWrapper('align-text-middle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 36L24 30L30 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9999 31V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 12L24 18L30 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9999 17V4.00001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextTop.js

/* harmony default export */ var AlignTextTop = (IconWrapper('align-text-top', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 36.3056H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12L24 6L18 12V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SendBackward.js

/* harmony default export */ var SendBackward = (IconWrapper('send-backward', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "width": "36",
      "height": "8",
      "transform": "matrix(1 0 0 -1 6 14)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "width": "36",
      "height": "8",
      "transform": "matrix(1 0 0 -1 6 28)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 36L24 42L18 36V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 42V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BringForward.js

/* harmony default export */ var BringForward = (IconWrapper('bring-forward', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "34",
      "width": "36",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "20",
      "width": "36",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12L24 6L18 12V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TitleLevel.js

/* harmony default export */ var TitleLevel = (IconWrapper('title-level', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8.00029V40.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8.00029V40.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24.0003H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 28.0003V40.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32 32.0238C32 29.4597 34 28.0003 37 28.0003C40 28.0003 42 29.3583 42 32.0238C42 33.8007 42 36.464 42 40.0137",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/H1.js

/* harmony default export */ var H1 = (IconWrapper('h1', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.2261 24L39.0001 19.0166V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/H3.js

/* harmony default export */ var H3 = (IconWrapper('h3', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 19H42L34.8571 27.4C38.4286 27.4 42 30.9 42 34.4C42 37.9 39.1429 40 37 40C34.619 40 32.9524 39.3 32 37.9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/H2.js

/* harmony default export */ var H2 = (IconWrapper('h2', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.6667 25.4333C32.6667 22.2667 35 21 37.3333 21C39.6667 21 42 22.2667 42 25.4333C42 31.1333 32 32.4 32 37.4667V40H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelFourTitle.js

/* harmony default export */ var LevelFourTitle = (IconWrapper('level-four-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.9767 40V21L31 32.9967V35.0199H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelFiveTitle.js

/* harmony default export */ var LevelFiveTitle = (IconWrapper('level-five-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 22.0093H33V29.0341C34.2658 28.2387 35.0475 28.0243 37.016 28.0243C39.516 28.0243 42 29.2952 42 33.0002C42 36.7051 39.1532 38.0033 37.016 38.0033C36.1032 38.0033 35.1991 37.7793 34.5621 37.2782C33.9252 36.777 33.183 36.0002 33 35.0078",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelSixTitle.js

/* harmony default export */ var LevelSixTitle = (IconWrapper('level-six-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.5 40C39.5376 40 42 37.5376 42 34.5C42 31.4624 39.5376 29 36.5 29C33.4624 29 31 31.4624 31 34.5C31 37.5376 33.4624 40 36.5 40Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M41.5962 24.7392C40.7778 22.5461 38.8044 21 36.5 21C33.4624 21 31 23.6863 31 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 26.5V35.0319",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelSevenTitle.js

/* harmony default export */ var LevelSevenTitle = (IconWrapper('level-seven-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.998 21H41.9997L33.9936 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelEightTitle.js

/* harmony default export */ var LevelEightTitle = (IconWrapper('level-eight-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 29C39.2091 29 41 27.2091 41 25C41 22.7909 39.2091 21 37 21C34.7909 21 33 22.7909 33 25C33 27.2091 34.7909 29 37 29Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M37 40C39.7614 40 42 37.7614 42 35C42 32.2386 39.7614 30 37 30C34.2386 30 32 32.2386 32 35C32 37.7614 34.2386 40 37 40Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelNineTitle.js

/* harmony default export */ var LevelNineTitle = (IconWrapper('level-nine-title', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.5 21C33.4624 21 31 23.4624 31 26.5C31 29.5376 33.4624 32 36.5 32C39.5376 32 42 29.5376 42 26.5C42 23.4624 39.5376 21 36.5 21Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M31 36C31.8184 38.1932 33.5476 40 36.5 40C39.5376 40 42 37.3137 42 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 34.5V25.9681",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OrderedList.js

/* harmony default export */ var OrderedList = (IconWrapper('ordered-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 7.99979H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16 23.9998H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16 39.9998H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6.09846 25.8377L6.65788 25.4401C8.41881 24.2075 9.14728 23.39 9.14728 21.8668C9.14728 19.9905 7.81992 18.8528 6.13324 18.8528C4.44656 18.8528 3.11921 19.9905 3.11921 21.8668C3.11921 22.5005 3.6329 23.0142 4.26657 23.0142C4.858 23.0142 5.34492 22.5667 5.40721 21.9919L5.41394 21.8668C5.41394 21.3432 5.64214 21.1476 6.13324 21.1476C6.62434 21.1476 6.85254 21.3432 6.85254 21.8668C6.85254 22.3261 6.54208 22.7015 5.53835 23.4212L5.11062 23.7221C3.51966 24.8383 2.85254 25.5802 2.85254 26.9335V28.0002C2.85254 28.6339 3.36623 29.1476 3.99991 29.1476H7.99991C8.63358 29.1476 9.14728 28.6339 9.14728 28.0002C9.14728 27.3665 8.63358 26.8528 7.99991 26.8528H5.15404C5.19657 26.601 5.44658 26.3195 6.09846 25.8377Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M4.22812 37.8742C3.64598 38.6077 4.12232 39.6746 5.02305 39.7623L5.14289 39.768C5.91339 39.768 6.83218 40.7328 6.83218 41.6002C6.83218 42.3176 6.34196 42.8323 6.00004 42.8323C5.47643 42.8323 5.1917 42.7277 5.03398 42.5399L4.98596 42.4742C4.64024 41.9297 3.91856 41.7685 3.37406 42.1142C2.82955 42.46 2.6684 43.1816 3.01412 43.7261C3.63061 44.6971 4.67706 45.168 6.00004 45.168C7.65811 45.168 9.16789 43.5828 9.16789 41.6002C9.16789 40.1693 8.29532 38.7823 7.09083 38.0244L8.91481 35.7262C9.52226 34.9608 8.97718 33.8323 8.00004 33.8323H4.00004C3.35505 33.8323 2.83218 34.3552 2.83218 35.0002C2.83218 35.6452 3.35505 36.168 4.00004 36.168H5.5822L4.22812 37.8742Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M4.83105 13C4.83105 13.6455 5.35434 14.1688 5.99984 14.1688C6.64534 14.1688 7.16862 13.6455 7.16862 13V4.00002C7.16862 2.93993 5.8707 2.42739 5.1464 3.20146L3.1464 5.3389C2.70537 5.81024 2.72994 6.54986 3.20128 6.99089C3.63168 7.39362 4.2858 7.40811 4.73198 7.0487L4.83105 6.95913V13Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextItalic.js

/* harmony default export */ var TextItalic = (IconWrapper('text-italic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 6H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 42H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 5.95238L19 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FontSize.js

/* harmony default export */ var FontSize = (IconWrapper('font-size', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 10.9333L8 6H40V10.9333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextBold.js

/* harmony default export */ var TextBold = (IconWrapper('text-bold', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M25.4062 24C30.9118 24 35.375 19.5228 35.375 14C35.375 8.47715 30.9118 4 25.4062 4H10V24H25.4062Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M29.0312 44C34.5368 44 39 39.5228 39 34C39 28.4772 34.5368 24 29.0312 24H10V44H29.0312Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextUnderline.js

/* harmony default export */ var TextUnderline = (IconWrapper('text-underline', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 44H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 6.09698C37 12.7636 37 15.3333 37 22C37 29.1797 31.1797 35 24 35C16.8203 35 11 29.1797 11 22C11 15.3333 11 12.7636 11 6.09698",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FontSizeTwo.js

/* harmony default export */ var FontSizeTwo = (IconWrapper('font-size-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44L24 4L44 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextCenter.js

/* harmony default export */ var AlignTextCenter = (IconWrapper('align-text-center', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 8.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M30,11 L6,11"
    }
  }), h("path", {
    "attrs": {
      "d": "M36,1 L0,1"
    }
  }), h("path", {
    "attrs": {
      "d": "M36,21 L0,21"
    }
  }), h("path", {
    "attrs": {
      "d": "M30,31 L6,31"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextBoth.js

/* harmony default export */ var AlignTextBoth = (IconWrapper('align-text-both', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 19H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 9H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 29H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextRight.js

/* harmony default export */ var AlignTextRight = (IconWrapper('align-text-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 9H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 19H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 29H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextLeft.js

/* harmony default export */ var AlignTextLeft = (IconWrapper('align-text-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 8.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M36,1 L3.55271368e-15,1"
    }
  }), h("path", {
    "attrs": {
      "d": "M28,11 L5.32907052e-15,11"
    }
  }), h("path", {
    "attrs": {
      "d": "M36,21 L0,21"
    }
  }), h("path", {
    "attrs": {
      "d": "M28,31 L5.32907052e-15,31"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextLeftOne.js

/* harmony default export */ var AlignTextLeftOne = (IconWrapper('align-text-left-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 24H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 15H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 33H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextCenterOne.js

/* harmony default export */ var AlignTextCenterOne = (IconWrapper('align-text-center-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 24H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 15H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 33H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextRightOne.js

/* harmony default export */ var AlignTextRightOne = (IconWrapper('align-text-right-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 24H22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 15H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 33H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextBothOne.js

/* harmony default export */ var AlignTextBothOne = (IconWrapper('align-text-both-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 24H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 15H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 33H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextBottomOne.js

/* harmony default export */ var AlignTextBottomOne = (IconWrapper('align-text-bottom-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 27H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 34H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextTopOne.js

/* harmony default export */ var AlignTextTopOne = (IconWrapper('align-text-top-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 20H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 13H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AlignTextMiddleOne.js

/* harmony default export */ var AlignTextMiddleOne = (IconWrapper('align-text-middle-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 20H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 27H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextStyleOne.js

/* harmony default export */ var TextStyleOne = (IconWrapper('text-style-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 42L8.94118 30M32 42L27.0588 30M27.0588 30L25 25L18 8L11 25L8.94118 30M27.0588 30H8.94118",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 10L44 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 20L44 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 30L44 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 40H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LeftAlignment.js

/* harmony default export */ var LeftAlignment = (IconWrapper('left-alignment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 14L42 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24L30 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 34H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CenterAlignment.js

/* harmony default export */ var CenterAlignment = (IconWrapper('center-alignment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 14L42 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24L36 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 34H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ScatterAlignment.js

/* harmony default export */ var ScatterAlignment = (IconWrapper('scatter-alignment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 14L42 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24L38 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 34L34 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FlipHorizontally.js

/* harmony default export */ var FlipHorizontally = (IconWrapper('flip-horizontally', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L16 12V34H4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34H32V12L44 34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FlipVertically.js

/* harmony default export */ var FlipVertically = (IconWrapper('flip-vertically', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 24L6 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4L36 16H14V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 44V32H36L14 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ungroup.js

/* harmony default export */ var Ungroup = (IconWrapper('ungroup', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.2727 4H4V11.2727H11.2727V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9998 36.7273H36.7271V44H43.9998V36.7273Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.2727 24H4V31.2727H11.2727V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9998 36.7273H16.7271V44H23.9998V36.7273Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.2727 4H24V11.2727H31.2727V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9998 16.7273H36.7271V24H43.9998V16.7273Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.2729 7.63636H24.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 40.3636H36.7273",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.2729 27.6364H27.6366V11.2727",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.828 20.3636H36.7274M20.3638 36.7273V27.6286V36.7273Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.63623 11.2727V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.3638 24V36.7273",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BringToFront.js

/* harmony default export */ var BringToFront = (IconWrapper('bring-to-front', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 18H19C18.4477 18 18 18.4477 18 19V41C18 41.5523 18.4477 42 19 42H41C41.5523 42 42 41.5523 42 41V19C42 18.4477 41.5523 18 41 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.96906 6H6V10.0336",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.99705 30H6V26.012",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.0023 6H30V10.0152",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.0283 6H20.0083",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 16C6 18.6536 6 19.9869 6 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 16C30 18.6765 30 19.3456 30 18.0074",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.9927 30H18.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SelectedFocus.js

/* harmony default export */ var SelectedFocus = (IconWrapper('selected-focus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 4H4V12H12V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36H36V44H44V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H4V44H12V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H36V12H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "1 5"
    }
  }), h("path", {
    "attrs": {
      "d": "M40 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "1 5"
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "1 5"
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "1 5"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Selected.js

/* harmony default export */ var Selected = (IconWrapper('selected', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 4H4V12H12V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36H36V44H44V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H4V44H12V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H36V12H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Group.js

/* harmony default export */ var Group = (IconWrapper('group', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 4H4V12H12V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36H36V44H44V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H4V44H12V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H36V12H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 36V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M16 16H25.6V22.4H32V32H22.4V25.6H16V16Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SentToBack.js

/* harmony default export */ var SentToBack = (IconWrapper('sent-to-back', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 18H41C41.5523 18 42 18.4477 42 19V41C42 41.5523 41.5523 42 41 42H19C18.4477 42 18 41.5523 18 41V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.96906 6H6V10.0336",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.99705 30H6V26.012",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 30H29.9971V26.012",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.0023 6H30V9.99785",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.0283 6H20.0083",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 16V20.0148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 16V20.0148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.9927 30H20.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Write.js

/* harmony default export */ var Write = (IconWrapper('write', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5.32497 43.4998L13.81 43.5L44.9227 12.3873L36.4374 3.90204L5.32471 35.0147L5.32497 43.4998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.9521 12.3873L36.4374 20.8726",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Edit.js

/* harmony default export */ var Edit = (IconWrapper('edit', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7 42H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 26.7199V34H18.3172L39 13.3081L31.6951 6L11 26.7199Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EditOne.js

/* harmony default export */ var EditOne = (IconWrapper('edit-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 4H9C7.89543 4 7 4.89543 7 6V42C7 43.1046 7.89543 44 9 44H37C38.1046 44 39 43.1046 39 42V20.0046",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 18H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13 28H25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40.9991 6.00079L29.0044 17.9956",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EditTwo.js

/* harmony default export */ var EditTwo = (IconWrapper('edit-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 26V40C42 41.1046 41.1046 42 40 42H8C6.89543 42 6 41.1046 6 40V8C6 6.89543 6.89543 6 8 6L22 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26.7199V34H21.3172L42 13.3081L34.6951 6L14 26.7199Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/More.js

/* harmony default export */ var More = (IconWrapper('more', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "24",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "24",
      "r": "3",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MoreOne.js

/* harmony default export */ var MoreOne = (IconWrapper('more-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "35",
      "r": "3",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MoreTwo.js

/* harmony default export */ var MoreTwo = (IconWrapper('more-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "24",
      "r": "3",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "24",
      "r": "3",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MoreThree.js

/* harmony default export */ var MoreThree = (IconWrapper('more-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M21.5 14C21.5 15.3807 22.6193 16.5 24 16.5C25.3807 16.5 26.5 15.3807 26.5 14C26.5 12.6193 25.3807 11.5 24 11.5C22.6193 11.5 21.5 12.6193 21.5 14ZM21.5 24C21.5 25.3807 22.6193 26.5 24 26.5C25.3807 26.5 26.5 25.3807 26.5 24C26.5 22.6193 25.3807 21.5 24 21.5C22.6193 21.5 21.5 22.6193 21.5 24ZM24 36.5C22.6193 36.5 21.5 35.3807 21.5 34C21.5 32.6193 22.6193 31.5 24 31.5C25.3807 31.5 26.5 32.6193 26.5 34C26.5 35.3807 25.3807 36.5 24 36.5Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Text.js

/* harmony default export */ var Text = (IconWrapper('text', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19V16H32V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 34H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18L24 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Translation.js

/* harmony default export */ var Translation = (IconWrapper('translation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 32L19.1875 27M31 32L28.8125 27M19.1875 27L24 16L28.8125 27M19.1875 27H28.8125",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.1999 20C41.3468 10.871 33.2758 4 23.5999 4C13.9241 4 5.85308 10.871 4 20L10 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C5.85308 37.129 13.9241 44 23.5999 44C33.2758 44 41.3468 37.129 43.1999 28L38 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextStyle.js

/* harmony default export */ var TextStyle = (IconWrapper('text-style', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 6H42V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32L19.1875 27M31 32L28.8125 27M19.1875 27L24 16L28.8125 27M19.1875 27H28.8125",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 6H6V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 42H42V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H6V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dot.js

/* harmony default export */ var Dot = (IconWrapper('dot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 33C28.9706 33 33 28.9706 33 24C33 19.0294 28.9706 15 24 15C19.0294 15 15 19.0294 15 24C15 28.9706 19.0294 33 24 33Z",
      "fill": props.colors[0],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RowHeight.js

/* harmony default export */ var RowHeight = (IconWrapper('row-height', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 35L10 41L4 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 13L10 7L4 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 7V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 9H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 19H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 29H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 39H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Calendar.js

/* harmony default export */ var Calendar = (IconWrapper('calendar', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 19H43V40C43 41.1046 42.1046 42 41 42H7C5.89543 42 5 41.1046 5 40V19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 9C5 7.89543 5.89543 7 7 7H41C42.1046 7 43 7.89543 43 9V19H5V9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 34H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 26H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Plan.js

/* harmony default export */ var Plan = (IconWrapper('plan', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 19H43V41C43 42.1046 42.1046 43 41 43H7C5.89543 43 5 42.1046 5 41V19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 10C5 8.89543 5.89543 8 7 8H41C42.1046 8 43 8.89543 43 10V19H5V10Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 31L22 37L34 25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 5V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32 5V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MergeCells.js

/* harmony default export */ var MergeCells = (IconWrapper('merge-cells', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 14V5C20 4.44772 19.5523 4 19 4H5C4.44772 4 4 4.44772 4 5V43C4 43.5523 4.44772 44 5 44H19C19.5523 44 20 43.5523 20 43V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 34V43C28 43.5523 28.4477 44 29 44H43C43.5523 44 44 43.5523 44 43V5C44 4.44772 43.5523 4 43 4H29C28.4477 4 28 4.44772 28 5V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M5 24H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32.7485 28.8183L31.1575 27.2274L27.9756 24.0454L31.1575 20.8634L32.7485 19.2724",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.375 28.8183L16.966 27.2274L20.148 24.0454L16.966 20.8634L15.375 19.2724",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SplitCells.js

/* harmony default export */ var SplitCells = (IconWrapper('split-cells', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 14V5C4 4.44772 4.44772 4 5 4H19C19.5523 4 20 4.44772 20 5V43C20 43.5523 19.5523 44 19 44H5C4.44772 44 4 43.5523 4 43V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34V43C44 43.5523 43.5523 44 43 44H29C28.4477 44 28 43.5523 28 43V5C28 4.44772 28.4477 4 29 4H43C43.5523 4 44 4.44772 44 5V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24L44 24.0132",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24.0132L20 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M39.2275 28.7779L40.8185 27.1869L44.0005 24.0049L40.8185 20.8229L39.2275 19.232",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.75537 28.7862L7.16438 27.1952L3.9824 24.0132L7.16438 20.8313L8.75537 19.2403",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rotation.js

/* harmony default export */ var Rotation = (IconWrapper('rotation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C12.9543 44 4 35.0457 4 24C4 12.9543 12.9543 4 24 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EqualRatio.js

/* harmony default export */ var EqualRatio = (IconWrapper('equal-ratio', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 22.5C25.3807 22.5 26.5 21.3807 26.5 20C26.5 18.6193 25.3807 17.5 24 17.5C22.6193 17.5 21.5 18.6193 21.5 20C21.5 21.3807 22.6193 22.5 24 22.5Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 30.5C25.3807 30.5 26.5 29.3807 26.5 28C26.5 26.6193 25.3807 25.5 24 25.5C22.6193 25.5 21.5 26.6193 21.5 28C21.5 29.3807 22.6193 30.5 24 30.5Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M15.5 17V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.5 17V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OneToOne.js

/* harmony default export */ var OneToOne = (IconWrapper('one-to-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 7H6C4.89543 7 4 7.89543 4 9V39C4 40.1046 4.89543 41 6 41H42C43.1046 41 44 40.1046 44 39V9C44 7.89543 43.1046 7 42 7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20.5799L16 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20.5799L35 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OneToMany.js

/* harmony default export */ var OneToMany = (IconWrapper('one-to-many', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 7H6C4.89543 7 4 7.89543 4 9V39C4 40.1046 4.89543 41 6 41H42C43.1046 41 44 40.1046 44 39V9C44 7.89543 43.1046 7 42 7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M11 20.5799L15 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 30V18L37 30V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M22 27V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ManyToMany.js

/* harmony default export */ var ManyToMany = (IconWrapper('many-to-many', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 7H6C4.89543 7 4 7.89543 4 9V39C4 40.1046 4.89543 41 6 41H42C43.1046 41 44 40.1046 44 39V9C44 7.89543 43.1046 7 42 7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M30 30V18L38 30V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 30V18L18 30V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DropDownList.js

/* harmony default export */ var DropDownList = (IconWrapper('drop-down-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 28L24 40L8 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 10H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8 18H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Brightness.js

/* harmony default export */ var Brightness = (IconWrapper('brightness', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0205 35.3535C30.0956 35.3535 35.0205 30.4286 35.0205 24.3535C35.0205 18.2784 30.0956 13.3535 24.0205 13.3535C17.9454 13.3535 13.0205 18.2784 13.0205 24.3535C13.0205 30.4286 17.9454 35.3535 24.0205 35.3535Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.9603 9.00977L36.5 11.4842",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M11.0674 36.7451L9.02051 38.8037",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 41.3533L24 44.3533",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9998 23.3535L39.9998 23.3535",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37.5324 36.3361L39.9998 38.8035",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24.0205 17.3535C20.1545 17.3535 17.0205 20.4875 17.0205 24.3535C17.0205 28.2195 20.1545 31.3535 24.0205 31.3535",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M4.00019 24.3535L8.00019 24.3535",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10.0444 9.00974L12.0972 11.0625",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 3.35371L24 7.35371",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mosaic.js

/* harmony default export */ var Mosaic = (IconWrapper('mosaic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 36H36V44H44V36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M28 36H20V44H28V36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H4V44H12V36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20H36V28H44V20Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H20V28H28V20Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20H4V28H12V20Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H36V12H44V4Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M28 4H20V12H28V4Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4H4V12H12V4Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 12H12V20H20V12Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 28H12V36H20V28Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 12H28V20H36V12Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 28H28V36H36V28Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UploadLogs.js

/* harmony default export */ var UploadLogs = (IconWrapper('upload-logs', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 43.9998H8V3.99977H40V23.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.5 43.9998V30.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 34.4998L32.5 32.9998L35.5 29.9998L38.5 32.9998L40 34.4998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 15.9998H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16 23.9998H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Quote.js

/* harmony default export */ var Quote = (IconWrapper('quote', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.8533 9.11597C11.3227 13.9523 7.13913 19.5812 6.30256 26.0029C5.00021 36 13.9404 40.8933 18.4703 36.4967C23.0002 32.1002 20.2848 26.5196 17.0047 24.9942C13.7246 23.4687 11.7187 24 12.0686 21.9616C12.4185 19.9231 17.0851 14.2713 21.1849 11.6392C21.4569 11.4079 21.5604 10.9591 21.2985 10.6187C21.1262 10.3947 20.7883 9.95555 20.2848 9.30112C19.8445 8.72886 19.4227 8.75027 18.8533 9.11597Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.6789 9.11597C31.1484 13.9523 26.9648 19.5812 26.1282 26.0029C24.8259 36 33.7661 40.8933 38.296 36.4967C42.8259 32.1002 40.1105 26.5196 36.8304 24.9942C33.5503 23.4687 31.5443 24 31.8943 21.9616C32.2442 19.9231 36.9108 14.2713 41.0106 11.6392C41.2826 11.4079 41.3861 10.9591 41.1241 10.6187C40.9519 10.3947 40.614 9.95555 40.1105 9.30112C39.6702 8.72886 39.2484 8.75027 38.6789 9.11597Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Code.js

/* harmony default export */ var Code = (IconWrapper('code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 13L4 25.4322L16 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 13L44 25.4322L32 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.6603 5L21.8906 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextWrapOverflow.js

/* harmony default export */ var TextWrapOverflow = (IconWrapper('text-wrap-overflow', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 10V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37.0561 19.0113L42.0929 24.0255L37.0561 29.123",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextWrapTruncation.js

/* harmony default export */ var TextWrapTruncation = (IconWrapper('text-wrap-truncation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.0522 24.0083H40.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClearFormat.js

/* harmony default export */ var ClearFormat = (IconWrapper('clear-format', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + 'e34b7790' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M44.7818 24.1702L31.918 7.09938L14.1348 20.5L27.5 37L30.8556 34.6644L44.7818 24.1702Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.4998 37L23.6613 40.0748L13.0978 40.074L10.4973 36.6231L4.06543 28.0876L14.4998 20.2248",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.2056 40.0721L44.5653 40.072",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + 'e34b7790'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FormatBrush.js

/* harmony default export */ var FormatBrush = (IconWrapper('format-brush', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 5H6V20H34V5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.0251 12H43V28.1014L19 31.2004V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BackgroundColor.js

/* harmony default export */ var BackgroundColor = (IconWrapper('background-color', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M37 37C39.2091 37 41 35.2091 41 33C41 31.5272 39.6667 29.5272 37 27C34.3333 29.5272 33 31.5272 33 33C33 35.2091 34.7909 37 37 37Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M20.8535 5.50439L24.389 9.03993",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23.6818 8.33281L8.12549 23.8892L19.4392 35.2029L34.9955 19.6465L23.6818 8.33281Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20.0732L28.961 25.6496",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 43H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Zip.js

/* harmony default export */ var Zip = (IconWrapper('zip', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4.62861 12.7486L24 5L43.3714 12.7486C43.751 12.9004 44 13.2681 44 13.677V42C44 42.5523 43.5523 43 43 43H5C4.44772 43 4 42.5523 4 42V13.677C4 13.2681 4.24895 12.9004 4.62861 12.7486Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 22V32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33 27C34.6569 27 36 25.8807 36 24.5C36 23.1193 34.6569 22 33 22C32.1 22 31.2 22 30.3 22C30.1343 22 30 22.1343 30 22.3C30 23.0333 30 23.7667 30 24.5C30 25.8807 31.3431 27 33 27Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M30 22V32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22H18.0046L12 31.9993H18.0046",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EnterTheKeyboard.js

/* harmony default export */ var EnterTheKeyboard = (IconWrapper('enter-the-keyboard', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 7.00012H4V39.0001H44V7.00012Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 19.0001H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 19.0001H23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 19.0001H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28.0001H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Find.js

/* harmony default export */ var Find = (IconWrapper('find', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 7.00012H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 23.0001H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 39.0001H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.5 34.0001C36.1944 34.0001 40 30.1945 40 25.5001C40 20.8057 36.1944 17.0001 31.5 17.0001C26.8056 17.0001 23 20.8057 23 25.5001C23 30.1945 26.8056 34.0001 31.5 34.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M37 32.0001L44 39.0506",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FreezeLine.js

/* harmony default export */ var FreezeLine = (IconWrapper('freeze-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6H6V42H42V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 19.0586H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16.1231 6L6 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M42 10.0068L32 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M26.123 6L11.9233 18.6242",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36.123 6L21.9233 18.6242",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FreezeColumn.js

/* harmony default export */ var FreezeColumn = (IconWrapper('freeze-column', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6H6V42H42V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.1231 6L6 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 12L6 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21L6 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 30L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FreezingLineColumn.js

/* harmony default export */ var FreezingLineColumn = (IconWrapper('freezing-line-column', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6H6V42H42V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.1231 6L6 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M26.0027 6L6 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M35 6L6 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 30L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M41 10L29.2432 20.8525",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EndpointRound.js

/* harmony default export */ var EndpointRound = (IconWrapper('endpoint-round', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 24L26 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "22",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 40H22C13.1634 40 6 32.8366 6 24C6 15.1634 13.1634 8 22 8H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EndpointFlat.js

/* harmony default export */ var EndpointFlat = (IconWrapper('endpoint-flat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43 40H23.2857C20.0414 40 7 40 7 40L7 27M43 8H23.2857C14.2914 8 7 8 7 8L7 21M43 24H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "7",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EndpointSquare.js

/* harmony default export */ var EndpointSquare = (IconWrapper('endpoint-square', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 40H21.4286C18.355 40 6 40 6 40V8C6 8 12.9076 8 21.4286 8H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 24L27 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NodeRound.js

/* harmony default export */ var NodeRound = (IconWrapper('node-round', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 42V27M42 24H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6H24C14.0589 6 6 14.0589 6 24V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NodeFlat.js

/* harmony default export */ var NodeFlat = (IconWrapper('node-flat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 42V27M42 24H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6H24H6V24V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NodeSquare.js

/* harmony default export */ var NodeSquare = (IconWrapper('node-square', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 42V27M42 24H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6H24L6 24V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileTxt.js

/* harmony default export */ var FileTxt = (IconWrapper('file-txt', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18.0083H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 18.0083V34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FilePdf.js

/* harmony default export */ var FilePdf = (IconWrapper('file-pdf', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18 18H30V25.9917L18.0083 26L18 18Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18V34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileGif.js

/* harmony default export */ var FileGif = (IconWrapper('file-gif', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0083 18H17V34H31.0083V27.0083H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileJpg.js

/* harmony default export */ var FileJpg = (IconWrapper('file-jpg', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18H21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 30C18 32.2091 19.7909 34 22 34C24.2091 34 26 32.2091 26 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileWord.js

/* harmony default export */ var FileWord = (IconWrapper('file-word', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.0083 20L19.0083 34L24.0083 24L29.0083 34L32.0083 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileExcel.js

/* harmony default export */ var FileExcel = (IconWrapper('file-excel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4H30L40 14V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V6C8 4.89543 8.89543 4 10 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 18H19V34H29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 26H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CodeBrackets.js

/* harmony default export */ var CodeBrackets = (IconWrapper('code-brackets', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 4C14 4 11 5 11 9C11 13 11 15 11 18C11 21 6 23 6 23C6 23 11 25 11 28C11 31 11 35 11 39C11 43 14 44 16 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4C34 4 37 5 37 9C37 13 37 15 37 18C37 21 42 23 42 23C42 23 37 25 37 28C37 31 37 35 37 39C37 43 34 44 32 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DividingLine.js

/* harmony default export */ var DividingLine = (IconWrapper('dividing-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 10H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 10H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 10H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 38H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 38H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListBottom.js

/* harmony default export */ var ListBottom = (IconWrapper('list-bottom', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 42C10.2091 42 12 40.2091 12 38C12 35.7909 10.2091 34 8 34C5.79086 34 4 35.7909 4 38C4 40.2091 5.79086 42 8 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C9.10457 12 10 11.1046 10 10C10 8.89543 9.10457 8 8 8C6.89543 8 6 8.89543 6 10C6 11.1046 6.89543 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 26C9.10457 26 10 25.1046 10 24C10 22.8954 9.10457 22 8 22C6.89543 22 6 22.8954 6 24C6 25.1046 6.89543 26 8 26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListTop.js

/* harmony default export */ var ListTop = (IconWrapper('list-top', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 14C10.2091 14 12 12.2091 12 10C12 7.79086 10.2091 6 8 6C5.79086 6 4 7.79086 4 10C4 12.2091 5.79086 14 8 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 26C9.10457 26 10 25.1046 10 24C10 22.8954 9.10457 22 8 22C6.89543 22 6 22.8954 6 24C6 25.1046 6.89543 26 8 26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 40C9.10457 40 10 39.1046 10 38C10 36.8954 9.10457 36 8 36C6.89543 36 6 36.8954 6 38C6 39.1046 6.89543 40 8 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListMiddle.js

/* harmony default export */ var ListMiddle = (IconWrapper('list-middle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 28C10.2091 28 12 26.2091 12 24C12 21.7909 10.2091 20 8 20C5.79086 20 4 21.7909 4 24C4 26.2091 5.79086 28 8 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C9.10457 12 10 11.1046 10 10C10 8.89543 9.10457 8 8 8C6.89543 8 6 8.89543 6 10C6 11.1046 6.89543 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 40C9.10457 40 10 39.1046 10 38C10 36.8954 9.10457 36 8 36C6.89543 36 6 36.8954 6 38C6 39.1046 6.89543 40 8 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphUnfold.js

/* harmony default export */ var ParagraphUnfold = (IconWrapper('paragraph-unfold', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 22V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 40V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 15H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 33H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphCut.js

/* harmony default export */ var ParagraphCut = (IconWrapper('paragraph-cut', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 15H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 33H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphBreak.js

/* harmony default export */ var ParagraphBreak = (IconWrapper('paragraph-break', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 26L14 30L18 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 30C15 30 25.7909 30 28 30C31.3137 30 34 27.3137 34 24C34 20.6863 31.3137 18 28 18C26.6852 18 14 18 14 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Formula.js

/* harmony default export */ var Formula = (IconWrapper('formula', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 9L39 6H6L24 24L6 42H39L42 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MindMapping.js

/* harmony default export */ var MindMapping = (IconWrapper('mind-mapping', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 28C10.2091 28 12 26.2091 12 24C12 21.7909 10.2091 20 8 20C5.79086 20 4 21.7909 4 24C4 26.2091 5.79086 28 8 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 8C43.1046 8 44 7.10457 44 6C44 4.89543 43.1046 4 42 4C40.8954 4 40 4.89543 40 6C40 7.10457 40.8954 8 42 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 26C43.1046 26 44 25.1046 44 24C44 22.8954 43.1046 22 42 22C40.8954 22 40 22.8954 40 24C40 25.1046 40.8954 26 42 26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C43.1046 44 44 43.1046 44 42C44 40.8954 43.1046 40 42 40C40.8954 40 40 40.8954 40 42C40 43.1046 40.8954 44 42 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6H20V42H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HighLight.js

/* harmony default export */ var HighLight = (IconWrapper('high-light', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 44L6 25H12V17H36V25H42V44H6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 17V8L31 4V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Topic.js

/* harmony default export */ var Topic = (IconWrapper('topic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 26.7117 4.53967 29.2974 5.51747 31.6554C6.02232 32.8729 6.64396 34.0297 7.36843 35.1119C7.61157 35.4751 7.15543 37.7711 6 42C10.2289 40.8446 12.5249 40.3884 12.8881 40.6316C13.9703 41.356 15.1271 41.9777 16.3446 42.4825C18.7026 43.4603 21.2883 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.6042 19.82H33.3835",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.8465 15.7378L18.9328 32.2622",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.8465 15.7378L25.9328 32.2622",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.6042 28H31.3835",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GridFour.js

/* harmony default export */ var GridFour = (IconWrapper('grid-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GridSixteen.js

/* harmony default export */ var GridSixteen = (IconWrapper('grid-sixteen', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GridNine.js

/* harmony default export */ var GridNine = (IconWrapper('grid-nine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 31H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GridThree.js

/* harmony default export */ var GridThree = (IconWrapper('grid-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M15 4L15 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17.0378L44 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 30.5187L44 30.481",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GridTwo.js

/* harmony default export */ var GridTwo = (IconWrapper('grid-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L24 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Column.js

/* harmony default export */ var Column = (IconWrapper('column', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L24 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextRotationNone.js

/* harmony default export */ var TextRotationNone = (IconWrapper('text-rotation-none', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 29L16.6667 21M35 29L31.3333 21M31.3333 21L29.5 17L24 5L18.5 17L16.6667 21M31.3333 21H16.6667",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 37H42L36 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextRotationLeft.js

/* harmony default export */ var TextRotationLeft = (IconWrapper('text-rotation-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 29L16.6667 21M35 29L31.3333 21M31.3333 21L29.5 17L24 5L18.5 17L16.6667 21M31.3333 21H16.6667",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 37H6L12 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextRotationDown.js

/* harmony default export */ var TextRotationDown = (IconWrapper('text-rotation-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 35L21 31.3333M29 13L21 16.6667M21 16.6667L17 18.5L5 24L17 29.5L21 31.3333M21 16.6667V31.3333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 6V42L43 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextRotationUp.js

/* harmony default export */ var TextRotationUp = (IconWrapper('text-rotation-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 35L21 31.3333M29 13L21 16.6667M21 16.6667L17 18.5L5 24L17 29.5L21 31.3333M21 16.6667V31.3333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 42V6L43 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoDimensionalCode.js

/* harmony default export */ var TwoDimensionalCode = (IconWrapper('two-dimensional-code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 4H4V20H20V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 28H4V44H20V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H28V20H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.0024 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M42 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoDimensionalCodeOne.js

/* harmony default export */ var TwoDimensionalCodeOne = (IconWrapper('two-dimensional-code-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 4H4V16H16V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32H4V44H16V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 32H32V44H44V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H32V16H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoDimensionalCodeTwo.js

/* harmony default export */ var TwoDimensionalCodeTwo = (IconWrapper('two-dimensional-code-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 4H4V16H16V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32H4V44H16V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H32V16H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M44 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ReduceDecimalPlaces.js

/* harmony default export */ var ReduceDecimalPlaces = (IconWrapper('reduce-decimal-places', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 9C27 6.23858 24.7614 4 22 4C19.2386 4 17 6.23858 17 9V19C17 21.7614 19.2386 24 22 24C24.7614 24 27 21.7614 27 19V9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M25 32L19 38L25 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40 38H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IncreaseTheScale.js

/* harmony default export */ var IncreaseTheScale = (IconWrapper('increase-the-scale', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9C24 6.23858 21.7614 4 19 4C16.2386 4 14 6.23858 14 9V19C14 21.7614 16.2386 24 19 24C21.7614 24 24 21.7614 24 19V9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M42 9C42 6.23858 39.7614 4 37 4C34.2386 4 32 6.23858 32 9V19C32 21.7614 34.2386 24 37 24C39.7614 24 42 21.7614 42 19V9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32L42 38L36 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M42 38H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwitchThemes.js

/* harmony default export */ var SwitchThemes = (IconWrapper('switch-themes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23 4V27H43.9933L44 4H23Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0049 43.9998C24.6752 43.9998 20.5595 43.9998 18.6579 43.9998C16.9557 43.9998 14.9159 43.4318 13.5475 41.6126C12.6229 40.3832 12.0049 38.5826 12.0049 35.9998C12.0049 31.7298 12.0049 28.063 12.0049 24.9995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 32.9998L12.0046 24.9995L20.0138 32.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 19H37",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12H37",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwitchingDone.js

/* harmony default export */ var SwitchingDone = (IconWrapper('switching-done', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29.6325 4H21.9932V27H43.9932V20.9631",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.0015 13.003L33.5649 17.4445L45.0001 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.0049 43.9998C23.6752 43.9998 19.5595 43.9998 17.6579 43.9998C15.9557 43.9998 13.9159 43.4318 12.5475 41.6126C11.6229 40.3832 11.0049 38.5826 11.0049 35.9998C11.0049 31.7298 11.0049 28.063 11.0049 24.9995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M3 32.9998L11.0046 24.9995L19.0138 32.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DeleteThemes.js

/* harmony default export */ var DeleteThemes = (IconWrapper('delete-themes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 15H40L37 44H11L8 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20.002 25.0024V35.0026",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28.0024 24.9995V34.9972",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 14.9999L28.3242 3L36 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FullSelection.js

/* harmony default export */ var FullSelection = (IconWrapper('full-selection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 5H8C6.34315 5 5 6.34315 5 8V34C5 35.6569 6.34315 37 8 37H34C35.6569 37 37 35.6569 37 34V8C37 6.34315 35.6569 5 34 5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9998 13.002V42.0001C43.9998 43.1046 43.1044 44.0001 41.9998 44.0001H13.0034",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 20.4858L18.9997 26.0109L29 15.7192",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Back.js

/* harmony default export */ var Back = (IconWrapper('back', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 40.8361C39.1069 34.8632 34.7617 31.4739 30.9644 30.6682C27.1671 29.8625 23.5517 29.7408 20.1182 30.303V41L4 23.5453L20.1182 7V17.167C26.4667 17.2172 31.8638 19.4948 36.3095 24C40.7553 28.5052 43.3187 34.1172 44 40.8361Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Next.js

/* harmony default export */ var Next = (IconWrapper('next', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 40.8361C8.89307 34.8632 13.2383 31.4739 17.0356 30.6682C20.8329 29.8625 24.4483 29.7408 27.8818 30.303V41L44 23.5453L27.8818 7V17.167C21.5333 17.2172 16.1362 19.4948 11.6905 24C7.24474 28.5052 4.68126 34.1172 4 40.8361Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Star.js

/* harmony default export */ var Star = (IconWrapper('star', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9986 5L17.8856 17.4776L4 19.4911L14.0589 29.3251L11.6544 43L23.9986 36.4192L36.3454 43L33.9586 29.3251L44 19.4911L30.1913 17.4776L23.9986 5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CodeDownload.js

/* harmony default export */ var CodeDownload = (IconWrapper('code-download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 12L4 24.4322L16 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 12L44 24.4322L32 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 25L24 31L30 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoneAll.js

/* harmony default export */ var DoneAll = (IconWrapper('done-all', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 24L15.25 25.25M44 14L24 34L22.75 32.75",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24L14 34L34 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WritingFluently.js

/* harmony default export */ var WritingFluently = (IconWrapper('writing-fluently', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 24V19L39 4L44 9L29 24H24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H9C6.23858 24 4 26.2386 4 29C4 31.7614 6.23858 34 9 34H39C41.7614 34 44 36.2386 44 39C44 41.7614 41.7614 44 39 44H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IndentRight.js

/* harmony default export */ var IndentRight = (IconWrapper('indent-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 9H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 19H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 29H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 19L42 24L37 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Adjustment.js

/* harmony default export */ var Adjustment = (IconWrapper('adjustment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 4H44V44H4V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4H4V44M44 4V44H4M44 4L4 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 15H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 34H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 10V20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DirectionAdjustmentThree.js

/* harmony default export */ var DirectionAdjustmentThree = (IconWrapper('direction-adjustment-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 10L24 4M24 4L30 10M24 4V24M24 24V44M24 24H44M24 24H4M18 38L24 44M24 44L30 38M38 18L44 24M44 24L38 30M10 18L4 24M4 24L10 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DirectionAdjustmentTwo.js

/* harmony default export */ var DirectionAdjustmentTwo = (IconWrapper('direction-adjustment-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 10L24 4M24 4L30 10M24 4V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 38L24 44M24 44L30 38M24 44V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 18L44 24M44 24L38 30M44 24H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 18L4 24M4 24L10 30M4 24H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DirectionAdjustment.js

/* harmony default export */ var DirectionAdjustment = (IconWrapper('direction-adjustment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 8L24 4M24 4L28 8M24 4V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 40L24 44M24 44L28 40M24 44V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 20L44 24M44 24L40 28M44 24H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 20L4 24M4 24L8 28M4 24H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Distortion.js

/* harmony default export */ var Distortion = (IconWrapper('distortion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 19V40H17M4 19V8H17M4 19C4 19 13 13 24 19C35 25 44 19 44 19M44 19V8H17M44 19V40H17M4 29C4 29 13 23 24 29C35 35 44 29 44 29M17 8C17 8 23 16 17 24C11 32 17 40 17 40M31 8C31 8 37 16 31 24C25 32 31 40 31 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EditMovie.js

/* harmony default export */ var EditMovie = (IconWrapper('edit-movie', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 8V16V32V40H34V32H44V16H34V8H44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16V8H14V16H4V32H14V40H4V32V16Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 16V8H34M44 16V32M44 16H34M4 16V8H14M4 16V32M4 16H14M4 32V40H14M4 32H14M44 32V40H34M44 32H34M34 8V16M34 8H30M34 40V32M34 40H30M14 8V16M14 8H18M14 40V32M14 40H18M14 16H18M34 16H30M34 32H30M14 32H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EndpointDisplacement.js

/* harmony default export */ var EndpointDisplacement = (IconWrapper('endpoint-displacement', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 9C14 11.7614 11.7614 14 9 14C6.23858 14 4 11.7614 4 9C4 6.23858 6.23858 4 9 4C11.7614 4 14 6.23858 14 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 9C14 11.7614 11.7614 14 9 14C6.23858 14 4 11.7614 4 9C4 6.23858 6.23858 4 9 4C11.7614 4 14 6.23858 14 9ZM14 9H26M26 9L22 5M26 9L22 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 39C34 41.7614 36.2386 44 39 44C41.7614 44 44 41.7614 44 39C44 36.2386 41.7614 34 39 34C36.2386 34 34 36.2386 34 39Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M34 39C34 41.7614 36.2386 44 39 44C41.7614 44 44 41.7614 44 39C44 36.2386 41.7614 34 39 34C36.2386 34 34 36.2386 34 39ZM34 39H21M21 39L25 35M21 39L25 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 9C34 11.7614 36.2386 14 39 14C41.7614 14 44 11.7614 44 9C44 6.23858 41.7614 4 39 4C36.2386 4 34 6.23858 34 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M39 14C36.2386 14 34 11.7614 34 9C34 6.23858 36.2386 4 39 4C41.7614 4 44 6.23858 44 9C44 11.7614 41.7614 14 39 14ZM39 14V26M39 26L43 22M39 26L35 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 39C4 36.2386 6.23858 34 9 34C11.7614 34 14 36.2386 14 39C14 41.7614 11.7614 44 9 44C6.23858 44 4 41.7614 4 39Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M9 34C6.23858 34 4 36.2386 4 39C4 41.7614 6.23858 44 9 44C11.7614 44 14 41.7614 14 39C14 36.2386 11.7614 34 9 34ZM9 34V22M9 22L13 26M9 22L5 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpandLeftAndRight.js

/* harmony default export */ var ExpandLeftAndRight = (IconWrapper('expand-left-and-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6V42M16 20L12 24L16 28M32 20L36 24L32 28M24 6L24 42M6 6L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fullwidth.js

/* harmony default export */ var Fullwidth = (IconWrapper('fullwidth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6V42M17 19L12 24M12 24L17 29M12 24H36M31 19L36 24M36 24L31 29M6 6L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IndentLeft.js

/* harmony default export */ var IndentLeft = (IconWrapper('indent-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 19L6 24L11 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InternalExpansion.js

/* harmony default export */ var InternalExpansion = (IconWrapper('internal-expansion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44H44V4H4V44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 4H28V20H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36L22 26M22 26V33M22 26H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InternalReduction.js

/* harmony default export */ var InternalReduction = (IconWrapper('internal-reduction', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44H44V4H4V44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 4H28V20H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 26L12 36M12 36V29M12 36H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LensAlignment.js

/* harmony default export */ var LensAlignment = (IconWrapper('lens-alignment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 8C12 10.2091 10.2091 12 8 12C5.79086 12 4 10.2091 4 8C4 5.79086 5.79086 4 8 4C10.2091 4 12 5.79086 12 8Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8C12 10.2091 10.2091 12 8 12M12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12M12 8H18M8 12V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40C12 37.7909 10.2091 36 8 36C5.79086 36 4 37.7909 4 40C4 42.2091 5.79086 44 8 44C10.2091 44 12 42.2091 12 40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40C12 37.7909 10.2091 36 8 36M12 40C12 42.2091 10.2091 44 8 44C5.79086 44 4 42.2091 4 40C4 37.7909 5.79086 36 8 36M12 40H18M8 36V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 40C36 37.7909 37.7909 36 40 36C42.2091 36 44 37.7909 44 40C44 42.2091 42.2091 44 40 44C37.7909 44 36 42.2091 36 40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 40C36 37.7909 37.7909 36 40 36M36 40C36 42.2091 37.7909 44 40 44C42.2091 44 44 42.2091 44 40C44 37.7909 42.2091 36 40 36M36 40H30M40 36V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 8C36 10.2091 37.7909 12 40 12C42.2091 12 44 10.2091 44 8C44 5.79086 42.2091 4 40 4C37.7909 4 36 5.79086 36 8Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 8C36 10.2091 37.7909 12 40 12M36 8C36 5.79086 37.7909 4 40 4C42.2091 4 44 5.79086 44 8C44 10.2091 42.2091 12 40 12M36 8H30M40 12V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 24H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LevelAdjustment.js

/* harmony default export */ var LevelAdjustment = (IconWrapper('level-adjustment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.1139 18L14.877 3.95581L41.9229 11.2027L40.1016 18M7.89848 30L6.07715 36.7973L33.1231 44.0442L36.8862 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListAlphabet.js

/* harmony default export */ var ListAlphabet = (IconWrapper('list-alphabet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H12L6 39H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 8.9999L7 9L6.3 16H11.7L11 8.9999Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 19L6.3 16M12 19L11.7 16M11.7 16L11 8.9999L7 9L6.3 16M11.7 16H6.3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListCheckbox.js

/* harmony default export */ var ListCheckbox = (IconWrapper('list-checkbox', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 24H44H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 38H44H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 10H44H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "34",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "20",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "6",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListFail.js

/* harmony default export */ var ListFail = (IconWrapper('list-fail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 7L11 13M11 7L5 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "8",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "8",
      "cy": "38",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListNumbers.js

/* harmony default export */ var ListNumbers = (IconWrapper('list-numbers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H12V32L6 38V39H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 11L9 9V19M9 19H7M9 19H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ListSuccess.js

/* harmony default export */ var ListSuccess = (IconWrapper('list-success', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "8",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "8",
      "cy": "38",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10L7 13L13 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MagicWand.js

/* harmony default export */ var MagicWand = (IconWrapper('magic-wand', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.57932 35.4207C5.32303 32.1826 4 28.2458 4 24C4 12.9543 12.9543 4 24 4C35.0457 4 44 12.9543 44 24C44 35.0457 35.0457 44 24 44C19.7542 44 15.8174 42.677 12.5793 40.4207M7.57932 35.4207C8.93657 37.3685 10.6315 39.0634 12.5793 40.4207M7.57932 35.4207L16 27M12.5793 40.4207L21 32M16 27L20 23L25 28L21 32M16 27L21 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 14H21M19 12V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 17H34M31 14V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 29H36M34 27V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiPictureCarousel.js

/* harmony default export */ var MultiPictureCarousel = (IconWrapper('multi-picture-carousel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "6",
      "width": "40",
      "height": "30",
      "rx": "2",
      "fill": props.colors[1]
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "6",
      "width": "40",
      "height": "30",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 42H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 42H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 42H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 42H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OverallReduction.js

/* harmony default export */ var OverallReduction = (IconWrapper('overall-reduction', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 14H34V34H14V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44V38H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 44V38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4V10H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 4V10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphAlphabet.js

/* harmony default export */ var ParagraphAlphabet = (IconWrapper('paragraph-alphabet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 9L7 17H15L11 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 19L7 17M16 19L15 17M7 17L11 9L15 17M7 17H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphBreakTwo.js

/* harmony default export */ var ParagraphBreakTwo = (IconWrapper('paragraph-break-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 39C24 39 34.2386 39 37 39C39.7614 39 42 36.7614 42 34C42 31.2386 39.7614 29 37 29C35.7115 29 32 29 32 29M24 39L28 35M24 39L28 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphRectangle.js

/* harmony default export */ var ParagraphRectangle = (IconWrapper('paragraph-rectangle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "9",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphRound.js

/* harmony default export */ var ParagraphRound = (IconWrapper('paragraph-round', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "14",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParagraphTriangle.js

/* harmony default export */ var ParagraphTriangle = (IconWrapper('paragraph-triangle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 29H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 9.76619C6 8.9889 6.84797 8.50878 7.5145 8.9087L14.5708 13.1425C15.2182 13.5309 15.2182 14.4691 14.5708 14.8575L7.5145 19.0913C6.84797 19.4912 6 19.0111 6 18.2338V9.76619Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Perspective.js

/* harmony default export */ var Perspective = (IconWrapper('perspective', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 28V36L31 38.6M44 28L4 32M44 28V20M4 32V44L17 41.4M4 32V16M44 20V12L31 9.4M44 20L4 16M4 16V4L17 6.6M31 9.4V38.6M31 9.4L17 6.6M31 38.6L17 41.4M17 6.6V41.4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Stamp.js

/* harmony default export */ var Stamp = (IconWrapper('stamp', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8L8 4L12 7L16 4L20 7L24 4L28 7L32 4L36 7L40 4L44 8L41 12L44 16L41 20L44 24L41 28L44 32L41 36L44 40L40 44L36 41L32 44L28 41L24 44L20 41L16 44L12 41L8 44L4 40L7 36L4 32L7 28L4 24L7 20L4 16L7 12L4 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "10",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartScatter.js

/* harmony default export */ var ChartScatter = (IconWrapper('chart-scatter', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 24C22.2091 24 24 22.2091 24 20C24 17.7909 22.2091 16 20 16C17.7909 16 16 17.7909 16 20C16 22.2091 17.7909 24 20 24Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M37 16C39.7614 16 42 13.7614 42 11C42 8.23858 39.7614 6 37 6C34.2386 6 32 8.23858 32 11C32 13.7614 34.2386 16 37 16Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 36C16.6569 36 18 34.6569 18 33C18 31.3431 16.6569 30 15 30C13.3431 30 12 31.3431 12 33C12 34.6569 13.3431 36 15 36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33 32C34.6569 32 36 30.6569 36 29C36 27.3431 34.6569 26 33 26C31.3431 26 30 27.3431 30 29C30 30.6569 31.3431 32 33 32Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartLineArea.js

/* harmony default export */ var ChartLineArea = (IconWrapper('chart-line-area', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34L22 18L32 27L42 6V34H14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartLine.js

/* harmony default export */ var ChartLine = (IconWrapper('chart-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34L22 18L32 27L42 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartHistogram.js

/* harmony default export */ var ChartHistogram = (IconWrapper('chart-histogram', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 30V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 22V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 14V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartHistogramOne.js

/* harmony default export */ var ChartHistogramOne = (IconWrapper('chart-histogram-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 34H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 26H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 18H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 10L14 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartHistogramTwo.js

/* harmony default export */ var ChartHistogramTwo = (IconWrapper('chart-histogram-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 42H44H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "28",
      "width": "6",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "21",
      "y": "18",
      "width": "6",
      "height": "24",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "34",
      "y": "6",
      "width": "6",
      "height": "36",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BulletMap.js

/* harmony default export */ var BulletMap = (IconWrapper('bullet-map', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6V42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 40V9C16 7.89543 17.0534 7 18.3529 7H33.6471C34.9466 7 36 7.89543 36 9V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32.1082H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M22 19H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M26 14V32.1082",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Maximum.js

/* harmony default export */ var Maximum = (IconWrapper('maximum', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 4V44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38C10 38 15.3125 4 27 4C38.6875 4 44 38 44 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4L44 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Min.js

/* harmony default export */ var Min = (IconWrapper('min', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 4V44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4C10 4 15.3125 38 27 38C38.6875 38 44 4 44 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38L44 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Average.js

/* harmony default export */ var Average = (IconWrapper('average', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 4V44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38C10 38 15.3125 4 27 4C38.6875 4 44 38 44 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24L44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataNull.js

/* harmony default export */ var DataNull = (IconWrapper('data-null', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataOne.js

/* harmony default export */ var DataOne = (IconWrapper('data-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataTwo.js

/* harmony default export */ var DataTwo = (IconWrapper('data-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5C33.7035 16.4335 29.0722 17 24 17C18.9278 17 14.2965 16.4335 10.7709 15.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataThree.js

/* harmony default export */ var DataThree = (IconWrapper('data-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5C33.7035 25.4335 29.0722 26 24 26C18.9278 26 14.2965 25.4335 10.7709 24.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataAll.js

/* harmony default export */ var DataAll = (IconWrapper('data-all', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5C33.7035 16.4335 29.0722 17 24 17C18.9278 17 14.2965 16.4335 10.7709 15.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5C33.7035 25.4335 29.0722 26 24 26C18.9278 26 14.2965 25.4335 10.7709 24.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5C33.7035 34.4335 29.0722 35 24 35C18.9278 35 14.2965 34.4335 10.7709 33.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataFour.js

/* harmony default export */ var DataFour = (IconWrapper('data-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + 'a05bff38' + ')'
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "rx": "20",
      "ry": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 15.5C6.61878 16.5994 4 18.208 4 20C4 23.3137 12.9543 26 24 26C35.0457 26 44 23.3137 44 20C44 18.208 41.3812 16.5994 37.2291 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 24.5C6.61878 25.5994 4 27.208 4 29C4 32.3137 12.9543 35 24 35C35.0457 35 44 32.3137 44 29C44 27.208 41.3812 25.5994 37.2291 24.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.7709 33.5C6.61878 34.5994 4 36.208 4 38C4 41.3137 12.9543 44 24 44C35.0457 44 44 41.3137 44 38C44 36.208 41.3812 34.5994 37.2291 33.5C33.7035 34.4335 29.0722 35 24 35C18.9278 35 14.2965 34.4335 10.7709 33.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + 'a05bff38'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Data.js

/* harmony default export */ var Data = (IconWrapper('data', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44.0001 11C44.0001 11 44 36.0623 44 38C44 41.3137 35.0457 44 24 44C12.9543 44 4.00003 41.3137 4.00003 38C4.00003 36.1423 4 11 4 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 29C44 32.3137 35.0457 35 24 35C12.9543 35 4 32.3137 4 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20C44 23.3137 35.0457 26 24 26C12.9543 26 4 23.3137 4 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "10",
      "rx": "20",
      "ry": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pie.js

/* harmony default export */ var Pie = (IconWrapper('pie', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C26.5207 4 29.0188 4.47652 31.3625 5.40447L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieOne.js

/* harmony default export */ var PieOne = (IconWrapper('pie-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C26.7322 4 29.4355 4.55981 31.943 5.64491C34.4505 6.73 36.709 8.31736 38.5794 10.3091L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieTwo.js

/* harmony default export */ var PieTwo = (IconWrapper('pie-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C26.6264 4 29.2272 4.51732 31.6537 5.52241C34.0802 6.5275 36.285 8.00069 38.1421 9.85787C39.9993 11.715 41.4725 13.9198 42.4776 16.3463C43.4827 18.7728 44 21.3736 44 24L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieThree.js

/* harmony default export */ var PieThree = (IconWrapper('pie-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C27.9021 4 31.719 5.14149 34.9805 7.28385C38.2419 9.42621 40.8054 12.4758 42.3551 16.057C43.9048 19.6382 44.3731 23.5946 43.7022 27.4386C43.0313 31.2826 41.2506 34.8464 38.5794 37.6909L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieFour.js

/* harmony default export */ var PieFour = (IconWrapper('pie-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C26.6264 4 29.2272 4.51732 31.6537 5.52241C34.0802 6.5275 36.285 8.00069 38.1421 9.85787C39.9993 11.715 41.4725 13.9198 42.4776 16.3463C43.4827 18.7728 44 21.3736 44 24C44 26.6264 43.4827 29.2272 42.4776 31.6537C41.4725 34.0802 39.9993 36.285 38.1421 38.1421C36.285 39.9993 34.0802 41.4725 31.6537 42.4776C29.2271 43.4827 26.6264 44 24 44L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieFive.js

/* harmony default export */ var PieFive = (IconWrapper('pie-five', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C27.2624 4 30.4754 4.79809 33.3586 6.32469C36.2418 7.85128 38.7078 10.06 40.5416 12.7583C42.3754 15.4566 43.5212 18.5626 43.8792 21.8053C44.2372 25.0481 43.7965 28.3291 42.5955 31.3625C41.3945 34.3958 39.4697 37.0893 36.989 39.2081C34.5082 41.3269 31.5467 42.8067 28.3629 43.5183C25.179 44.23 21.8694 44.152 18.7225 43.2911C15.5757 42.4303 12.6873 40.8127 10.3091 38.5794L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieSix.js

/* harmony default export */ var PieSix = (IconWrapper('pie-six', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C27.9556 4 31.8224 5.17298 35.1114 7.37061C38.4004 9.56824 40.9638 12.6918 42.4776 16.3463C43.9913 20.0009 44.3874 24.0222 43.6157 27.9018C42.844 31.7814 40.9392 35.3451 38.1421 38.1421C35.3451 40.9392 31.7814 42.844 27.9018 43.6157C24.0222 44.3874 20.0009 43.9913 16.3463 42.4776C12.6918 40.9638 9.56824 38.4004 7.37061 35.1114C5.17298 31.8224 4 27.9556 4 24H24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PieSeven.js

/* harmony default export */ var PieSeven = (IconWrapper('pie-seven', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C28.6001 4 33.0597 5.58577 36.6271 8.49009C40.1944 11.3944 42.6516 15.4397 43.5845 19.9443C44.5173 24.4488 43.8688 29.1373 41.7483 33.2195C39.6277 37.3017 36.1648 40.5282 31.943 42.3551C27.7212 44.182 22.9986 44.4978 18.5712 43.2491C14.1438 42.0004 10.2821 39.2637 7.637 35.5001C4.9919 31.7365 3.72505 27.1761 4.04994 22.5875C4.37484 17.9988 6.27162 13.6624 9.42063 10.3091L24 24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartPie.js

/* harmony default export */ var ChartPie = (IconWrapper('chart-pie', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24C4 12.9543 12.9543 4 24 4V24H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.0844 18H30V4.91553C36.2202 6.86917 41.1308 11.7798 43.0844 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartProportion.js

/* harmony default export */ var ChartProportion = (IconWrapper('chart-proportion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.3446 5.51746C13.9 6.53111 11.7001 8.01562 9.85786 9.85785C6.23858 13.4771 4 18.4771 4 24C4 35.0457 12.9543 44 24 44V44C29.5228 44 34.5228 41.7614 38.1421 38.1421C39.9844 36.2999 41.4689 34.0999 42.4825 31.6554",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24H44C44 12.9543 35.0457 4 24 4L24 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartGraph.js

/* harmony default export */ var ChartGraph = (IconWrapper('chart-graph', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "17",
      "y": "6",
      "width": "14",
      "height": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "33",
      "width": "14",
      "height": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "33",
      "width": "14",
      "height": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 33V24H35V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartStock.js

/* harmony default export */ var ChartStock = (IconWrapper('chart-stock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "16",
      "width": "8",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 6V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 32V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "34",
      "y": "16",
      "width": "8",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 6V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 32V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "14",
      "width": "8",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChartRing.js

/* harmony default export */ var ChartRing = (IconWrapper('chart-ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43.7756 20.9939C42.4735 12.3556 35.6463 5.52785 27.0084 4.22476M20.9757 4.22717C11.3651 5.68494 4 13.9824 4 24C4 34.0213 11.3705 42.3212 20.9863 43.7744C21.9692 43.923 22.9756 44 24 44C25.0209 44 26.024 43.9235 27.0038 43.7759C35.6458 42.4743 42.4762 35.6429 43.7764 27.0004",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16C19.5817 16 16 19.5817 16 24C16 28.4183 19.5817 32 24 32C28.4183 32 32 28.4183 32 24C32 19.5817 28.4183 16 24 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArithmeticOne.js

/* harmony default export */ var ArithmeticOne = (IconWrapper('arithmetic-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28 31.5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 39.5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.34281 40.6568L18.6565 29.3431",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.34274 29.3431L18.6564 40.6568",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 12.5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 12.5H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 5.5V19.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Arithmetic.js

/* harmony default export */ var Arithmetic = (IconWrapper('arithmetic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28 32.5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 41.5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 13H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 5L14 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 5L6 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Form.js

/* harmony default export */ var Form = (IconWrapper('form', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "32",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 29H44H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 29H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 19H44H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 19H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17 40V19V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 40V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 38V17V38Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 38V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 38V17V38Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 38V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M31 40V19V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M31 40V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 40H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/KagiMap.js

/* harmony default export */ var KagiMap = (IconWrapper('kagi-map', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 42H8V24H15V42H19.9406V6H27.9792V33.0659H34.0203V16.125H40.0687V42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Viencharts.js

/* harmony default export */ var Viencharts = (IconWrapper('viencharts', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "17",
      "r": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "16",
      "cy": "31",
      "r": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "32",
      "cy": "31.0005",
      "r": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AreaMap.js

/* harmony default export */ var AreaMap = (IconWrapper('area-map', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 24L12 33L4 28.5V42H44V15L37 23L31 18L24 26L18 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28.5V17L11 23L16.5 15L22.5 18L31 9L36.5 13.5L44 6V15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VerticalTimeline.js

/* harmony default export */ var VerticalTimeline = (IconWrapper('vertical-timeline', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 5H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 43H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8 36V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28H4V36H12V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H20V28H28V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 12H36V20H44V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 20V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8 20V21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23 12V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MaslowPyramids.js

/* harmony default export */ var MaslowPyramids = (IconWrapper('maslow-pyramids', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + '4e72dd7c' + ')'
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 4L15 19.9803H33L24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19.9805L24.0083 44.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M11.3466 25.9746L2 42.0001H17.0046",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.10059 30.9951H17.0049",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36.7481 25.9746L46.0947 42.0001H31.0004",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39.0947 30.9951H31.1007",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + '4e72dd7c'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Analysis.js

/* harmony default export */ var Analysis = (IconWrapper('analysis', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 5H4V17H44V5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 41.0301L16.1756 28.7293L22.7549 35.0301L30.7982 27L35.2787 31.368",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 16.1719V42.1719",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16.1719V30.1719",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0156 43H44.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17 11H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10 10.9966H11",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Histogram.js

/* harmony default export */ var Histogram = (IconWrapper('histogram', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 44C7 44 12.3125 10 24 10C35.6875 10 41 44 41 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Timeline.js

/* harmony default export */ var Timeline = (IconWrapper('timeline', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + '2c96c284' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 12C13 14.2091 14.7909 16 17 16C19.2091 16 21 14.2091 21 12C21 9.79086 19.2091 8 17 8C14.7909 8 13 9.79086 13 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 24C31 26.2091 32.7909 28 35 28C37.2091 28 39 26.2091 39 24C39 21.7909 37.2091 20 35 20C32.7909 20 31 21.7909 31 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 36C13 38.2091 14.7909 40 17 40C19.2091 40 21 38.2091 21 36C21 33.7909 19.2091 32 17 32C14.7909 32 13 33.7909 13 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21 36H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 12H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21 12H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M39 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + '2c96c284'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PositiveDynamics.js

/* harmony default export */ var PositiveDynamics = (IconWrapper('positive-dynamics', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 33.9502V42.1102",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M9 40V42.0556",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25 27V42.0714",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18.9614V42.0878",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M41 10.9707V42.0833",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 33L34 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23.5 6H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NegativeDynamics.js

/* harmony default export */ var NegativeDynamics = (IconWrapper('negative-dynamics', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 33.9502V42.1102",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M9 40V42.0556",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25 27V42.0714",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18.9614V42.0878",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M41 10.9707V42.0833",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 33L34 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 22L7 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StartTimeSort.js

/* harmony default export */ var StartTimeSort = (IconWrapper('start-time-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.0367 10.0001L24.9999 15.0143L30.0367 20.1118",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 9.00195V21.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EndTimeSort.js

/* harmony default export */ var EndTimeSort = (IconWrapper('end-time-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30.0036H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.9604 10.9786L23.9972 15.9928L18.9604 21.0903",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 10.002V22.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RecentViewsSort.js

/* harmony default export */ var RecentViewsSort = (IconWrapper('recent-views-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 21C28.0501 21 31.7168 19 35 15C31.7168 11 28.0501 9 24 9C19.9499 9 16.2832 11 13 15C16.2832 19 19.9499 21 24 21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18C25.6569 18 27 16.6569 27 15C27 13.3431 25.6569 12 24 12C22.3431 12 21 13.3431 21 15C21 16.6569 22.3431 18 24 18Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChangeDateSort.js

/* harmony default export */ var ChangeDateSort = (IconWrapper('change-date-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30.0036H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.0001 23H19.0016L32.8514 8.85714L28.9943 5L15 19.143L15.0001 23Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FollowUpDateSort.js

/* harmony default export */ var FollowUpDateSort = (IconWrapper('follow-up-date-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30.0036H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.9883 10.9786L32.9996 16.0001L27.9883 21.0903",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.001 16.001H33.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CreationDateSort.js

/* harmony default export */ var CreationDateSort = (IconWrapper('creation-date-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30.0036H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.001 15.001L32.001 15.001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 7V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DeadlineSort.js

/* harmony default export */ var DeadlineSort = (IconWrapper('deadline-sort', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 5V30.0036H42V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37L24 43L18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3438 20.6579L29.6575 9.34424",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3438 9.34315L29.6575 20.6569",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ActivitySource.js

/* harmony default export */ var ActivitySource = (IconWrapper('activity-source', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 5H6V13H42V5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H6V28H42V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 35H6V43H42V35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataArrival.js

/* harmony default export */ var DataArrival = (IconWrapper('data-arrival', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 42H42V6H32H30C28.6758 9.15854 26.6758 10.7378 24 10.7378C21.3242 10.7378 19.3242 9.15854 18 6H16H6V42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 24L21 30L33 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Unicast.js

/* harmony default export */ var Unicast = (IconWrapper('unicast', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 15C26.7614 15 29 12.7614 29 10C29 7.23858 26.7614 5 24 5C21.2386 5 19 7.23858 19 10C19 12.7614 21.2386 15 24 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 33V23L24 23.0034",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Multicast.js

/* harmony default export */ var Multicast = (IconWrapper('multicast', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 15C26.7614 15 29 12.7614 29 10C29 7.23858 26.7614 5 24 5C21.2386 5 19 7.23858 19 10C19 12.7614 21.2386 15 24 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 33V23L41 23.0128V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BroadcastOne.js

/* harmony default export */ var BroadcastOne = (IconWrapper('broadcast-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 15C26.7614 15 29 12.7614 29 10C29 7.23858 26.7614 5 24 5C21.2386 5 19 7.23858 19 10C19 12.7614 21.2386 15 24 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 23V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 23V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 33V23L41 23.0128V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 41V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PivotTable.js

/* harmony default export */ var PivotTable = (IconWrapper('pivot-table', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.0004 4H6.00005C4.89546 4 4.00002 4.89546 4.00005 6.00005L4.00104 42.0001C4.00107 43.1046 4.8965 44 6.00104 44H42.0004C43.105 44 44.0004 43.1046 44.0004 42V6C44.0004 4.89543 43.105 4 42.0004 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M20.0088 34.0083H33.5005V20.0083",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.5 38.5L23 37L20 34L23 31L24.5 29.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24.5L30.5 23L33.5 20L36.5 23L38 24.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4L14 44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14.0378L44 14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8 4H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 8L4 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BubbleChart.js

/* harmony default export */ var BubbleChart = (IconWrapper('bubble-chart', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "14",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "25",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "29",
      "cy": "37",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tiktok.js

/* harmony default export */ var Tiktok = (IconWrapper('tiktok', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21.3583 19.14C15.4696 18.8559 11.3764 20.9554 9.07862 25.4385C5.63194 32.1631 8.48051 43.1666 19.9791 43.1666C31.4776 43.1666 31.8103 32.0555 31.8103 30.8915C31.8103 30.1154 31.8103 25.7765 31.8103 17.8746C34.2697 19.4324 36.3433 20.3701 38.031 20.6877C39.7188 21.0054 40.7918 21.1462 41.2499 21.1101V14.6343C39.6888 14.4461 38.3388 14.0874 37.1999 13.5582C35.4915 12.7643 32.104 10.5612 32.104 7.33214C32.1063 7.34793 32.1063 6.51499 32.104 4.83331H24.9859C24.9648 20.6494 24.9648 29.3354 24.9859 30.8915C25.0177 33.2255 23.207 36.4905 19.5358 36.4905C15.8645 36.4905 14.0538 33.2282 14.0538 31.1239C14.0538 29.8357 14.4962 27.9685 16.3253 26.5858C17.41 25.7659 18.9155 25.4385 21.3583 25.4385C21.3583 24.6829 21.3583 22.5834 21.3583 19.14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Xigua.js

/* harmony default export */ var Xigua = (IconWrapper('xigua', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0001 42.3334C34.1253 42.3334 42.3334 34.1252 42.3334 24C42.3334 13.8748 34.1253 5.66669 24.0001 5.66669C13.8749 5.66669 5.66675 13.8748 5.66675 24C5.66675 26.4857 6.80703 27.687 8.61394 28.7447C10.4209 29.8024 13.8202 29.6268 16.1325 31.7014C18.4447 33.776 18.6008 37.1507 19.0797 38.7904C19.5585 40.4302 21.5144 42.3334 24.0001 42.3334Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.5256 18.5412C18.9872 19.8493 18.718 21.3866 18.718 23.1531C18.718 24.8329 18.8964 26.496 19.2532 28.1424L19.2532 28.1424C19.6106 29.7917 21.2373 30.8389 22.8866 30.4815C22.9465 30.4685 23.006 30.4538 23.065 30.4372C24.8646 29.9322 26.4318 29.2711 27.7665 28.454C29.0144 27.69 30.1772 26.7253 31.2548 25.5601L31.2548 25.5601C32.4006 24.3211 32.325 22.3879 31.0861 21.2421C31.0507 21.2094 31.0145 21.1775 30.9776 21.1465C29.7109 20.0817 28.385 19.1254 27 18.2775C25.554 17.3921 24.1377 16.8579 22.7511 16.6749L22.7511 16.6749C21.3771 16.4935 20.0531 17.2596 19.5256 18.5412Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Vigo.js

/* harmony default export */ var Vigo = (IconWrapper('vigo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44.125C33.5269 44.125 41.25 36.5094 41.25 27.1152C41.25 24.8089 40.9348 22.6141 40.2603 20.5237C39.8709 19.3169 39.5558 18.7406 39.093 17.6297C38.6302 16.5188 38.0145 15.5808 37.3134 14.6373C36.6123 13.6939 35.2464 11.8389 34.3008 11.4664C34.3008 12.9285 31.4285 18.0347 30.3258 18.2913C29.2231 18.5479 31.1407 12.9224 28.6979 9.07446C26.255 5.22647 22.3053 2.70049 22.3053 4.42961C22.3053 6.15873 21.2123 9.0621 20.1113 10.5015C19.0104 11.9408 17.2251 13.1774 15.9817 13.7582C14.7383 14.339 15.1885 10.8503 14.2551 11.4664C13.3144 12.0874 11.9773 13.8173 11.2742 14.903C8.81281 18.7041 6.75 22.418 6.75 27.1152C6.75 36.5094 14.4731 44.125 24 44.125Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.2954 23.7325V32.4698C19.2954 33.5068 20.1361 34.3476 21.1732 34.3476C21.5212 34.3476 21.8623 34.2509 22.1585 34.0684L30.5439 28.9004C30.9854 28.6284 31.1227 28.05 30.8506 27.6085C30.7737 27.4837 30.6687 27.3787 30.5439 27.3018L22.1585 22.1339C21.2756 21.5898 20.1187 21.8644 19.5746 22.7473C19.3921 23.0435 19.2954 23.3846 19.2954 23.7325Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Topbuzz.js

/* harmony default export */ var Topbuzz = (IconWrapper('topbuzz', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18.9047 18.1681L10.3249 16.3444C9.76728 16.2259 9.41131 15.6777 9.52984 15.1201L11.4614 6.03277C11.5799 5.47513 12.1281 5.11916 12.6857 5.23769L41.967 11.4616C42.5247 11.5802 42.8807 12.1283 42.7621 12.6859L40.8306 21.7733C40.712 22.3309 40.1639 22.6869 39.6062 22.5683L31.0999 20.7602C30.7126 20.6779 30.4829 20.8061 30.4109 21.1449C29.5288 25.2951 28.2055 31.5205 26.4412 39.8211C26.3227 40.3787 25.7745 40.7347 25.2169 40.6162L16.1296 38.6846C15.5719 38.5661 15.2159 38.0179 15.3345 37.4603C17.0993 29.1575 18.4229 22.9303 19.3053 18.7789C19.3766 18.4436 19.2431 18.24 18.9047 18.1681Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dongchedi.js

/* harmony default export */ var Dongchedi = (IconWrapper('dongchedi', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.1606 33.56C33.8437 32.0395 29.2094 31.2447 24.4417 31.2447C19.3825 31.2447 14.4746 32.1398 9.93952 33.8452C10.3385 34.9475 10.8603 36.0005 11.4967 36.9867L6.45533 40.2401C4.2134 36.766 3 32.6952 3 28.4489C3 16.6193 12.3853 7 24 7C35.6147 7 45 16.6193 45 28.4489C45 32.8826 43.6768 37.123 41.2468 40.6893L36.2884 37.3107C37.0796 36.1496 37.7085 34.8892 38.1606 33.56ZM38.5991 24.8845C37.0353 18.0613 31.0806 13 24 13C16.8282 13 10.8115 18.1925 9.34267 25.1491C9.10649 26.4791 9.46633 27.6361 10.4538 27.3315C14.9074 25.9582 19.6194 25.2447 24.4417 25.2447C29.0985 25.2447 33.6535 25.9099 37.9738 27.1936C38.828 27.4474 38.9554 26.3771 38.6153 24.9682C38.6078 24.9372 38.6024 24.9093 38.5991 24.8845Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Lark.js

/* harmony default export */ var Lark = (IconWrapper('lark', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M41.0721 5.99408L3.31119 16.5187L12.3861 25.8126L20.8003 25.9594L30.4832 16.5187C30.2271 15.9943 30.099 15.5552 30.099 15.2013C30.099 14.4074 30.4108 13.7786 30.8952 13.333C31.7246 12.57 32.7226 12.4558 33.8894 12.9905L41.0721 5.99408Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M42.1028 6.72849L31.5782 44.4894L22.2844 35.4145L22.1375 27.0003L31.5122 17.4817C32.0202 17.8455 32.575 18.0106 33.1766 17.9769C34.0791 17.9264 34.6621 17.3814 34.9356 17.0603C35.2091 16.7393 35.53 16.2052 35.5033 15.4114C35.4854 14.8822 35.3116 14.3941 34.982 13.9473L42.1028 6.72849Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Oceanengine.js

/* harmony default export */ var Oceanengine = (IconWrapper('oceanengine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21.4824 8.47412L23.8802 16.6267H4.75757L7.21533 8.47412H21.4824Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.1335 18.1253L17.3461 20.1035L7.81473 36.6485L2 30.4741L9.1335 18.1253Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M11.2915 33.6512L17.1062 27.4768L26.6975 44.0218L18.425 46L11.2915 33.6512Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M40.0655 39.4659H25.7985L23.4006 31.3733H42.5233",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M45.2806 17.466L38.1471 29.8747L29.9346 27.8965L39.4659 11.3515",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M35.989 14.3488L30.1743 20.5232L20.583 3.91825L28.8555 2L35.989 14.3488Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Weibo.js

/* harmony default export */ var Weibo = (IconWrapper('weibo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.5616 16.411C9.21739 19.6609 2.16299 29.1461 7.36228 35.9318C12.5616 42.7174 27.2819 40.0999 33.3587 35.3194C39.4356 30.5388 38.8357 27.5849 37.5182 26.2834C36.2006 24.9818 32.3553 26.2971 31.279 24.5261C30.2027 22.7551 33.1954 18.3311 30.645 16.9312C28.0945 15.5313 23.6905 20.5811 21.7012 19.269C19.712 17.9569 23.8904 13.6729 21.7012 12.4385C19.5121 11.204 15.9058 13.1611 12.5616 16.411Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.3785 16.5159C43.1432 13.3849 41.7988 10.5632 39.7369 8.44283C37.7244 6.37317 35.0285 4.97156 32.0134 4.60236",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37.2919 16.9312C37.1627 15.2915 36.4247 13.8138 35.2928 12.7033C34.188 11.6195 32.7079 10.8854 31.0527 10.6921",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Apple.js

/* harmony default export */ var Apple = (IconWrapper('apple', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9116 11.3177C23.9936 9.08616 24.6206 7.12603 25.7777 5.48749C26.9407 3.84065 28.8632 2.67079 31.495 2.0079C31.5125 2.08894 31.5307 2.17003 31.5496 2.25081V2.67481C31.5496 3.63625 31.3164 4.73871 30.8561 5.95136C30.3737 7.1255 29.6198 8.23058 28.6185 9.22791C27.6819 10.1067 26.8156 10.6885 26.0499 10.9515C25.797 11.027 25.4505 11.1013 25.0319 11.1682C24.6596 11.2262 24.2861 11.276 23.9116 11.3177Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.3507 14.629C21.378 14.629 19.3141 12 16.3818 12C13.4496 12 7.40869 14.6952 7.40869 24C7.40869 33.3048 12.7731 39.3 13.373 40C13.973 40.7 15.3606 42.4995 17.5103 42.4995C19.6601 42.4995 22.0136 40.7902 24.3507 40.7902C26.6877 40.7902 29.6293 42.4995 31.5497 42.4995C33.4701 42.4995 34.26 41.7166 35.567 40.3663C36.8739 39.016 39.3668 34.8953 40.2374 32.4221C38.8034 31.5685 35.0026 29.2511 35.0026 24C35.0026 20.4992 36.2819 17.591 38.8406 15.2752C37.162 13.0917 35.2152 12 33.0001 12C29.6774 12 27.3233 14.629 24.3507 14.629Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Android.js

/* harmony default export */ var Android = (IconWrapper('android', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43.9014 36H4.09888C5.10233 25.8934 13.6294 18 24.0001 18C34.3708 18 42.8979 25.8934 43.9014 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 20L10 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 20L37 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "15",
      "cy": "29",
      "r": "2",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "33",
      "cy": "29",
      "r": "2",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Windows.js

/* harmony default export */ var Windows = (IconWrapper('windows', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6.75 11.0625L19.6875 9.33749V21.4125H6.75V11.0625Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.8625 8.84464L41.25 6.75V21.4125H24.8625V8.84464Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.8625 27.45L41.25 27.8333V41.25L24.8625 38.5667V27.45Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.75 26.5875L19.6875 26.899V37.8L6.75 35.6198V26.5875Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Xingtu.js

/* harmony default export */ var Xingtu = (IconWrapper('xingtu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.5562 38.9999L8.17798 11.0172C8.14612 10.9012 8.16117 10.7773 8.21989 10.6723C8.27861 10.5673 8.37628 10.4896 8.4918 10.456C8.55409 10.4333 8.62119 10.427 8.68661 10.4379C8.75203 10.4487 8.81354 10.4763 8.86517 10.5179L42.4737 38.189C42.5587 38.267 42.6122 38.3735 42.624 38.4883C42.6358 38.6031 42.6052 38.7183 42.5378 38.812C42.5086 38.8694 42.464 38.9174 42.4089 38.9506C42.3539 38.9838 42.2906 39.0009 42.2263 38.9999H15.5562Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M44.9793 9.58096C45.0112 9.46526 44.9965 9.34163 44.9382 9.23668C44.8799 9.13173 44.7828 9.05384 44.6677 9.01975C44.6047 8.99968 44.5378 8.99482 44.4725 9.00557C44.4072 9.01632 44.3453 9.04237 44.2921 9.0816L26.1753 21.5725L39.1702 32.2516L44.9793 9.58096Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M2.18783 38.189C2.09543 38.2603 2.03199 38.3628 2.00925 38.4773C1.98652 38.5918 2.00601 38.7107 2.06413 38.812C2.10605 38.8717 2.16208 38.9201 2.22722 38.9528C2.29237 38.9856 2.36461 39.0018 2.43751 38.9998H13.0593L11.2474 31.9423L2.18783 38.189Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Feiyu.js

/* harmony default export */ var Feiyu = (IconWrapper('feiyu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M7.85351 24.1205C5.1939 20.9018 3.17643 17.1239 2 12.9881C4.36896 16.1997 7.24581 19.0066 10.5116 21.2881C15.9334 16.1977 23.2025 13.0832 31.1931 13.0804C36.4326 13.0812 41.0896 15.5486 44.0949 19.392C44.2644 19.5941 44.4213 19.8051 44.5661 20.0249C45.2379 21.0356 45.6676 22.2224 45.773 23.5033C44.5317 22.9555 43.2592 22.4769 41.956 22.0709C38.8614 21.1052 35.5909 20.546 32.2034 20.4539C31.8466 20.4438 31.5265 20.4395 31.2054 20.4395C27.4561 20.4395 23.8449 21.0101 20.4456 22.0702C18.8497 22.5677 17.3004 23.173 15.8067 23.8782C15.6385 23.9571 15.4715 24.0378 15.3043 24.1195C15.4723 24.2012 15.6418 24.2829 15.8117 24.3628C17.3032 25.0657 18.8505 25.671 20.4445 26.1675C23.8449 27.2276 27.4584 27.7993 31.2034 27.7993C31.5255 27.7993 31.8466 27.7952 32.1669 27.7861C35.5916 27.693 38.8624 27.1338 41.957 26.1701C43.2599 25.7631 44.5307 25.2855 45.7669 24.7397C45.6676 26.0145 45.2379 27.2003 44.5691 28.208C44.419 28.4351 44.2561 28.6527 44.0829 28.8611C41.0795 32.6984 36.4266 35.1606 31.2034 35.1618C23.2015 35.1588 15.9304 32.0433 10.5083 26.9517C7.24455 29.2322 4.36896 32.039 2.00126 35.2496C3.17845 31.115 5.1949 27.3379 7.85351 24.1205Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32.5971 27.3822C34.1267 26.9178 35.2547 26.1393 35.2547 24.2439C35.2547 22.3474 34.1267 21.2815 32.5961 20.8161C32.5852 20.813 32.5741 20.8097 32.5642 20.806C32.2799 20.723 31.9826 20.6786 31.6763 20.6786C31.9914 20.6786 32.3056 20.6833 32.619 20.6935C32.62 20.6935 32.6439 20.6935 32.6558 20.6946C35.9808 20.797 39.1407 21.4318 42.2285 22.4235C43.5076 22.8751 44.5604 23.204 45.7729 23.8094C45.7729 24.0471 45.7729 23.9754 45.7729 24.2061C45.7729 24.4382 45.7729 24.3131 45.7451 24.547C44.4218 25.1005 43.5083 25.4218 42.2295 25.8744C39.1555 26.7389 35.9815 27.4019 32.6578 27.5041C32.6449 27.5055 32.6319 27.5055 32.62 27.5055C32.3056 27.5156 31.9905 27.5201 31.6743 27.5201C31.9816 27.5201 32.2799 27.4754 32.5652 27.3927C32.5753 27.3893 32.5862 27.3859 32.5971 27.3822Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Market.js

/* harmony default export */ var Market = (IconWrapper('market', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 3.00018L24.3489 3.00304C35.7257 3.1893 45 12.4679 45 24.074L44.9971 24.424C44.8086 35.8367 35.4189 45.0002 24 45.0002L23.6511 44.9973C12.2743 44.811 3 35.5318 3 24.074C3 12.3495 12.4645 3.00018 24 3.00018ZM38.3795 25.3873L21.0667 29.7236C20.9031 29.7647 20.7389 29.7839 20.5776 29.7839L20.3895 29.775C19.9542 29.7338 19.5478 29.551 19.2294 29.2627L17.5405 35.1412L17.5176 35.2718C17.3081 36.7882 19.0777 38.028 20.9166 37.0902L36.8999 27.9968L37.0914 27.8822C38.2023 27.1817 38.6291 26.2589 38.3795 25.3873ZM17.9799 12.7781C16.7704 11.8506 14.8215 12.7632 14.7143 14.82L14.5981 33.2086C14.5891 34.6499 15.1893 35.5632 16.1184 35.7939L21.0193 18.6333L21.0736 18.4695C21.2962 17.883 21.7718 17.4537 22.337 17.2727L18.091 12.8704L17.9799 12.7781ZM21.0617 11.2795C19.8993 10.6677 18.887 10.7597 18.2574 11.4122L30.6688 24.2365C31.1534 24.7369 31.3249 25.4251 31.1884 26.0586L37.1238 24.5818L37.2594 24.5317C38.667 23.9481 38.8508 21.8041 37.1238 20.6833L21.2568 11.388L21.0617 11.2795Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Customer.js

/* harmony default export */ var Customer = (IconWrapper('customer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8.60917 36.9866C5.3218 33.3783 3.32191 28.6146 3.32191 23.3914C3.32191 12.1271 12.6184 2.99568 24.0861 2.99568C35.5539 2.99568 44.8504 12.1271 44.8504 23.3914C44.8504 31.3561 40.2009 38.2516 33.4239 41.6092C29.2775 43.771 24.5472 44.9957 19.5258 44.9957C13.3731 44.9957 7.65739 43.157 2.91748 40.0088C2.91748 40.0088 6.09606 39.6621 8.60835 36.9874L8.60917 36.9866ZM33.8397 33.4855C39.2117 28.1137 39.2117 19.4042 33.8397 14.0322C31.3487 11.5414 28.1401 10.2063 24.8794 10.0256V10.0248C24.781 7.57835 26.0979 5.92616 26.1043 5.91811L26.1036 5.91824L26.1045 5.9171C22.3569 6.64104 18.7783 8.45409 15.8764 11.356C13.6509 13.5814 12.0663 16.205 11.1216 18.9972C11.2591 18.6329 11.4124 18.2733 11.5814 17.9193C11.3865 18.4167 11.2103 18.925 11.051 19.445C9.47775 24.2209 10.5882 29.6873 14.3864 33.4855C19.7584 38.8575 28.4679 38.8575 33.8397 33.4855Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17.1299 22.345V24.0539V25.1922C17.1299 26.3283 18.0509 27.2494 19.1872 27.2494C20.3234 27.2494 21.2443 26.3283 21.2443 25.1922V24.0522V22.345C21.2443 21.2089 20.3234 20.2877 19.1872 20.2877C18.0509 20.2877 17.1299 21.2089 17.1299 22.345Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M27.313 22.345V24.0539V25.1922C27.313 26.3283 28.2341 27.2494 29.3702 27.2494C30.5064 27.2494 31.4275 26.3283 31.4275 25.1922V24.0522V22.345C31.4275 21.2089 30.5064 20.2877 29.3702 20.2877C28.2341 20.2877 27.313 21.2089 27.313 22.345Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BrowserSafari.js

/* harmony default export */ var BrowserSafari = (IconWrapper('browser-safari', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 33L19.5 19.5L33 15L28.5 28.5L15 33Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 26C25.1046 26 26 25.1046 26 24C26 22.8954 25.1046 22 24 22C22.8954 22 22 22.8954 22 24C22 25.1046 22.8954 26 24 26Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BrowserChrome.js

/* harmony default export */ var BrowserChrome = (IconWrapper('browser-chrome', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 33C28.9706 33 33 28.9706 33 24C33 19.0294 28.9706 15 24 15C19.0294 15 15 19.0294 15 24C15 28.9706 19.0294 33 24 33Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 15H41.8654H24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17 42.7408L29.6439 31L17 42.7408Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 15.2717L16.8751 29.552L6 15.2717Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15C28.9706 15 33 19.0294 33 24C33 28.9706 28.9706 33 24 33C19.0294 33 15 28.9706 15 24C15 19.0294 19.0294 15 24 15ZM24 15H41.8654M17 42.7408L29.6439 31M6 15.2717L16.8751 29.552M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FriendsCircle.js

/* harmony default export */ var FriendsCircle = (IconWrapper('friends-circle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M31 7V24V7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M31 7V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M16.636 6.63605L30.7781 20.7782L16.636 6.63605Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M16.636 6.63605L30.7781 20.7782",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M7 17H24H7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M7 17H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20.364 17.636L6.22188 31.7782L20.364 17.636Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20.364 17.636L6.22188 31.7782",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17 25V42V25Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 25V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17.636 27.636L31.7781 41.7782L17.636 27.636Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M17.636 27.636L31.7781 41.7782",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 31L42 31L24 31Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31L42 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M42.364 16.636L28.2219 30.7782L42.364 16.636Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M42.364 16.636L28.2219 30.7782",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C27.866 31 31 27.866 31 24C31 20.134 27.866 17 24 17C20.134 17 17 20.134 17 24C17 27.866 20.134 31 24 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Wechat.js

/* harmony default export */ var Wechat = (IconWrapper('wechat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M36.9974 21.7112C36.8434 13.0079 29.7401 6 21 6C12.1634 6 5 13.1634 5 22C5 26.1701 6.59531 29.9676 9.20892 32.8154L8.01043 40.0257L15.125 36.9699C18.2597 38.0122 21.218 38.2728 24 37.7516",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36.9974 21.7112C36.8434 13.0079 29.7401 6 21 6C12.1634 6 5 13.1634 5 22C5 26.1701 6.59531 29.9676 9.20892 32.8154L8.01043 40.0257L15.125 36.9699C18.2597 38.0122 21.218 38.2728 24 37.7516",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.125 20.4667C16.3676 20.4667 17.375 19.4519 17.375 18.2C17.375 16.9482 16.3676 15.9333 15.125 15.9333C13.8824 15.9333 12.875 16.9482 12.875 18.2C12.875 19.4519 13.8824 20.4667 15.125 20.4667Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.125 20.4667C25.3676 20.4667 26.375 19.4519 26.375 18.2C26.375 16.9482 25.3676 15.9333 24.125 15.9333C22.8824 15.9333 21.875 16.9482 21.875 18.2C21.875 19.4519 22.8824 20.4667 24.125 20.4667Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.7618 39.9293C37.0135 41.2302 34.8467 42 32.5 42C26.701 42 22 37.299 22 31.5C22 25.701 26.701 21 32.5 21C38.299 21 43 25.701 43 31.5C43 33.0997 42.6423 34.6159 42.0024 35.9728",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.7618 39.9293C37.0135 41.2302 34.8467 42 32.5 42C26.701 42 22 37.299 22 31.5C22 25.701 26.701 21 32.5 21C38.299 21 43 25.701 43 31.5C43 33.0997 42.6423 34.6159 42.0024 35.9728",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M42.0024 35.9728L43 42L38.7618 39.9293",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M42.0024 35.9728L43 42L38.7618 39.9293",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.6875 30.7999C34.7555 30.7999 34 30.0388 34 29.0999C34 28.161 34.7555 27.3999 35.6875 27.3999C36.6195 27.3999 37.375 28.161 37.375 29.0999C37.375 30.0388 36.6195 30.7999 35.6875 30.7999Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M28.9375 30.7999C28.0055 30.7999 27.25 30.0388 27.25 29.0999C27.25 28.161 28.0055 27.3999 28.9375 27.3999C29.8695 27.3999 30.625 28.161 30.625 29.0999C30.625 30.0388 29.8695 30.7999 28.9375 30.7999Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Youtube.js

/* harmony default export */ var Youtube = (IconWrapper('youtube', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.0634 10.4144C16.6066 10.1381 20.9181 10 23.9978 10C27.0778 10 31.3908 10.1382 36.9368 10.4145V10.4145C39.9389 10.5641 42.367 12.9119 42.6174 15.9072C42.871 18.9412 42.9978 21.6134 42.9978 23.9238C42.9978 26.2626 42.8679 28.972 42.608 32.0522H42.608C42.3584 35.0103 39.9831 37.3412 37.0207 37.5349C32.2793 37.845 27.9383 38 23.9978 38C20.0578 38 15.7184 37.845 10.9796 37.5351V37.5351C8.01828 37.3414 5.64346 35.0119 5.39264 32.055C5.12941 28.9518 4.9978 26.2414 4.9978 23.9238C4.9978 21.6341 5.12627 18.961 5.3832 15.9044L5.38321 15.9044C5.6349 12.9103 8.06249 10.564 11.0634 10.4144Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 19.6092V28.4061C21 28.8794 21.3838 29.2632 21.8571 29.2632C22.0252 29.2632 22.1896 29.2138 22.3298 29.1211L28.9274 24.7606C29.3223 24.4996 29.4308 23.9678 29.1698 23.5729C29.1074 23.4785 29.0269 23.3973 28.933 23.3342L22.3354 18.8979C21.9426 18.6338 21.41 18.7381 21.1458 19.131C21.0508 19.2724 21 19.4389 21 19.6092Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GithubOne.js

/* harmony default export */ var GithubOne = (IconWrapper('github-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29.3444 30.4767C31.7481 29.9771 33.9292 29.1109 35.6247 27.8393C38.5202 25.6677 40 22.3137 40 19C40 16.6754 39.1187 14.5051 37.5929 12.6669C36.7427 11.6426 39.2295 4.00001 37.02 5.02931C34.8105 6.05861 31.5708 8.33691 29.8726 7.8341C28.0545 7.29577 26.0733 7.00001 24 7.00001C22.1992 7.00001 20.4679 7.22313 18.8526 7.63452C16.5046 8.23249 14.2591 6.00001 12 5.02931C9.74086 4.05861 10.9736 11.9633 10.3026 12.7946C8.84119 14.6052 8 16.7289 8 19C8 22.3137 9.79086 25.6677 12.6863 27.8393C14.6151 29.2858 17.034 30.2077 19.7401 30.6621",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19.7402 30.662C18.5817 31.9372 18.0024 33.148 18.0024 34.2946C18.0024 35.4411 18.0024 38.3465 18.0024 43.0108",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29.3443 30.4767C30.4421 31.9175 30.991 33.2112 30.991 34.3577C30.991 35.5043 30.991 38.3886 30.991 43.0108",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 31.2156C6.89887 31.3255 7.56554 31.7388 8 32.4555C8.65169 33.5304 11.0742 37.5181 13.8251 37.5181C15.6591 37.5181 17.0515 37.5181 18.0024 37.5181",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Github.js

/* harmony default export */ var Github = (IconWrapper('github', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4ZM0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.183 45.4715C18.9896 45.2218 18.9896 42.9972 19.183 38.798C17.1112 38.8695 15.8022 38.7257 15.256 38.3666C14.4368 37.8279 13.6166 36.1666 12.8889 34.9958C12.1612 33.825 10.546 33.6399 9.8938 33.3782C9.24158 33.1164 9.07785 32.0495 11.691 32.8564C14.3042 33.6633 14.4316 35.8606 15.256 36.3744C16.0804 36.8882 18.0512 36.6634 18.9446 36.2518C19.8379 35.8402 19.7722 34.3077 19.9315 33.7006C20.1329 33.1339 19.423 33.0082 19.4074 33.0036C18.5353 33.0036 13.9537 32.0072 12.6952 27.5705C11.4368 23.1339 13.0579 20.234 13.9227 18.9874C14.4992 18.1563 14.4482 16.3851 13.7697 13.6736C16.2333 13.3588 18.1344 14.1342 19.4732 16C19.4745 16.0107 21.2283 14.9571 24 14.9571C26.7718 14.9571 27.7551 15.8153 28.514 16C29.2728 16.1847 29.8798 12.734 34.5666 13.6736C33.5881 15.5968 32.7686 18 33.3941 18.9874C34.0195 19.9748 36.4742 23.1146 34.9664 27.5705C33.9611 30.5412 31.9851 32.3522 29.0382 33.0036C28.7002 33.1114 28.5313 33.2854 28.5313 33.5254C28.5313 33.8855 28.9881 33.9248 29.6463 35.6116C30.085 36.7361 30.1167 39.9479 29.7413 45.2469C28.7904 45.489 28.0506 45.6515 27.5219 45.7346C26.5845 45.8819 25.5667 45.9645 24.5666 45.9964C23.5666 46.0283 23.2193 46.0247 21.8368 45.896C20.9151 45.8102 20.0305 45.6687 19.183 45.4715Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Twitter.js

/* harmony default export */ var Twitter = (IconWrapper('twitter', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 35.7622C6.92886 36.8286 20.8914 44.8773 30.8199 38.674C40.7483 32.4707 40.2006 21.7833 40.2006 16.886C41.1 15.0018 43 14.0439 43 8.9438C41.1337 10.6678 39.2787 11.2544 37.435 10.7036C35.6287 7.94957 33.1435 6.73147 29.9794 7.04934C25.2333 7.52614 23.4969 12.1825 24.0079 18.2067C16.6899 21.9074 10.9515 15.524 7.99418 10.7036C7.00607 14.4999 6.0533 19.0576 7.99418 24.0995C9.2881 27.4607 12.3985 30.3024 17.3254 32.6246C12.3323 35.3308 8.22382 36.3766 5 35.7622Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Facebook.js

/* harmony default export */ var Facebook = (IconWrapper('facebook', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 12.5997H31.2489H29.9871C28.9009 12.5997 28.0203 13.4803 28.0203 14.5666V21.4674H36L34.8313 29.0643H28.0203V43H19.2451V29.0643H12V21.4674H19.1515L19.2451 14.2563L19.2318 12.9471C19.1879 8.60218 22.6745 5.04434 27.0194 5.0004C27.0459 5.00013 27.0724 5 27.0989 5H36V12.5997Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FacebookOne.js

/* harmony default export */ var FacebookOne = (IconWrapper('facebook-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4.11111 46C2.94518 46 2 45.0496 2 43.8773V4.12274C2 2.95038 2.94518 2 4.11111 2H43.8889C45.0548 2 46 2.95038 46 4.12274V43.8773C46 45.0496 45.0548 46 43.8889 46C42.4815 46 29.2222 46 4.11111 46Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.6615 17.887H34.3074H33.7929C32.4429 17.887 31.3485 18.9814 31.3485 20.3314V25.2218H38.6615L37.5904 32.5526H31.3485V46H23.3065V32.5526H16.6667V25.2218H23.2207L23.3065 18.2634L23.2825 15.7694C23.2487 12.2477 26.0762 9.36546 29.5978 9.33164C29.6182 9.33144 29.6386 9.33134 29.6591 9.33134H38.6615V17.887Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Instagram.js

/* harmony default export */ var Instagram = (IconWrapper('instagram', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 6H14C9.58172 6 6 9.58172 6 14V34C6 38.4183 9.58172 42 14 42H34C38.4183 42 42 38.4183 42 34V14C42 9.58172 38.4183 6 34 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.4183 32 32 28.4183 32 24C32 19.5817 28.4183 16 24 16C19.5817 16 16 19.5817 16 24C16 28.4183 19.5817 32 24 32Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 15C36.1046 15 37 14.1046 37 13C37 11.8954 36.1046 11 35 11C33.8954 11 33 11.8954 33 13C33 14.1046 33.8954 15 35 15Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Gitlab.js

/* harmony default export */ var Gitlab = (IconWrapper('gitlab', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9627 42L42 27.4152L36.9957 6L30.9661 18.9935H17.9932L11.0151 6L6 27.4152L23.9627 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OrangeStation.js

/* harmony default export */ var OrangeStation = (IconWrapper('orange-station', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17.0597 9.61521C23.1085 10.8839 24.2736 13.0391 24.2754 13.0418C22.0385 0.115124 15.1902 3.27958 13.7323 4.0289C13.5507 4.12235 13.4261 4.29612 13.4004 4.49886C13.2717 5.51297 13.1244 8.79 17.0597 9.61521Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14.6533 22.6922C14.079 24.2866 13.9067 26.0745 14.2162 27.9191C14.9923 32.5435 18.8163 35.8948 23.2856 36.2602L24.8155 36.8047C25.4163 36.9988 26.203 37.1906 27.1263 37.325C28.4925 37.524 29.8938 37.5536 31.2806 37.3569C34.6469 36.8793 37.484 35.1461 39.4589 31.8555L39.9035 31.0789C38.6918 37.7554 33.9368 43.8959 26.3379 45.3187C21.0483 46.309 16.0475 44.9445 12.3111 41.9714L12.3546 42.0566C9.88584 37.2646 9.44407 32.944 10.5746 29.0916C11.1158 27.2472 12.0531 25.5985 13.2809 24.1361C13.7121 23.6225 14.1626 23.1514 14.6266 22.7174L14.6533 22.6922ZM17.3886 14.3358C19.8981 13.9397 23.9939 13.9624 26.2919 16.5288C26.3246 16.5651 26.2924 16.6229 26.2444 16.6131C25.0173 16.3627 23.3527 16.3577 22.0748 16.5723C19.3808 17.0243 17.2103 18.4603 15.8117 20.4549L15.3199 20.8271C15.0945 21.001 14.8544 21.1896 14.6906 21.3266C13.9337 21.9594 13.202 22.6748 12.515 23.493C11.2031 25.0556 10.1978 26.8241 9.61506 28.81C8.59888 32.2728 8.7749 36.0805 10.4104 40.2026C8.98209 38.6478 7.83206 36.8075 7.04463 34.7454C5.2083 29.9361 5.76786 23.6769 8.92262 19.6372C11.1728 16.7558 14.4873 14.7937 17.3886 14.3358ZM31.6804 7.03923C36.2828 0.87723 41.8021 5.3811 42.5278 6.01855C42.5812 6.06563 42.6143 6.12927 42.6216 6.19989C42.72 7.15436 42.978 14.044 29.7209 13.8113C33.3295 14.6959 37.1554 17.7034 38.7565 21.0051C39.2929 22.1118 39.7066 23.2639 39.9258 24.4739C40.1388 25.6496 40.2313 26.8522 40.2071 28.0576C40.1543 28.3361 39.9724 28.7929 39.6895 29.3632L39.5747 29.5904L39.335 30.0434L38.7827 31.0295C36.9618 34.2542 34.3235 35.9152 31.1402 36.3668C29.8549 36.5491 28.5477 36.5215 27.2704 36.3355C26.8224 36.2702 26.4096 36.1908 26.0392 36.1046C28.8332 35.5585 31.1379 33.8937 32.5666 31.6575C32.8966 31.2174 33.1774 30.7326 33.3971 30.1923C34.403 27.7165 34.5362 25.2497 33.7565 22.4833C32.5084 18.0554 29.1651 14.8147 24.9468 13.3616C24.9101 13.3489 24.9094 13.2982 24.9467 13.2874C25.5008 13.1268 27.8401 12.1806 31.6804 7.03923Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cc.js

/* harmony default export */ var Cc = (IconWrapper('cc', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.2782 12.14C21.181 12.4802 22.9856 12.9636 24.6924 13.5899C21.8825 13.6074 19.0791 14.7782 17.0541 17.103L16.8557 17.338C14.0164 20.8063 13.8258 25.7793 16.2839 29.4497L16.2224 29.3375C18.7497 33.9805 23.0519 38.0543 27.499 39.3643C31.0799 40.4191 34.4305 40.6989 37.5178 40.1993L37.5447 40.1811C33.8191 43.092 29.3272 44.553 24.831 44.5656H24.7149L24.2838 44.56C18.9676 44.4356 13.6883 42.2862 9.70805 38.1144L9.37863 37.7609C5.80885 33.8395 4.01583 28.845 4 23.8458V23.7129L4.00633 23.2584C4.09466 19.6851 5.09141 16.1308 6.99642 12.986L6.9277 13.0052C11.431 11.7594 15.5469 11.4727 19.2782 12.14ZM29.8165 32.6328C31.3625 31.897 33.2256 32.2537 34.4485 33.4761L39.4604 38.4855L39.1209 38.8174C39.0934 38.8437 39.0659 38.8699 39.0383 38.8959C35.6475 39.8087 31.8914 39.663 27.7688 38.4486C24.7892 37.5709 22.2332 35.4184 19.9509 32.7704L19.9015 32.7431C22.9258 34.3813 26.604 34.377 29.6249 32.7305L29.8165 32.6328ZM24.7544 2.99994L25.1975 3.00471C30.3656 3.11518 35.5015 5.14197 39.4455 9.08599L34.4485 14.083L34.2924 14.2313C33.0178 15.3811 31.1429 15.6554 29.6249 14.8281L29.3639 14.6908C29.3141 14.6655 29.2642 14.6407 29.2142 14.6163C26.2909 12.9805 23.0341 11.8419 19.4463 11.2003C15.8761 10.5619 11.9853 10.7621 7.77611 11.797C8.35234 10.9768 8.99698 10.1901 9.70805 9.44472L10.0345 9.10999C14.0951 5.03678 19.4211 2.99994 24.7495 2.99994H24.7544Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M41.5495 17.3253L33.6599 21.8806L33.444 22.0288C33.444 22.0288 32.7685 22.4814 32.8432 23.4385C32.9084 24.2756 33.5048 24.6288 33.5048 24.6288L41.7353 29.3768C41.7353 29.3768 42.3801 29.7247 43.1816 29.2913C44.0779 28.8066 44.0166 27.8599 44.0166 27.8599V18.7503C44.0166 18.7503 44.0176 18.7404 44.0176 18.7227V18.698C44.0157 18.5127 43.9628 17.8792 43.3679 17.4409C43.0205 17.185 42.6776 17.1049 42.3846 17.1049C41.8979 17.1054 41.5495 17.3253 41.5495 17.3253Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/QingniaoClue.js

/* harmony default export */ var QingniaoClue = (IconWrapper('qingniao-clue', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M1.38655 27.2806C3.34887 36.6795 12.5109 42.7522 21.9458 40.9791L21.9398 40.9844C32.9321 39.189 38.0792 32.5472 42.2631 29.223C44.4875 27.4558 45.6528 26.4229 46.793 25.8274C46.793 25.827 46.793 25.827 46.793 25.827C46.0463 25.9532 45.5664 25.726 44.9221 25.4991C44.2108 25.2482 43.2988 24.9973 41.608 25.2214C38.3848 25.6489 35.5646 28.8707 35.5646 28.8707L33.8455 30.3991C31.7852 31.9942 29.3378 33.1578 26.6106 33.7223C23.4774 34.3705 20.3654 34.1488 17.5284 33.2226C16.3787 32.8473 15.2751 32.3552 14.2324 31.7593C10.0056 29.3443 6.79608 25.2102 5.72623 20.0864C5.09548 17.0668 5.28505 14.0671 6.14198 11.3161C2.11349 15.3648 0.134099 21.2831 1.38655 27.2806Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M21.9458 40.9791L21.9398 40.9844C32.9321 39.189 38.0792 32.5472 42.2631 29.223C44.4875 27.4558 45.6528 26.4229 46.793 25.8274C46.0463 25.9532 45.5664 25.726 44.9221 25.4991C44.2108 25.2482 43.2988 24.9973 41.608 25.2214C38.3848 25.6489 35.5646 28.8707 35.5646 28.8707L33.8455 30.3991C31.7852 31.9942 29.3378 33.1578 26.6106 33.7223C23.4774 34.3705 20.3654 34.1488 17.5284 33.2226C16.3787 32.8473 15.2751 32.3552 14.2324 31.7593C10.0056 29.3443 6.79608 25.2102 5.72623 20.0864C5.09548 17.0668 5.28505 14.0671 6.14198 11.3161C2.11349 15.3648 0.134099 21.2831 1.38655 27.2806C3.34887 36.6795 12.5109 42.7522 21.9458 40.9791Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M35.749 28.5858C33.0744 37.9318 23.2966 43.3504 13.9087 40.6876C5.72353 38.3667 0.537732 30.668 1.11587 22.5385C1.79576 28.982 6.31247 34.6759 12.9542 36.5595C21.6768 39.034 30.7622 33.9991 33.2472 25.3145C33.9654 22.804 34.0534 20.2633 33.6047 17.8599C33.0557 14.9188 31.703 12.1833 29.7181 9.96065C32.2859 11.984 34.2229 14.6734 35.3405 17.6915C36.5912 21.0691 36.8155 24.8582 35.749 28.5858Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M27.4592 32.4682L27.9868 33.3867L28.8428 33.0343L29.633 32.6819C31.2259 31.8873 31.1508 32.0075 33.0673 30.7386C34.9837 29.4698 35.9953 28.6986 37.4682 26.9245L36.6489 26.2751C35.6804 27.4969 34.6116 28.4134 32.7798 29.6262C31.6251 30.3907 29.8496 31.3397 27.4592 32.4682Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.6961 6.11787C21.0453 6.11787 23.3254 6.58728 25.4233 7.45257C16.7523 9.89998 11.2734 18.5288 12.8712 27.4427C12.8722 27.4469 12.8729 27.4518 12.8733 27.4559C12.8977 27.5905 12.9235 27.725 12.951 27.8591C12.9527 27.8682 12.9545 27.8776 12.9566 27.8863C12.9604 27.9048 12.9635 27.9233 12.9674 27.9417C12.9914 28.0567 13.0172 28.1707 13.0433 28.2843C13.0486 28.3063 13.0538 28.3279 13.059 28.3502C13.0698 28.3972 13.0806 28.4443 13.0942 28.4944C13.2716 29.2221 13.4944 29.9319 13.7599 30.6208C10.8094 28.5198 8.88127 25.9539 7.64004 23.2815C5.9897 19.7281 5.75011 15.6338 7.03247 10.4819C9.25023 8.54116 11.9863 7.12895 15.082 6.48831C15.3259 6.43743 15.5699 6.39353 15.8138 6.3538C16.7808 6.19489 17.7441 6.11787 18.6961 6.11787ZM5.3853 17.417L5.39997 17.7679C5.3203 16.681 5.34353 15.6045 5.46235 14.5493C5.38056 15.5333 5.35396 16.49 5.3853 17.417Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Alipay.js

/* harmony default export */ var Alipay = (IconWrapper('alipay', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24C0 10.7452 10.7452 0 24 0ZM24 4.36364C13.1551 4.36364 4.36364 13.1551 4.36364 24C4.36364 34.8449 13.1551 43.6364 24 43.6364C30.7379 43.6364 36.6832 40.2427 40.2199 35.0715C38.7865 34.647 36.4967 33.9121 33.537 32.6689C32.3002 32.1494 30.4531 31.3299 27.9958 30.2104C25.0556 33.1735 20.769 36 16.1742 36C12.9855 35.9844 7.63636 34.3728 7.63636 29.3458C7.63636 24.3188 12.5923 23.1225 15.8076 23.1225C17.7535 23.1225 21.1973 24.1964 26.1389 26.3443L26.2149 26.3741C27.5413 24.7514 28.4513 22.867 28.9459 20.7208L29.0455 20.2571L20.3944 20.2571C19.0841 20.257 17.6773 20.2569 16.1742 20.2568V17.9371L22.032 17.9367V15.0371L13.8306 15.0375V13.2977L22.032 13.2971L22.033 9.81818H26.72L26.7196 13.2971L36.0941 13.2977V15.0375L26.7196 15.0371V17.9367L34.2059 17.9371C34.0959 18.661 33.9722 19.3186 33.8347 19.91L33.7506 20.2568C33.4061 21.5023 32.6313 23.3162 31.4262 25.6986C31.1062 26.3312 30.6437 27.0626 30.0599 27.838C31.904 28.5215 33.771 29.1844 35.6605 29.8275C38.1068 30.6601 40.2216 31.3339 42.005 31.8487C43.0543 29.445 43.6364 26.7905 43.6364 24C43.6364 13.1551 34.8449 4.36364 24 4.36364ZM10.3154 28.5436C10.3154 31.7418 17.0047 33.0159 22.4246 29.6497C23.0347 29.2707 23.6048 28.8664 24.1348 28.4369L24.1166 28.4286L23.69 28.1665C20.308 26.1089 17.6806 24.9932 15.8076 24.8194C14.0892 24.66 10.3154 25.3455 10.3154 28.5436ZM29.0455 20.2568L29.0455 20.2571L31.2536 20.2574L29.0455 20.2568Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Taobao.js

/* harmony default export */ var Taobao = (IconWrapper('taobao', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24C0 10.7452 10.7452 0 24 0ZM24 4.36364C13.1551 4.36364 4.36364 13.1551 4.36364 24C4.36364 34.8449 13.1551 43.6364 24 43.6364C34.8449 43.6364 43.6364 34.8449 43.6364 24C43.6364 13.1551 34.8449 4.36364 24 4.36364ZM19.1273 11.6177L22.7626 12.3626C22.6634 13.0622 22.4273 13.8541 22.0543 14.7383C23.2431 14.31 24.3806 13.9947 25.466 13.7917C27.8531 13.3454 29.7082 13.0909 31.5472 13.0909C33.3862 13.0909 34.8014 13.1095 36.5962 14.5261C37.7129 15.4076 38.3999 16.5671 38.6572 18.0045L38.7058 18.3168V30.9897C38.7058 31.8359 38.4803 32.7094 38.0292 33.6101C37.6064 34.4546 36.7928 34.932 35.5885 35.0423L35.3424 35.0595H27.8024C27.3202 33.6504 27.3202 32.8184 27.8024 32.5637C28.5256 32.1816 31.3051 33.2064 32.5259 32.5637C33.2855 32.1638 33.6722 31.4194 33.6858 30.3307L33.6831 30.0921V18.1324C33.6831 16.2794 32.5496 14.9986 29.0578 15.189C27.1624 15.2924 24.9495 15.763 22.4192 16.601L23.2411 16.851L24.2327 17.1886V17.5143C24.2327 18.0662 24.6428 18.5237 25.1772 18.5955L25.3025 18.605L32.6004 18.7457V20.7543H27.1449V23.2534H32.6004V24.8061H27.0854L27.1449 29.6797C27.6591 29.7188 28.1662 29.6142 28.6661 29.3658C29.0013 29.1993 29.2635 28.9579 29.4526 28.6415L29.0889 27.9224C29.0885 27.9216 29.0881 27.9209 29.0877 27.9201C28.8361 27.4205 29.0048 26.8192 29.4611 26.5189L29.5714 26.4551L30.8247 25.8239C30.8745 25.7989 30.9261 25.7776 30.9791 25.7605C31.5114 25.588 32.0798 25.8465 32.307 26.3432L32.3532 26.462L33.0964 28.7558C33.2436 29.2102 33.0774 29.7019 32.6981 29.976L32.5894 30.0451L31.689 30.5466C31.6765 30.5536 31.6639 30.5603 31.6511 30.5667C31.152 30.8195 30.5504 30.6522 30.249 30.1966L30.185 30.0865L30.1714 30.0629C29.6195 30.6617 29.0968 31.1206 28.6034 31.4398C27.7867 31.9681 26.9058 32.3985 25.8899 32.4665L25.6095 32.4759H20.3553C19.9292 32.4759 19.1567 32.1994 18.3633 31.4398C17.8785 30.9756 17.5835 30.2517 17.4785 29.268L17.4545 28.9933V26.2516H21.6108C21.6443 27.4372 21.7552 28.3511 21.9437 28.9933C22.1196 29.5926 22.5858 29.8319 23.3422 29.7111L23.5088 29.6797V24.8061H17.4545V23.2534H23.5088V20.7543H22.3509L20.5157 23.0498L18.5174 21.7861C19.7463 20.4007 20.498 19.5036 20.7724 19.0947C21.0468 18.6858 21.0468 17.9813 20.7724 16.9814L20.8189 17.1633L20.7778 17.1801C20.07 18.2499 19.1326 19.2869 17.9657 20.2909L17.5827 20.6125L15.0765 18.1365C16.2176 17.2504 17.053 16.4263 17.5827 15.6642C18.1124 14.9021 18.6273 13.5533 19.1273 11.6177ZM11.4318 17.788L15.0085 21.15C16.3057 22.3693 16.7268 24.2477 16.093 25.8952L16.0043 26.1087L12.2945 34.4169L8.20691 31.5766L13.409 26.0677C13.4785 25.9941 13.5428 25.9157 13.6014 25.8332C14.2643 24.9 14.0893 23.624 13.2279 22.9005L13.0862 22.791L9.37195 20.1527L11.4318 17.788ZM13.6364 10.9091C15.1426 10.9091 16.3636 12.1301 16.3636 13.6364C16.3636 15.1426 15.1426 16.3636 13.6364 16.3636C12.1301 16.3636 10.9091 15.1426 10.9091 13.6364C10.9091 12.1301 12.1301 10.9091 13.6364 10.9091Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Google.js

/* harmony default export */ var Google = (IconWrapper('google', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34.5 7L29.5 14.5C28.5 13.9684 26.5 12.9999 24 12.9999C18 12.9999 13 17.9999 13 23.4999C13 28.9999 17 35.0006 24 35.0006C29.6 35.0006 33.5 31.0005 33.5 28.0005H24V21.0002C31 21.0003 44 20.9999 44 20.9999C44.5 28.5002 42.2896 32.9004 39.5 36.5C35.3242 41.8881 29.1712 44.0002 24 44.0002C14 44.0002 4 36.0006 4 23.4999C4 11.5 14.7237 4 23 4C31.2763 4 34.5 7 34.5 7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M29.5 14.5L28.5612 16.266C29.4687 16.7484 30.594 16.4645 31.1641 15.6094L29.5 14.5ZM34.5 7L36.1641 8.1094C36.708 7.2936 36.5802 6.20383 35.8625 5.53589L34.5 7ZM44 20.9999L45.9956 20.8669C45.9255 19.8163 45.0529 18.9999 43.9999 18.9999L44 20.9999ZM24 21.0002L24 19.0002C23.4696 19.0002 22.9609 19.2109 22.5858 19.586C22.2107 19.961 22 20.4698 22 21.0002H24ZM24 28.0005H22C22 29.105 22.8954 30.0005 24 30.0005V28.0005ZM33.5 28.0005H35.5C35.5 26.8959 34.6046 26.0005 33.5 26.0005V28.0005ZM39.5 36.5L37.9192 35.2749L37.9192 35.2749L39.5 36.5ZM31.1641 15.6094L36.1641 8.1094L32.8359 5.8906L27.8359 13.3906L31.1641 15.6094ZM34.5 7C35.8625 5.53589 35.8616 5.53503 35.8606 5.53416C35.8603 5.53385 35.8593 5.53296 35.8587 5.53235C35.8574 5.53112 35.856 5.52985 35.8545 5.52853C35.8517 5.5259 35.8486 5.52309 35.8453 5.5201C35.8388 5.51412 35.8314 5.50743 35.8231 5.50007C35.8067 5.48533 35.7868 5.46787 35.7634 5.44787C35.7168 5.40786 35.6563 5.35772 35.5816 5.29897C35.4322 5.18145 35.2258 5.02961 34.959 4.85569C34.4248 4.50754 33.6506 4.0726 32.6083 3.64788C30.5184 2.79622 27.3861 2 23 2V6C26.8902 6 29.5079 6.70378 31.0988 7.35212C31.8971 7.6774 32.4461 7.99246 32.775 8.20681C32.9396 8.31414 33.0498 8.39667 33.109 8.44321C33.1386 8.4665 33.1555 8.48081 33.1601 8.48475C33.1624 8.48672 33.1616 8.4861 33.1579 8.48272C33.156 8.48103 33.1533 8.47865 33.1499 8.47555C33.1482 8.47401 33.1463 8.47228 33.1443 8.47037C33.1432 8.46942 33.1422 8.46842 33.141 8.46738C33.1405 8.46685 33.1396 8.46604 33.1393 8.46578C33.1384 8.46495 33.1375 8.46411 34.5 7ZM23 2C18.3065 2 13.0898 4.10146 9.05165 7.76958C4.97769 11.4702 2 16.8614 2 23.4999H6C6 18.1386 8.38418 13.7798 11.7412 10.7304C15.1339 7.64854 19.4172 6 23 6V2ZM2 23.4999C2 37.2006 12.9933 46.0002 24 46.0002V42.0002C15.0067 42.0002 6 34.8006 6 23.4999H2ZM44 20.9999C43.9999 18.9999 43.9999 18.9999 43.9998 18.9999C43.9997 18.9999 43.9995 18.9999 43.9993 18.9999C43.9989 18.9999 43.9984 18.9999 43.9976 18.9999C43.996 18.9999 43.9936 18.9999 43.9905 18.9999C43.9842 18.9999 43.9748 18.9999 43.9624 18.9999C43.9376 18.9999 43.9007 18.9999 43.8522 18.9999C43.7553 18.9999 43.6122 18.9999 43.4277 18.9999C43.0585 19 42.5234 19 41.8593 19C40.5312 19 38.6875 19.0001 36.625 19.0001C32.5 19.0002 27.5 19.0003 24 19.0002L24 23.0002C27.5 23.0003 32.5 23.0002 36.625 23.0001C38.6875 23.0001 40.5313 23 41.8594 23C42.5235 23 43.0587 23 43.4278 22.9999C43.6124 22.9999 43.7554 22.9999 43.8524 22.9999C43.9008 22.9999 43.9377 22.9999 43.9626 22.9999C43.975 22.9999 43.9843 22.9999 43.9906 22.9999C43.9937 22.9999 43.9961 22.9999 43.9977 22.9999C43.9985 22.9999 43.9991 22.9999 43.9995 22.9999C43.9997 22.9999 43.9998 22.9999 43.9999 22.9999C44 22.9999 44.0001 22.9999 44 20.9999ZM22 21.0002V28.0005H26V21.0002H22ZM24 30.0005H33.5V26.0005H24V30.0005ZM31.5 28.0005C31.5 28.6975 30.9784 29.9325 29.581 31.0797C28.2481 32.1739 26.3174 33.0006 24 33.0006V37.0006C27.2826 37.0006 30.1019 35.8273 32.119 34.1714C34.0716 32.5685 35.5 30.3034 35.5 28.0005H31.5ZM24 33.0006C18.3828 33.0006 15 28.1959 15 23.4999H11C11 29.804 15.6172 37.0006 24 37.0006V33.0006ZM15 23.4999C15 19.1639 19.0442 14.9999 24 14.9999V10.9999C16.9558 10.9999 11 16.836 11 23.4999H15ZM24 14.9999C26.0003 14.9999 27.6453 15.779 28.5612 16.266L30.4388 12.734C29.3547 12.1577 26.9997 10.9999 24 10.9999V14.9999ZM24 46.0002C29.6725 46.0002 36.4599 43.6877 41.0808 37.7251L37.9192 35.2749C34.1886 40.0886 28.6698 42.0002 24 42.0002V46.0002ZM41.0808 37.7251C44.1179 33.8063 46.5334 28.9344 45.9956 20.8669L42.0044 21.133C42.4666 28.066 40.4614 31.9945 37.9192 35.2749L41.0808 37.7251Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dribble.js

/* harmony default export */ var Dribble = (IconWrapper('dribble', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 29.5386 41.7486 34.5513 38.1112 38.173C34.4943 41.7742 29.5071 44 24 44C12.9543 44 4 35.0457 4 24C4 18.6615 6.09159 13.8116 9.5 10.225C13.1439 6.39055 18.2928 4 24 4C29.5071 4 34.4943 6.22583 38.1112 9.82695C41.7486 13.4487 44 18.4614 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44.0001 24C41.0817 24 33.0312 22.8993 25.8266 26.0632C18.0001 29.5002 12.3324 34.8315 9.86304 38.1472",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.5 5.4538C19.6304 8.34269 26.4603 15.6985 29 23C31.5397 30.3015 32.4809 39.2791 33.0606 41.8347",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.15479 21.5C7.93256 21.7277 17.9334 21.9332 24.3334 19.1999C30.7334 16.4666 36.2407 11.4396 38.1296 9.84521",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C12.9543 44 4 35.0457 4 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 18.6616 6.09159 13.8116 9.5 10.225",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C18.2928 4 13.1439 6.39055 9.5 10.225",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C29.5071 4 34.4943 6.22583 38.1112 9.82695C41.7486 13.4487 44 18.4614 44 24C44 29.5386 41.7486 34.5513 38.1112 38.173",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bydesign.js

/* harmony default export */ var Bydesign = (IconWrapper('bydesign', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8.00002 7.28206L19.5556 4L19.5555 16.7179L8 20L8.00002 7.28206Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.00002 25.6752L19.5556 22.3932L19.5555 35.1111L8 38.3932L8.00002 25.6752Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.889 21.0759L36.4445 18.2222L36.4445 41.1463L24.889 44L24.889 21.0759Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cloudy.js

/* harmony default export */ var Cloudy = (IconWrapper('cloudy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 30.9942C6.14242 28.461 4 24.4278 4 19.8851C4 12.2166 10.1052 6 17.6364 6C23.9334 6 29.2336 10.3462 30.8015 16.2533C32.0353 15.6159 33.431 15.2567 34.9091 15.2567C39.9299 15.2567 44 19.4011 44 24.5135C44 28.3094 41.7562 31.5716 38.5455 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 42C29.3137 42 32 39.3137 32 36C32 32.6863 29.3137 30 26 30C22.6863 30 20 32.6863 20 36C20 39.3137 22.6863 42 26 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.2426 15.7574C21.1569 14.6716 19.6569 14 18 14C14.6863 14 12 16.6863 12 20C12 21.6569 12.6716 23.1569 13.7574 24.2426",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Thunderstorm.js

/* harmony default export */ var Thunderstorm = (IconWrapper('thunderstorm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 30.9942C6.14242 28.461 4 24.4278 4 19.8851C4 12.2166 10.1052 6 17.6364 6C23.9334 6 29.2336 10.3462 30.8015 16.2533C32.0353 15.6159 33.431 15.2567 34.9091 15.2567C39.9299 15.2567 44 19.4011 44 24.5135C44 28.3094 41.7562 31.5716 38.5455 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.4141 22.5858L14.5856 25.4142",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.9996 24L19 32.0012H29.004L21.0003 40.018",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.4141 38.5858L30.5856 41.4142",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HeavyRain.js

/* harmony default export */ var HeavyRain = (IconWrapper('heavy-rain', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 30.9942C6.14242 28.461 4 24.4278 4 19.8851C4 12.2166 10.1052 6 17.6364 6C23.9334 6 29.2336 10.3462 30.8015 16.2533C32.0353 15.6159 33.431 15.2567 34.9091 15.2567C39.9299 15.2567 44 19.4011 44 24.5135C44 28.3094 41.7562 31.5716 38.5455 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 28V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 28V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sandstorm.js

/* harmony default export */ var Sandstorm = (IconWrapper('sandstorm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 22H36C40.4183 22 44 18.4183 44 14C44 9.58172 40.4183 6 36 6C31.5817 6 28 9.58172 28 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 29H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 29H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 29H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 35H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 35H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 35H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 42H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SunOne.js

/* harmony default export */ var SunOne = (IconWrapper('sun-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 37C31.1797 37 37 31.1797 37 24C37 16.8203 31.1797 11 24 11C16.8203 11 11 16.8203 11 24C11 31.1797 16.8203 37 24 37Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6C25.3807 6 26.5 4.88071 26.5 3.5C26.5 2.11929 25.3807 1 24 1C22.6193 1 21.5 2.11929 21.5 3.5C21.5 4.88071 22.6193 6 24 6Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5 12C39.8807 12 41 10.8807 41 9.5C41 8.11929 39.8807 7 38.5 7C37.1193 7 36 8.11929 36 9.5C36 10.8807 37.1193 12 38.5 12Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M44.5 26.5C45.8807 26.5 47 25.3807 47 24C47 22.6193 45.8807 21.5 44.5 21.5C43.1193 21.5 42 22.6193 42 24C42 25.3807 43.1193 26.5 44.5 26.5Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5 41C39.8807 41 41 39.8807 41 38.5C41 37.1193 39.8807 36 38.5 36C37.1193 36 36 37.1193 36 38.5C36 39.8807 37.1193 41 38.5 41Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 47C25.3807 47 26.5 45.8807 26.5 44.5C26.5 43.1193 25.3807 42 24 42C22.6193 42 21.5 43.1193 21.5 44.5C21.5 45.8807 22.6193 47 24 47Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.5 41C10.8807 41 12 39.8807 12 38.5C12 37.1193 10.8807 36 9.5 36C8.11929 36 7 37.1193 7 38.5C7 39.8807 8.11929 41 9.5 41Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M3.5 26.5C4.88071 26.5 6 25.3807 6 24C6 22.6193 4.88071 21.5 3.5 21.5C2.11929 21.5 1 22.6193 1 24C1 25.3807 2.11929 26.5 3.5 26.5Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.5 12C10.8807 12 12 10.8807 12 9.5C12 8.11929 10.8807 7 9.5 7C8.11929 7 7 8.11929 7 9.5C7 10.8807 8.11929 12 9.5 12Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fog.js

/* harmony default export */ var Fog = (IconWrapper('fog', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 30.9942C6.14242 28.461 4 24.4278 4 19.8851C4 12.2166 10.1052 6 17.6364 6C23.9334 6 29.2336 10.3462 30.8015 16.2533C32.0353 15.6159 33.431 15.2567 34.9091 15.2567C39.9299 15.2567 44 19.4011 44 24.5135C44 28.3094 41.7562 31.5716 38.5455 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.2426 15.7574C21.1569 14.6716 19.6569 14 18 14C14.6863 14 12 16.6863 12 20C12 21.6569 12.6716 23.1569 13.7574 24.2426",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 34H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 42H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 42H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 26H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sun.js

/* harmony default export */ var Sun = (IconWrapper('sun', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 3V6.15V3Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 3V6.15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.8492 9.15076L36.6219 11.3781L38.8492 9.15076Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.8492 9.15076L36.6219 11.3781",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M45 24H41.85H45Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M45 24H41.85",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.8492 38.8492L36.6219 36.6219L38.8492 38.8492Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.8492 38.8492L36.6219 36.6219",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 45V41.85V45Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 45V41.85",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M9.15076 38.8492L11.3781 36.6219L9.15076 38.8492Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.15076 38.8492L11.3781 36.6219",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M3 24H6.15H3Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M3 24H6.15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M9.15076 9.15076L11.3781 11.3781L9.15076 9.15076Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.15076 9.15076L11.3781 11.3781",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36C30.6274 36 36 30.6274 36 24C36 17.3726 30.6274 12 24 12C17.3726 12 12 17.3726 12 24C12 30.6274 17.3726 36 24 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LightRain.js

/* harmony default export */ var LightRain = (IconWrapper('light-rain', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.45455 30.9942C6.14242 28.461 4 24.4278 4 19.8851C4 12.2166 10.1052 6 17.6364 6C23.9334 6 29.2336 10.3462 30.8015 16.2533C32.0353 15.6159 33.431 15.2567 34.9091 15.2567C39.9299 15.2567 44 19.4011 44 24.5135C44 28.3094 41.7562 31.5716 38.5455 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 23V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 23V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 34V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 34V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Snowflake.js

/* harmony default export */ var Snowflake = (IconWrapper('snowflake', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.72461 14L41.3656 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.71923 33.9773L41.2814 14.0228",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 10L15 19L6 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 27L15 29L12 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 10L33 19L42 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 27L33 29L36 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 7L24 13L30 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 41L24 35L30 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sunny.js

/* harmony default export */ var Sunny = (IconWrapper('sunny', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30.7826 24.5652C34.5285 24.5652 37.5652 21.5285 37.5652 17.7826C37.5652 14.0367 34.5285 11 30.7826 11C27.4338 11 24.6518 13.427 24.0996 16.618",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 7C34.1046 7 35 6.10457 35 5C35 3.89543 34.1046 3 33 3C31.8954 3 31 3.89543 31 5C31 6.10457 31.8954 7 33 7Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M42 12C43.1046 12 44 11.1046 44 10C44 8.89543 43.1046 8 42 8C40.8954 8 40 8.89543 40 10C40 11.1046 40.8954 12 42 12Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 21C45.1046 21 46 20.1046 46 19C46 17.8954 45.1046 17 44 17C42.8954 17 42 17.8954 42 19C42 20.1046 42.8954 21 44 21Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M22 10C23.1046 10 24 9.10457 24 8C24 6.89543 23.1046 6 22 6C20.8954 6 20 6.89543 20 8C20 9.10457 20.8954 10 22 10Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M9.45455 39.9942C6.14242 37.461 4 33.4278 4 28.8851C4 21.2166 10.1052 15 17.6364 15C23.9334 15 29.2336 19.3462 30.8015 25.2533C32.0353 24.6159 33.431 24.2567 34.9091 24.2567C39.9299 24.2567 44 28.4011 44 33.5135C44 37.3094 41.7562 40.5716 38.5455 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.2426 24.7574C21.1569 23.6716 19.6569 23 18 23C14.6863 23 12 25.6863 12 29C12 30.6569 12.6716 32.1569 13.7574 33.2426",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThunderstormOne.js

/* harmony default export */ var ThunderstormOne = (IconWrapper('thunderstorm-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20.5294 20L17 31.5L23.1765 32.3846L20.5294 43L32 29.7308L24.9412 27.9615L30.2353 20H20.5294Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.45455 29.9942C6.14242 27.461 4 23.4278 4 18.8851C4 11.2166 10.1052 5 17.6364 5C23.9334 5 29.2336 9.34618 30.8015 15.2533C32.0353 14.6159 33.431 14.2567 34.9091 14.2567C39.9299 14.2567 44 18.4011 44 23.5135C44 27.3094 41.7562 30.5716 38.5455 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Moon.js

/* harmony default export */ var Moon = (IconWrapper('moon', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28.0527 4.41085C22.5828 5.83695 18.5455 10.8106 18.5455 16.7273C18.5455 23.7564 24.2436 29.4545 31.2727 29.4545C37.1894 29.4545 42.1631 25.4172 43.5891 19.9473C43.8585 21.256 44 22.6115 44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24C4 12.9543 12.9543 4 24 4C25.3885 4 26.744 4.14149 28.0527 4.41085Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IMac.js

/* harmony default export */ var IMac = (IconWrapper('i-mac', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 6H44V30H4V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 30V36H4V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0909 19H10.9091C10.407 19 10 19.407 10 19.9091V22.0909C10 22.593 10.407 23 10.9091 23H13.0909C13.593 23 14 22.593 14 22.0909V19.9091C14 19.407 13.593 19 13.0909 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0909 12H10.9091C10.407 12 10 12.407 10 12.9091V15.0909C10 15.593 10.407 16 10.9091 16H13.0909C13.593 16 14 15.593 14 15.0909V12.9091C14 12.407 13.593 12 13.0909 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M21.0909 19H18.9091C18.407 19 18 19.407 18 19.9091V22.0909C18 22.593 18.407 23 18.9091 23H21.0909C21.593 23 22 22.593 22 22.0909V19.9091C22 19.407 21.593 19 21.0909 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M21.0909 12H18.9091C18.407 12 18 12.407 18 12.9091V15.0909C18 15.593 18.407 16 18.9091 16H21.0909C21.593 16 22 15.593 22 15.0909V12.9091C22 12.407 21.593 12 21.0909 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M29.0909 19H26.9091C26.407 19 26 19.407 26 19.9091V22.0909C26 22.593 26.407 23 26.9091 23H29.0909C29.593 23 30 22.593 30 22.0909V19.9091C30 19.407 29.593 19 29.0909 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M29.0909 12H26.9091C26.407 12 26 12.407 26 12.9091V15.0909C26 15.593 26.407 16 26.9091 16H29.0909C29.593 16 30 15.593 30 15.0909V12.9091C30 12.407 29.593 12 29.0909 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M37.0909 12H34.9091C34.407 12 34 12.407 34 12.9091V15.0909C34 15.593 34.407 16 34.9091 16H37.0909C37.593 16 38 15.593 38 15.0909V12.9091C38 12.407 37.593 12 37.0909 12Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M20.8462 36L16 42H32L27.1538 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tv.js

/* harmony default export */ var Tv = (IconWrapper('tv', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 12H6C4.89543 12 4 12.8954 4 14V40C4 41.1046 4.89543 42 6 42H42C43.1046 42 44 41.1046 44 40V14C44 12.8954 43.1046 12 42 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 19H11V35H31V19Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4.5L23.0909 12L34 2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 25V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bus.js

/* harmony default export */ var icons_Bus = (IconWrapper('bus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(0.000000, -0.963812)"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6.0123992,34.9688383 L6.0123992,9 C6.0123992,7.8954305 6.9078297,7 8.0123992,7 L40,7 C41.1045695,7 42,7.8954305 42,9 L42,34.9688383 C42,36.6256925 40.6568542,37.9688383 39,37.9688383 L37.0048665,37.9688383 L37.0048665,38.9638122 C37.0048665,41.1729512 35.2140055,42.9638122 33.0048665,42.9638122 L33.0044775,42.9638122 C30.7953385,42.9638122 29.0044775,41.1729512 29.0044775,38.9638122 L29.0044775,37.9688383 L19.0079217,37.9688383 L19.0079217,38.9654529 C19.0079217,41.1736858 17.2177953,42.9638122 15.0095624,42.9638122 C12.8013295,42.9638122 11.011203,41.1736858 11.011203,38.9654529 L11.011203,37.9688383 L9.0123992,37.9688383 C7.35554495,37.9688383 6.0123992,36.6256925 6.0123992,34.9688383 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42,23.9638122 L6,23.9638122",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "x": "14",
      "y": "13.9638122",
      "width": "20",
      "height": "10"
    }
  }), h("path", {
    "attrs": {
      "d": "M14,30.9638122 L16,30.9638122",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32,30.9638122 L34,30.9638122",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Truck.js

/* harmony default export */ var Truck = (IconWrapper('truck', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 39C14.2091 39 16 37.2091 16 35C16 32.7909 14.2091 31 12 31C9.79086 31 8 32.7909 8 35C8 37.2091 9.79086 39 12 39Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 39C37.2091 39 39 37.2091 39 35C39 32.7909 37.2091 31 35 31C32.7909 31 31 32.7909 31 35C31 37.2091 32.7909 39 35 39Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 35H2V11H31V35H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 35V18H39.5714L46 26.5V35H39.8112",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Keyboard.js

/* harmony default export */ var Keyboard = (IconWrapper('keyboard', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 19C16.3807 19 17.5 17.8807 17.5 16.5C17.5 15.1193 16.3807 14 15 14C13.6193 14 12.5 15.1193 12.5 16.5C12.5 17.8807 13.6193 19 15 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 27C16.3807 27 17.5 25.8807 17.5 24.5C17.5 23.1193 16.3807 22 15 22C13.6193 22 12.5 23.1193 12.5 24.5C12.5 25.8807 13.6193 27 15 27Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 19C25.3807 19 26.5 17.8807 26.5 16.5C26.5 15.1193 25.3807 14 24 14C22.6193 14 21.5 15.1193 21.5 16.5C21.5 17.8807 22.6193 19 24 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 27C25.3807 27 26.5 25.8807 26.5 24.5C26.5 23.1193 25.3807 22 24 22C22.6193 22 21.5 23.1193 21.5 24.5C21.5 25.8807 22.6193 27 24 27Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33 19C34.3807 19 35.5 17.8807 35.5 16.5C35.5 15.1193 34.3807 14 33 14C31.6193 14 30.5 15.1193 30.5 16.5C30.5 17.8807 31.6193 19 33 19Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33 27C34.3807 27 35.5 25.8807 35.5 24.5C35.5 23.1193 34.3807 22 33 22C31.6193 22 30.5 23.1193 30.5 24.5C30.5 25.8807 31.6193 27 33 27Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 33H31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Calculator.js

/* harmony default export */ var Calculator = (IconWrapper('calculator', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.0005 4H8.00069C6.89614 4 6.00071 4.89541 6.00069 5.99996L6.00004 42C6.00002 43.1045 6.89546 44 8.00004 44H40.0005C41.1051 44 42.0005 43.1046 42.0005 42V6C42.0005 4.89543 41.1051 4 40.0005 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 10H13V19H35V10Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28L19 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 28L12 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 35H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 29H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bike.js

/* harmony default export */ var Bike = (IconWrapper('bike', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.5 42C15.1944 42 19 38.1944 19 33.5C19 28.8056 15.1944 25 10.5 25C5.80558 25 2 28.8056 2 33.5C2 38.1944 5.80558 42 10.5 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 42C41.9706 42 46 37.9706 46 33C46 28.0294 41.9706 24 37 24C32.0294 24 28 28.0294 28 33C28 37.9706 32.0294 42 37 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.9971 6H27.9976L37.0004 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M11.0576 33L31.6821 16.7632L11.0576 33Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M11.0576 33L31.6821 16.7632",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.6816 15H40.1537L41.9998 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 15.9737H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 16L18.2727 26.4211",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cpu.js

/* harmony default export */ var Cpu = (IconWrapper('cpu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 8H10C8.89543 8 8 8.89543 8 10V38C8 39.1046 8.89543 40 10 40H38C39.1046 40 40 39.1046 40 38V10C40 8.89543 39.1046 8 38 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 18H18V30H30V18Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14.9092 2V8V2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14.9092 2V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14.9092 40V46V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14.9092 40V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 2V8V2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 2V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 40V46V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 40V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33.0908 2V8V2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M33.0908 2V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33.0908 40V46V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M33.0908 40V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M2 14.9091H8H2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M2 14.9091H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M40 14.9091H46H40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 14.9091H46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M2 24H8H2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M2 24H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M40 24H46H40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 24H46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M2 33.0909H8H2Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M2 33.0909H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M40 33.0909H46H40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 33.0909H46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Router.js

/* harmony default export */ var Router = (IconWrapper('router', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 24L4 38H44L38 24H10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10 4V24V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 4V24V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38 4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 4V24V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 38V44H44V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Webcam.js

/* harmony default export */ var Webcam = (IconWrapper('webcam', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.82507 29.7655C11.4617 34.7564 17.352 38 24 38C30.648 38 36.5383 34.7564 40.1749 29.7655C43.7911 33.5077 46 38.5076 46 44H2C2 38.5076 4.20894 33.5077 7.82507 29.7655Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30C31.1797 30 37 24.1797 37 17C37 9.8203 31.1797 4 24 4C16.8203 4 11 9.8203 11 17C11 24.1797 16.8203 30 24 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 22C26.7614 22 29 19.7614 29 17C29 14.2386 26.7614 12 24 12C21.2386 12 19 14.2386 19 17C19 19.7614 21.2386 22 24 22Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VirtualRealityGlasses.js

/* harmony default export */ var VirtualRealityGlasses = (IconWrapper('virtual-reality-glasses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 16H43C43.5523 16 44 16.4477 44 17V39C44 39.5523 43.5523 40 43 40H30L24.0083 34.0013L18 40H5C4.44772 40 4 39.5523 4 39V17C4 16.4477 4.44772 16 5 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 32C16.2091 32 18 30.2091 18 28C18 25.7909 16.2091 24 14 24C11.7909 24 10 25.7909 10 28C10 30.2091 11.7909 32 14 32Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 32C36.2091 32 38 30.2091 38 28C38 25.7909 36.2091 24 34 24C31.7909 24 30 25.7909 30 28C30 30.2091 31.7909 32 34 32Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 10H42H6Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 10H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Speaker.js

/* harmony default export */ var Speaker = (IconWrapper('speaker', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 2H10C8.89543 2 8 2.89543 8 4V44C8 45.1046 8.89543 46 10 46H38C39.1046 46 40 45.1046 40 44V4C40 2.89543 39.1046 2 38 2Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38C27.3137 38 30 35.3137 30 32C30 28.6863 27.3137 26 24 26C20.6863 26 18 28.6863 18 32C18 35.3137 20.6863 38 24 38Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18C26.2091 18 28 16.2091 28 14C28 11.7909 26.2091 10 24 10C21.7909 10 20 11.7909 20 14C20 16.2091 21.7909 18 24 18Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pad.js

/* harmony default export */ var Pad = (IconWrapper('pad', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 4H6V31H42V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 31V44H6V31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 9H13C12.4477 9 12 9.44772 12 10V13C12 13.5523 12.4477 14 13 14H16C16.5523 14 17 13.5523 17 13V10C17 9.44772 16.5523 9 16 9Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 16H13C12.4477 16 12 16.4477 12 17V20C12 20.5523 12.4477 21 13 21H16C16.5523 21 17 20.5523 17 20V17C17 16.4477 16.5523 16 16 16Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M25.5 9H22.5C21.9477 9 21.5 9.44772 21.5 10V13C21.5 13.5523 21.9477 14 22.5 14H25.5C26.0523 14 26.5 13.5523 26.5 13V10C26.5 9.44772 26.0523 9 25.5 9Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M25.5 16H22.5C21.9477 16 21.5 16.4477 21.5 17V20C21.5 20.5523 21.9477 21 22.5 21H25.5C26.0523 21 26.5 20.5523 26.5 20V17C26.5 16.4477 26.0523 16 25.5 16Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M26.5 37.5C26.5 36.1193 25.3807 35 24 35C22.6193 35 21.5 36.1193 21.5 37.5C21.5 38.8807 22.6193 40 24 40C25.3807 40 26.5 38.8807 26.5 37.5Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M35 9H32C31.4477 9 31 9.44772 31 10V13C31 13.5523 31.4477 14 32 14H35C35.5523 14 36 13.5523 36 13V10C36 9.44772 35.5523 9 35 9Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Server.js

/* harmony default export */ var Server = (IconWrapper('server', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4H4V20H44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 28H4V44H44V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 10H11C10.4477 10 10 10.4477 10 11V13C10 13.5523 10.4477 14 11 14H13C13.5523 14 14 13.5523 14 13V11C14 10.4477 13.5523 10 13 10Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M13 34H11C10.4477 34 10 34.4477 10 35V37C10 37.5523 10.4477 38 11 38H13C13.5523 38 14 37.5523 14 37V35C14 34.4477 13.5523 34 13 34Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M21 10H19C18.4477 10 18 10.4477 18 11V13C18 13.5523 18.4477 14 19 14H21C21.5523 14 22 13.5523 22 13V11C22 10.4477 21.5523 10 21 10Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M21 34H19C18.4477 34 18 34.4477 18 35V37C18 37.5523 18.4477 38 19 38H21C21.5523 38 22 37.5523 22 37V35C22 34.4477 21.5523 34 21 34Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MonitorCamera.js

/* harmony default export */ var MonitorCamera = (IconWrapper('monitor-camera', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 34C32.2843 34 39 27.2843 39 19C39 10.7157 32.2843 4 24 4C15.7157 4 9 10.7157 9 19C9 27.2843 15.7157 34 24 34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 25C27.3137 25 30 22.3137 30 19C30 15.6863 27.3137 13 24 13C20.6863 13 18 15.6863 18 19C18 22.3137 20.6863 25 24 25Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.3686 34L16 44H32L28.6037 34H19.3686Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 44H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Printer.js

/* harmony default export */ var Printer = (IconWrapper('printer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 32H11V44H37V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 20H44V38H37.0173V32H10.9805V38H4V20Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 4H10V20H38V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Phone.js

/* harmony default export */ var Phone = (IconWrapper('phone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 30H40V42C40 43.1046 39.1046 44 38 44H10C8.89543 44 8 43.1046 8 42V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 30V6C40 4.89543 39.1046 4 38 4H10C8.89543 4 8 4.89543 8 6V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 37H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Car.js

/* harmony default export */ var Car = (IconWrapper('car', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13.5 32C14.8807 32 16 30.8807 16 29.5C16 28.1193 14.8807 27 13.5 27C12.1193 27 11 28.1193 11 29.5C11 30.8807 12.1193 32 13.5 32Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34.5 32C35.8807 32 37 30.8807 37 29.5C37 28.1193 35.8807 27 34.5 27C33.1193 27 32 28.1193 32 29.5C32 30.8807 33.1193 32 34.5 32Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M7 37C5.34315 37 4 35.6569 4 34L4 24.7097C4 22.4363 5.28486 20.3581 7.3186 19.3422L8.00053 19.0015L10.3105 9.09194C10.7326 7.28117 12.3467 6 14.206 6L33.8943 6C35.7675 6 37.3899 7.29998 37.7981 9.12816L40.0031 19.0015L40.6834 19.3416C42.716 20.358 44 22.4355 44 24.7081V34C44 35.6569 42.6569 37 41 37H39.0031V38C39.0031 40.2091 37.2107 42 35.0016 42C32.7924 42 31 40.2091 31 38V37H17V38.0003C17 40.2093 15.2093 42 13.0003 42C10.7913 42 9.00053 40.2093 9.00053 38.0003V37H7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 22H34L32.348 14.5661C32.1447 13.6511 31.3331 13 30.3957 13L17.6043 13C16.6669 13 15.8553 13.6511 15.652 14.5661L14 22Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HuntingGear.js

/* harmony default export */ var HuntingGear = (IconWrapper('hunting-gear', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 29H4V42H44V29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28.9998L9.03837 4.99902H39.0205L44 28.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 12C16.2386 12 14 14.2386 14 17C14 19.7614 16.2386 22 19 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29 22C31.7614 22 34 19.7614 34 17C34 14.2386 31.7614 12 29 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20 17H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CloudStorage.js

/* harmony default export */ var CloudStorage = (IconWrapper('cloud-storage', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 29H4V42H44V29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.5 38C36.8807 38 38 36.8807 38 35.5C38 34.1193 36.8807 33 35.5 33C34.1193 33 33 34.1193 33 35.5C33 36.8807 34.1193 38 35.5 38Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28.9998L9.03837 4.99902H39.0205L44 28.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.006 16.0259C16.8635 16.0259 15 17.5124 15 19.5128C15 21.9998 17.0947 22.9998 19.6973 22.9998C20.1437 22.9998 20.5567 22.9998 20.9768 22.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.007 16.0259C31.1039 16.0259 33 16.9994 33 19.5128C33 21.9998 30.8902 22.9998 28.2877 22.9998C27.8412 22.9998 27.4013 22.9998 26.9871 22.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.0069 16.0261C29.0069 13.0423 27.0231 11 23.9998 11C20.9766 11 19.0059 12.9927 19.0059 16.0261",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 23H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HardDisk.js

/* harmony default export */ var HardDisk = (IconWrapper('hard-disk', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 29H4V42H44V29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.5 38C36.8807 38 38 36.8807 38 35.5C38 34.1193 36.8807 33 35.5 33C34.1193 33 33 34.1193 33 35.5C33 36.8807 34.1193 38 35.5 38Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28.9998L9.03837 4.99902H39.0205L44 28.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SolidStateDisk.js

/* harmony default export */ var SolidStateDisk = (IconWrapper('solid-state-disk', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 29H4V42H44V29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.5 38C36.8807 38 38 36.8807 38 35.5C38 34.1193 36.8807 33 35.5 33C34.1193 33 33 34.1193 33 35.5C33 36.8807 34.1193 38 35.5 38Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28.9998L9.03837 4.99902H39.0205L44 28.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 35.5H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SdCard.js

/* harmony default export */ var SdCard = (IconWrapper('sd-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 12V44H40V4H14L8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 15V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MiniSdCard.js

/* harmony default export */ var MiniSdCard = (IconWrapper('mini-sd-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13.9979 18.7386L8 21.9228V44H40V4H13.9979V18.7386Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27 12V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VrGlasses.js

/* harmony default export */ var VrGlasses = (IconWrapper('vr-glasses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M2 12H46V36H30L24 30L18 36H2V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 28C15.2091 28 17 26.2091 17 24C17 21.7909 15.2091 20 13 20C10.7909 20 9 21.7909 9 24C9 26.2091 10.7909 28 13 28Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M35 28C37.2091 28 39 26.2091 39 24C39 21.7909 37.2091 20 35 20C32.7909 20 31 21.7909 31 24C31 26.2091 32.7909 28 35 28Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EmotionHappy.js

/* harmony default export */ var EmotionHappy = (IconWrapper('emotion-happy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EmotionUnhappy.js

/* harmony default export */ var EmotionUnhappy = (IconWrapper('emotion-unhappy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 30.9999C31 30.9999 29 26.9999 24 26.9999C19 26.9999 17 30.9999 17 30.9999",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WorriedFace.js

/* harmony default export */ var WorriedFace = (IconWrapper('worried-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 30.9999C31 30.9999 29 26.9999 24 26.9999C19 26.9999 17 30.9999 17 30.9999",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WinkingFace.js

/* harmony default export */ var WinkingFace = (IconWrapper('winking-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 20H29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConfoundedFace.js

/* harmony default export */ var ConfoundedFace = (IconWrapper('confounded-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 17L29 20L32 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 17L19 20L16 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 31L18 34L21 31L24 34L27 31L30 34L33 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlightlyFrowningFaceWhitOpenMouth.js

/* harmony default export */ var SlightlyFrowningFaceWhitOpenMouth = (IconWrapper('slightly-frowning-face-whit-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrinningFaceWithTightlyClosedEyes.js

/* harmony default export */ var GrinningFaceWithTightlyClosedEyes = (IconWrapper('grinning-face-with-tightly-closed-eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 31C17 31 19 35 24 35C29 35 31 31 31 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 16L19 19L16 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 16L29 19L32 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NeutralFace.js

/* harmony default export */ var NeutralFace = (IconWrapper('neutral-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 31H31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoudlyCryingFace.js

/* harmony default export */ var LoudlyCryingFace = (IconWrapper('loudly-crying-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 35C31 35 29 31 24 31C19 31 17 35 17 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 18L28 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 17L13 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 18V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DistraughtFace.js

/* harmony default export */ var DistraughtFace = (IconWrapper('distraught-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 17L29 20L32 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 17L19 20L16 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WearyFace.js

/* harmony default export */ var WearyFace = (IconWrapper('weary-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18L15 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 18L33 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PoutingFace.js

/* harmony default export */ var PoutingFace = (IconWrapper('pouting-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18L29 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 18L19 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrinningFace.js

/* harmony default export */ var GrinningFace = (IconWrapper('grinning-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C29 35 31 31 31 31H17C17 31 19 35 24 35Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AngryFace.js

/* harmony default export */ var AngryFace = (IconWrapper('angry-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 35C31 35 29 31 24 31C19 31 17 35 17 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 19L29 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 19L19 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpsideDownFace.js

/* harmony default export */ var UpsideDownFace = (IconWrapper('upside-down-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L17 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 30L31 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 17C17 17 19 13 24 13C29 13 31 17 31 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoudlyCryingFaceWhitOpenMouth.js

/* harmony default export */ var LoudlyCryingFaceWhitOpenMouth = (IconWrapper('loudly-crying-face-whit-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 18L28 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 17L13 18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 18V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlyFaceWhitSmile.js

/* harmony default export */ var SlyFaceWhitSmile = (IconWrapper('sly-face-whit-smile', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 21L30 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 19L15 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrinningFaceWithSquintingEyes.js

/* harmony default export */ var GrinningFaceWithSquintingEyes = (IconWrapper('grinning-face-with-squinting-eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C29 35 31 31 31 31H17C17 31 19 35 24 35Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 21C21 21 20 17 17 17C14 17 13 21 13 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 21C35 21 34 17 31 17C28 17 27 21 27 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DisappointedFace.js

/* harmony default export */ var DisappointedFace = (IconWrapper('disappointed-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 25L29 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 23L14 25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 35C31 35 29 31 24 31C19 31 17 35 17 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AstonishedFace.js

/* harmony default export */ var AstonishedFace = (IconWrapper('astonished-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "24",
      "width": "8",
      "height": "12",
      "rx": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlightlySmilingFace.js

/* harmony default export */ var SlightlySmilingFace = (IconWrapper('slightly-smiling-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrinningFaceWithTightlyClosedEyesOpenMouth.js

/* harmony default export */ var GrinningFaceWithTightlyClosedEyesOpenMouth = (IconWrapper('grinning-face-with-tightly-closed-eyes-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C29 35 31 31 31 31H17C17 31 19 35 24 35Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 17L29 20L32 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 17L19 20L16 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExpressionlessFace.js

/* harmony default export */ var ExpressionlessFace = (IconWrapper('expressionless-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 19H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 31L32 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrinningFaceWithOpenMouth.js

/* harmony default export */ var GrinningFaceWithOpenMouth = (IconWrapper('grinning-face-with-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C29 35 31 31 31 31H17C17 31 19 35 24 35Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WinkingFaceWithOpenEyes.js

/* harmony default export */ var WinkingFaceWithOpenEyes = (IconWrapper('winking-face-with-open-eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 16L29 20L33 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "20",
      "r": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FrowningFaceWhitOpenMouth.js

/* harmony default export */ var FrowningFaceWhitOpenMouth = (IconWrapper('frowning-face-whit-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C29 29 31 33 31 33H17C17 33 19 29 24 29Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SurprisedFaceWithOpenBigMouth.js

/* harmony default export */ var SurprisedFaceWithOpenBigMouth = (IconWrapper('surprised-face-with-open-big-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "24",
      "width": "12",
      "height": "12",
      "rx": "6",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FaceWithSmilingOpenEyes.js

/* harmony default export */ var FaceWithSmilingOpenEyes = (IconWrapper('face-with-smiling-open-eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "20",
      "r": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "20",
      "r": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SmilingFaceWithSquintingEyes.js

/* harmony default export */ var SmilingFaceWithSquintingEyes = (IconWrapper('smiling-face-with-squinting-eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 21C21 21 20 17 17 17C14 17 13 21 13 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 21C35 21 34 17 31 17C28 17 27 21 27 21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FaceWithoutMouth.js

/* harmony default export */ var FaceWithoutMouth = (IconWrapper('face-without-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RelievedFace.js

/* harmony default export */ var RelievedFace = (IconWrapper('relieved-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 19C20 19 19 21 17 21C15 21 14 19 14 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 19C34 19 33 21 31 21C29 21 28 19 28 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DizzyFace.js

/* harmony default export */ var DizzyFace = (IconWrapper('dizzy-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18L15 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 18L19 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18L29 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 18L33 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "28",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SurprisedFaceWithOpenMouth.js

/* harmony default export */ var SurprisedFaceWithOpenMouth = (IconWrapper('surprised-face-with-open-mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "28",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AnguishedFace.js

/* harmony default export */ var AnguishedFace = (IconWrapper('anguished-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "28",
      "width": "12",
      "height": "8",
      "rx": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SmilingFace.js

/* harmony default export */ var SmilingFace = (IconWrapper('smiling-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C31 31 29 35 24 35C19 35 17 31 17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConfusedFace.js

/* harmony default export */ var ConfusedFace = (IconWrapper('confused-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GrimacingFace.js

/* harmony default export */ var GrimacingFace = (IconWrapper('grimacing-face', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "15",
      "y": "28",
      "width": "18",
      "height": "8",
      "rx": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AdProduct.js

/* harmony default export */ var AdProduct = (IconWrapper('ad-product', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 14L3.10557 12.2111C2.428 12.5499 2 13.2425 2 14H4ZM24 4L24.8944 2.21115C24.3314 1.92962 23.6686 1.92962 23.1056 2.21115L24 4ZM44 14H46C46 13.2425 45.572 12.5499 44.8944 12.2111L44 14ZM44 34L44.8944 35.7889C45.572 35.4501 46 34.7575 46 34H44ZM24 44L23.1056 45.7889C23.6686 46.0704 24.3314 46.0704 24.8944 45.7889L24 44ZM4 34H2C2 34.7575 2.428 35.4501 3.10557 35.7889L4 34ZM4.89443 15.7889L24.8944 5.78885L23.1056 2.21115L3.10557 12.2111L4.89443 15.7889ZM42 14V34H46V14H42ZM43.1056 32.2111L23.1056 42.2111L24.8944 45.7889L44.8944 35.7889L43.1056 32.2111ZM24.8944 42.2111L4.89443 32.2111L3.10557 35.7889L23.1056 45.7889L24.8944 42.2111ZM6 34V14H2V34H6ZM44.8944 12.2111L24.8944 2.21115L23.1056 5.78885L43.1056 15.7889L44.8944 12.2111Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14L24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 24V44V24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 14L24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.8944 10.7889C35.8824 10.2949 36.2828 9.09353 35.7889 8.10557C35.2949 7.11762 34.0935 6.71717 33.1056 7.21115L34.8944 10.7889ZM13.1056 17.2111C12.1176 17.7051 11.7172 18.9065 12.2111 19.8944C12.7051 20.8824 13.9065 21.2828 14.8944 20.7889L13.1056 17.2111ZM33.1056 7.21115L13.1056 17.2111L14.8944 20.7889L34.8944 10.7889L33.1056 7.21115Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TableReport.js

/* harmony default export */ var TableReport = (IconWrapper('table-report', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 7C5 5.34315 6.34315 4 8 4H32C33.6569 4 35 5.34315 35 7V44H8C6.34315 44 5 42.6569 5 41V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 24C35 22.8954 35.8954 22 37 22H41C42.1046 22 43 22.8954 43 24V41C43 42.6569 41.6569 44 40 44H35V24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 12H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 19H23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ApplicationOne.js

/* harmony default export */ var ApplicationOne = (IconWrapper('application-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 13.9997L24 4L7 13.9997L7 33.9998L24 44L41 33.9998V13.9997Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 18.9974L23.9932 24L31.9951 18.9974",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SalesReport.js

/* harmony default export */ var SalesReport = (IconWrapper('sales-report', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 13.9997L24 4L7 13.9997L7 33.9998L24 44L41 33.9998V13.9997Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 22V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 26V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ApiApp.js

/* harmony default export */ var ApiApp = (IconWrapper('api-app', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 23.9372V10C18 6.68629 20.6863 4 24 4C27.3137 4 30 6.68629 30 10V12.0057",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 24.0035V38C30 41.3137 27.3137 44 24 44C20.6863 44 18 41.3137 18 38V35.97",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30H9.98415C6.67919 30 4 27.3137 4 24C4 20.6863 6.67919 18 9.98415 18H11.9886",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18H37.9888C41.3087 18 44 20.6863 44 24C44 27.3137 41.3087 30 37.9888 30H36.0663",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SmartOptimization.js

/* harmony default export */ var SmartOptimization = (IconWrapper('smart-optimization', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24.0002 45C27.2208 45 32.7275 40.8 32.7275 24C32.7275 7.2 27.2208 3 24.0002 3C20.7797 3 15.2729 7.48302 15.2729 24C15.2729 40.517 20.7797 45 24.0002 45Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M5.105 35C6.7153 37.8123 13.2477 40.421 28.3638 31.621C43.4798 22.821 44.5055 15.8123 42.8952 13C41.2849 10.1877 34.4979 7.72722 19.6365 16.379C4.77506 25.0307 3.49474 32.1877 5.105 35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M5.10489 13C3.49463 15.8123 4.52029 22.821 19.6364 31.621C34.7525 40.421 41.2848 37.8123 42.8951 35C44.5054 32.1877 43.2251 25.0307 28.3636 16.379C13.5022 7.72722 6.7152 10.1877 5.10489 13Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RectangularCircularConnection.js

/* harmony default export */ var RectangularCircularConnection = (IconWrapper('rectangular-circular-connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 19C15.3137 19 18 16.3137 18 13C18 9.68629 15.3137 7 12 7C8.68629 7 6 9.68629 6 13C6 16.3137 8.68629 19 12 19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "7",
      "y": "31",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25.68 13H42V36H25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RectangularCircularSeparation.js

/* harmony default export */ var RectangularCircularSeparation = (IconWrapper('rectangular-circular-separation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 19C15.3137 19 18 16.3137 18 13C18 9.68629 15.3137 7 12 7C8.68629 7 6 9.68629 6 13C6 16.3137 8.68629 19 12 19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "32",
      "y": "31",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 25H44H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 25H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StereoNesting.js

/* harmony default export */ var StereoNesting = (IconWrapper('stereo-nesting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 40L4 33V17L17 10L30 17V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 8L43 15V31L30 38L17 31L17 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircleFiveLine.js

/* harmony default export */ var CircleFiveLine = (IconWrapper('circle-five-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 12C42.2091 12 44 10.2091 44 8C44 5.79086 42.2091 4 40 4C37.7909 4 36 5.79086 36 8C36 10.2091 37.7909 12 40 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 44C42.2091 44 44 42.2091 44 40C44 37.7909 42.2091 36 40 36C37.7909 36 36 37.7909 36 40C36 42.2091 37.7909 44 40 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44C10.2091 44 12 42.2091 12 40C12 37.7909 10.2091 36 8 36C5.79086 36 4 37.7909 4 40C4 42.2091 5.79086 44 8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 40H28H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 40H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 8H28H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 8H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 20V28V20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M8 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M40 20V28V20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CrossRingTwo.js

/* harmony default export */ var CrossRingTwo = (IconWrapper('cross-ring-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.4545 26.4444C17.6364 28.2222 15.8182 30 12.1818 30C8.54545 30 4 27.3333 4 22C4 16.6667 8.54545 14 12.1818 14C17.6364 14 20.3636 17.5556 24 22C27.6364 26.4444 30.3636 30 35.8182 30C39.4545 30 44 27.3333 44 22C44 16.6667 39.4545 14 35.8182 14C32.1818 14 29.4545 16.6667 28.5455 17.5556",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircleFourLine.js

/* harmony default export */ var CircleFourLine = (IconWrapper('circle-four-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 12C42.2091 12 44 10.2091 44 8C44 5.79086 42.2091 4 40 4C37.7909 4 36 5.79086 36 8C36 10.2091 37.7909 12 40 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 44C42.2091 44 44 42.2091 44 40C44 37.7909 42.2091 36 40 36C37.7909 36 36 37.7909 36 40C36 42.2091 37.7909 44 40 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44C10.2091 44 12 42.2091 12 40C12 37.7909 10.2091 36 8 36C5.79086 36 4 37.7909 4 40C4 42.2091 5.79086 44 8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 8H28H20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 8H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32 16L16 32L32 16Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M32 16L16 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M40 20V28V20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircleTwoLine.js

/* harmony default export */ var CircleTwoLine = (IconWrapper('circle-two-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 12C42.2091 12 44 10.2091 44 8C44 5.79086 42.2091 4 40 4C37.7909 4 36 5.79086 36 8C36 10.2091 37.7909 12 40 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44C10.2091 44 12 42.2091 12 40C12 37.7909 10.2091 36 8 36C5.79086 36 4 37.7909 4 40C4 42.2091 5.79086 44 8 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 20V40H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 28V8H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Badge.js

/* harmony default export */ var Badge = (IconWrapper('badge', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 22V40H8V10H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "10",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SymbolDoubleX.js

/* harmony default export */ var SymbolDoubleX = (IconWrapper('symbol-double-x', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 4L24 18L38 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44L24 30L38 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43 10L29 24L43 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10L18 24L4 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiRectangle.js

/* harmony default export */ var MultiRectangle = (IconWrapper('multi-rectangle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 39H44V7H12V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 39H32V15H8V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "23",
      "width": "16",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiCircular.js

/* harmony default export */ var MultiCircular = (IconWrapper('multi-circular', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C31.732 44 38 37.732 38 30C38 22.268 31.732 16 24 16C16.268 16 10 22.268 10 30C10 37.732 16.268 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C28.4183 44 32 40.4183 32 36C32 31.5817 28.4183 28 24 28C19.5817 28 16 31.5817 16 36C16 40.4183 19.5817 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GraphicDesignTwo.js

/* harmony default export */ var GraphicDesignTwo = (IconWrapper('graphic-design-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.6496 28.2381C12.221 25.6863 10 21.6025 10 17C10 9.26801 16.268 3 24 3C31.732 3 38 9.26801 38 17C38 21.5352 35.8435 25.5668 32.5 28.1252",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 17L44 44H4L24 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GraphicDesign.js

/* harmony default export */ var GraphicDesign = (IconWrapper('graphic-design', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 32C11.268 32 5 25.732 5 18C5 10.268 11.268 4 19 4C26.732 4 33 10.268 33 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "18",
      "width": "26",
      "height": "26",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircleFour.js

/* harmony default export */ var CircleFour = (IconWrapper('circle-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 10C25.6569 10 27 8.65685 27 7C27 5.34315 25.6569 4 24 4C22.3431 4 21 5.34315 21 7C21 8.65685 22.3431 10 24 10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C25.6569 44 27 42.6569 27 41C27 39.3431 25.6569 38 24 38C22.3431 38 21 39.3431 21 41C21 42.6569 22.3431 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M7 27C8.65685 27 10 25.6569 10 24C10 22.3431 8.65685 21 7 21C5.34315 21 4 22.3431 4 24C4 25.6569 5.34315 27 7 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M41 27C42.6569 27 44 25.6569 44 24C44 22.3431 42.6569 21 41 21C39.3431 21 38 22.3431 38 24C38 25.6569 39.3431 27 41 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.1969 15.7437C27.2874 15.7437 30.0141 14.186 31.6346 11.8129C33.5162 12.9387 35.1205 14.4803 36.3205 16.3108C33.7298 17.8909 32.0002 20.7435 32.0002 24C32.0002 27.3428 33.8226 30.2599 36.528 31.812C35.4049 33.6293 33.8903 35.1792 32.102 36.344C30.5754 33.5471 27.6077 31.6498 24.1969 31.6498C20.7969 31.6498 17.8373 33.5351 16.3064 36.3174C14.4779 35.1177 12.9379 33.5145 11.813 31.6344C14.1861 30.0139 15.7438 27.2872 15.7438 24.1968C15.7438 21.1165 14.1964 18.3976 11.8365 16.7752C13.0547 14.7536 14.7538 13.0546 16.7753 11.8364C18.3977 14.1963 21.1166 15.7437 24.1969 15.7437Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircleThree.js

/* harmony default export */ var CircleThree = (IconWrapper('circle-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.9037 13.9271C31.2464 17.1587 27.8814 19.3701 24 19.3701C20.1185 19.3701 16.7536 17.1587 15.0963 13.9271C11.3982 16.659 9 21.0494 9 26C9 26.8177 9.06543 27.6201 9.19135 28.4023C9.45807 28.381 9.72775 28.3701 9.99996 28.3701C15.5228 28.3701 20 32.8473 20 38.3701C20 39.0664 19.9288 39.746 19.7934 40.4021C21.128 40.7913 22.5397 41 24 41C25.4603 41 26.8719 40.7913 28.2066 40.4021C28.0711 39.746 28 39.0664 28 38.3701C28 32.8473 32.4771 28.3701 38 28.3701C38.2722 28.3701 38.5419 28.381 38.8087 28.4023C38.9346 27.6201 39 26.8177 39 26C39 21.0494 36.6017 16.659 32.9037 13.9271Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 13C26.2091 13 28 11.2091 28 9C28 6.79086 26.2091 5 24 5C21.7909 5 20 6.79086 20 9C20 11.2091 21.7909 13 24 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M9 43C11.2091 43 13 41.2091 13 39C13 36.7909 11.2091 35 9 35C6.79086 35 5 36.7909 5 39C5 41.2091 6.79086 43 9 43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M39 43C41.2091 43 43 41.2091 43 39C43 36.7909 41.2091 35 39 35C36.7909 35 35 36.7909 35 39C35 41.2091 36.7909 43 39 43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoSemicircles.js

/* harmony default export */ var TwoSemicircles = (IconWrapper('two-semicircles', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 25C44 13.9543 35.0457 5 24 5C12.9543 5 4 13.9543 4 25H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14 32C14 37.5228 18.4772 42 24 42C29.5228 42 34 37.5228 34 32H14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RectangleX.js

/* harmony default export */ var RectangleX = (IconWrapper('rectangle-x', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4L4 24L24 44L44 24L24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4L4 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4L44 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TreasureChest.js

/* harmony default export */ var TreasureChest = (IconWrapper('treasure-chest', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C27.866 31 31 27.866 31 24C31 20.134 27.866 17 24 17C20.134 17 17 20.134 17 24C17 27.866 20.134 31 24 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GraphicStitching.js

/* harmony default export */ var GraphicStitching = (IconWrapper('graphic-stitching', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 24L34 14C34 8.47715 29.5228 4 24 4C18.4772 4 14 8.47715 14 14L24 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14 34L24 24L14 14C8.47715 14 4 18.4772 4 24C4 29.5228 8.47715 34 14 34Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34 34C39.5228 34 44 29.5228 44 24C44 18.4772 39.5228 14 34 14L24 24L34 34Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C29.5228 44 34 39.5228 34 34L24 24L14 34C14 39.5228 18.4772 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Symmetry.js

/* harmony default export */ var Symmetry = (IconWrapper('symmetry', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 15L24 9V39L4 33V15Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 9L44 15V33L24 39V9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CirclesSeven.js

/* harmony default export */ var CirclesSeven = (IconWrapper('circles-seven', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 12C26.2091 12 28 10.2091 28 8C28 5.79086 26.2091 4 24 4C21.7909 4 20 5.79086 20 8C20 10.2091 21.7909 12 24 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34.3926 18C35.4972 19.9132 37.9435 20.5687 39.8567 19.4641C41.7699 18.3595 42.4254 15.9132 41.3208 14C40.2162 12.0868 37.7699 11.4313 35.8567 12.5359C33.9435 13.6405 33.288 16.0868 34.3926 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34.3926 30C33.288 31.9132 33.9435 34.3595 35.8567 35.4641C37.7699 36.5687 40.2162 35.9132 41.3208 34C42.4254 32.0868 41.7699 29.6405 39.8567 28.5359C37.9435 27.4313 35.4972 28.0868 34.3926 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 36C21.7909 36 20 37.7909 20 40C20 42.2091 21.7909 44 24 44C26.2091 44 28 42.2091 28 40C28 37.7909 26.2091 36 24 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13.6079 30C12.5033 28.0868 10.057 27.4313 8.14379 28.5359C6.23062 29.6405 5.57512 32.0868 6.67969 34C7.78426 35.9132 10.2306 36.5687 12.1438 35.4641C14.057 34.3595 14.7125 31.9132 13.6079 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13.6079 18C14.7125 16.0868 14.057 13.6405 12.1438 12.5359C10.2306 11.4313 7.78426 12.0868 6.67969 14C5.57512 15.9132 6.23062 18.3595 8.14379 19.4641C10.057 20.5687 12.5033 19.9132 13.6079 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Association.js

/* harmony default export */ var Association = (IconWrapper('association', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 34H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39L21 5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 39L27 5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiRing.js

/* harmony default export */ var MultiRing = (IconWrapper('multi-ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 10C30 6.68629 27.3137 4 24 4C20.6863 4 18 6.68629 18 10V24C18 27.3137 20.6863 30 24 30C27.3137 30 30 27.3137 30 24V10Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 18.3431C40.4852 16 40.4852 12.201 38.1421 9.85786C35.7989 7.51471 31.9999 7.51471 29.6568 9.85786L19.7573 19.7574C17.4141 22.1005 17.4141 25.8995 19.7573 28.2426C22.1004 30.5858 25.8994 30.5858 28.2426 28.2426L38.1421 18.3431Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 30C41.3137 30 44 27.3137 44 24C44 20.6863 41.3137 18 38 18H24C20.6863 18 18 20.6863 18 24C18 27.3137 20.6863 30 24 30H38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.6568 38.1421C32 40.4853 35.799 40.4853 38.1421 38.1421C40.4853 35.799 40.4853 32 38.1421 29.6568L28.2426 19.7574C25.8995 17.4142 22.1005 17.4142 19.7573 19.7574C17.4142 22.1005 17.4142 25.8995 19.7573 28.2426L29.6568 38.1421Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 38C18 41.3137 20.6863 44 24 44C27.3137 44 30 41.3137 30 38L30 24C30 20.6863 27.3137 18 24 18C20.6863 18 18 20.6863 18 24V38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85795 29.6569C7.5148 32 7.5148 35.799 9.85795 38.1421C12.2011 40.4853 16.0001 40.4853 18.3432 38.1421L28.2427 28.2426C30.5859 25.8995 30.5859 22.1005 28.2427 19.7574C25.8996 17.4142 22.1006 17.4142 19.7574 19.7574L9.85795 29.6569Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 18C6.68629 18 4 20.6863 4 24C4 27.3137 6.68629 30 10 30L24 30C27.3137 30 30 27.3137 30 24C30 20.6863 27.3137 18 24 18L10 18Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3432 9.85787C16 7.51472 12.201 7.51472 9.85787 9.85787C7.51473 12.201 7.51473 16 9.85788 18.3432L19.7574 28.2426C22.1005 30.5858 25.8995 30.5858 28.2426 28.2426C30.5858 25.8995 30.5858 22.1005 28.2427 19.7574L18.3432 9.85787Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GeometricFlowers.js

/* harmony default export */ var GeometricFlowers = (IconWrapper('geometric-flowers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 49 50",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "17.6777",
      "cy": "17.6777",
      "rx": "9",
      "ry": "16",
      "transform": "rotate(-45 17.6777 17.6777)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "rx": "9",
      "ry": "16",
      "transform": "matrix(0.707107 0.707107 0.707107 -0.707107 17.6777 31.3783)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "rx": "9",
      "ry": "16",
      "transform": "matrix(-0.707107 -0.707107 -0.707107 0.707107 31.3223 17.6777)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "31.3223",
      "cy": "31.3783",
      "rx": "9",
      "ry": "16",
      "transform": "rotate(135 31.3223 31.3783)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AppSwitch.js

/* harmony default export */ var AppSwitch = (IconWrapper('app-switch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "14",
      "y": "4",
      "width": "20",
      "height": "40",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "34",
      "y": "8",
      "width": "10",
      "height": "32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "10",
      "height": "32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GraphicStitchingThree.js

/* harmony default export */ var GraphicStitchingThree = (IconWrapper('graphic-stitching-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "9",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "39",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "19",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "34",
      "y": "19",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 9H9V19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 39H9V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 9H40V19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 39H39V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GraphicStitchingFour.js

/* harmony default export */ var GraphicStitchingFour = (IconWrapper('graphic-stitching-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "39",
      "cy": "9",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "9",
      "cy": "39",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "34",
      "y": "34",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 9H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 39H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 34L9 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 34L39 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Refraction.js

/* harmony default export */ var Refraction = (IconWrapper('refraction', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 9L40.4545 37.5H7.54552L24 9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 9L40.4545 37.5H7.54552L24 9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 22L19.5 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 16L44 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 19.5L44 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.7002 24L44.0002 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Halo.js

/* harmony default export */ var Halo = (IconWrapper('halo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "6 6"
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "1 6"
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InclusiveGateway.js

/* harmony default export */ var InclusiveGateway = (IconWrapper('inclusive-gateway', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.799 4.20101L4.41421 22.5858C3.63317 23.3668 3.63316 24.6332 4.41421 25.4142L22.799 43.799C23.58 44.58 24.8464 44.58 25.6274 43.799L44.0122 25.4142C44.7932 24.6332 44.7932 23.3668 44.0122 22.5858L25.6274 4.20101C24.8464 3.41996 23.58 3.41996 22.799 4.20101Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.4183 32 32 28.4183 32 24C32 19.5817 28.4183 16 24 16C19.5817 16 16 19.5817 16 24C16 28.4183 19.5817 32 24 32Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ExclusiveGateway.js

/* harmony default export */ var ExclusiveGateway = (IconWrapper('exclusive-gateway', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.799 4.20101L4.41421 22.5858C3.63317 23.3668 3.63316 24.6332 4.41421 25.4142L22.799 43.799C23.58 44.58 24.8464 44.58 25.6274 43.799L44.0122 25.4142C44.7932 24.6332 44.7932 23.3668 44.0122 22.5858L25.6274 4.20101C24.8464 3.41996 23.58 3.41996 22.799 4.20101Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.043 29.9872L30.0427 18.025",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0525 18.0155L30.0335 29.9964",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ParallelGateway.js

/* harmony default export */ var ParallelGateway = (IconWrapper('parallel-gateway', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.799 4.20101L4.41421 22.5858C3.63317 23.3668 3.63316 24.6332 4.41421 25.4142L22.799 43.799C23.58 44.58 24.8464 44.58 25.6274 43.799L44.0122 25.4142C44.7932 24.6332 44.7932 23.3668 44.0122 22.5858L25.6274 4.20101C24.8464 3.41996 23.58 3.41996 22.799 4.20101Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0429 15.534L24.0429 32.4776",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.5714 24.0057L32.515 24.0057",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConvergingGateway.js

/* harmony default export */ var ConvergingGateway = (IconWrapper('converging-gateway', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.799 4.20101L4.41421 22.5858C3.63317 23.3668 3.63316 24.6332 4.41421 25.4142L22.799 43.799C23.58 44.58 24.8464 44.58 25.6274 43.799L44.0122 25.4142C44.7932 24.6332 44.7932 23.3668 44.0122 22.5858L25.6274 4.20101C24.8464 3.41996 23.58 3.41996 22.799 4.20101Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0429 15.5342L24.0429 32.4778",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.5714 24.0059L32.515 24.0059",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30.0335 18.0153L18.0526 29.9963",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0525 18.0153L30.0335 29.9962",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Whirlwind.js

/* harmony default export */ var Whirlwind = (IconWrapper('whirlwind', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.5 44C16.5964 44 11 38.4036 11 31.5C11 24.5964 16.5964 19 23.5 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 23.5C44 30.4036 38.4036 36 31.5 36C24.5964 36 19 30.4036 19 23.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.5 29C30.4036 29 36 23.4036 36 16.5C36 9.59644 30.4036 4 23.5 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 23.5C29 16.5964 23.4036 11 16.5 11C9.59644 11 4 16.5964 4 23.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpdateRotation.js

/* harmony default export */ var UpdateRotation = (IconWrapper('update-rotation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.5424 15V21C32.2681 16.9429 28.4778 14 24.0002 14C19.5226 14 15.7323 16.9429 14.458 21M33.5424 27C32.2681 31.0571 28.4778 34 24.0002 34C19.5226 34 15.7323 31.0571 14.458 27V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoTriangles.js

/* harmony default export */ var TwoTriangles = (IconWrapper('two-triangles', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0002 4L41.3207 34H6.67969L24.0002 4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 44L41.3207 14H6.67969L24.0002 44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 4L41.3207 34H6.67969L24.0002 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 44L41.3207 14H6.67969L24.0002 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThreeSlashes.js

/* harmony default export */ var ThreeSlashes = (IconWrapper('three-slashes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 10L42 4V11L6 17V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24L42 18V25L6 31V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 38L42 32V39L6 45V38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoEllipses.js

/* harmony default export */ var TwoEllipses = (IconWrapper('two-ellipses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.579 7.34871C44.3436 11.1133 39.9566 21.6041 30.7803 30.7804C21.604 39.9567 11.1133 44.3437 7.34863 40.5791C3.58399 36.8144 7.97101 26.3237 17.1473 17.1474C26.3236 7.97109 36.8143 3.58407 40.579 7.34871Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.48532 7.34871C3.72068 11.1133 8.1077 21.6041 17.284 30.7804C26.4603 39.9567 36.951 44.3437 40.7157 40.5791C44.4803 36.8144 40.0933 26.3237 30.917 17.1474C21.7407 7.97109 11.25 3.58407 7.48532 7.34871Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThreeHexagons.js

/* harmony default export */ var ThreeHexagons = (IconWrapper('three-hexagons', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 9L24 3L34 9V21L24 27L14 21V9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 27L14 21L24 27V39L14 45L4 39V27Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27L34 21L44 27V39L34 45L24 39V27Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 21V9L24 3L34 9V21M14 21L24 27M14 21L4 27V39L14 45L24 39M24 27L34 21M24 27V39M34 21L44 27V39L34 45L24 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Texture.js

/* harmony default export */ var Texture = (IconWrapper('texture', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 6L6 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 36L36 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 6L6 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6L6 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 16L16 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 26L26 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwitchContrast.js

/* harmony default export */ var SwitchContrast = (IconWrapper('switch-contrast', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 10H40C41.8856 10 42.8284 10 43.4142 10.5858C44 11.1716 44 12.1144 44 14V34C44 35.8856 44 36.8284 43.4142 37.4142C42.8284 38 41.8856 38 40 38H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 10H8C6.11438 10 5.17157 10 4.58579 10.5858C4 11.1716 4 12.1144 4 14V34C4 35.8856 4 36.8284 4.58579 37.4142C5.17157 38 6.11438 38 8 38H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TextureTwo.js

/* harmony default export */ var TextureTwo = (IconWrapper('texture-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 12V20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 28V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 12V20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 12H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 28V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SplitBranch.js

/* harmony default export */ var SplitBranch = (IconWrapper('split-branch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 44V4H24V17L33 26V44H44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4V44H25V30L16 21V4H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44V4H24V17L33 26V44H44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4V44H25V30L16 21V4H4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ProcessLine.js

/* harmony default export */ var ProcessLine = (IconWrapper('process-line', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8H11L19 16H44M22 40H27L35 32H44M4 40H14M4 24H6M4 32H24L32 24H44M4 16H8L16 24H22M22 8L44 8M37 40H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OneThirdRotation.js

/* harmony default export */ var OneThirdRotation = (IconWrapper('one-third-rotation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 5.66417C39.0636 8.7504 44 15.7987 44 24C44 27.6429 43.0261 31.0583 41.3244 34L37.282 27M36 40.015C32.6574 42.5122 28.5024 44 24 44C16.5972 44 10.1337 39.978 6.67564 34H15M4.09875 26C4.03344 25.3422 4 24.675 4 24C4 12.9543 12.9543 4 24 4L19.9577 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MisalignedSemicircle.js

/* harmony default export */ var MisalignedSemicircle = (IconWrapper('misaligned-semicircle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 30C13.3726 30 8 24.6274 8 18C8 11.3726 13.3726 6 20 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 22C17.7909 22 16 20.2091 16 18C16 15.7909 17.7909 14 20 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 34C30.2091 34 32 32.2091 32 30C32 27.7909 30.2091 26 28 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 42C34.6274 42 40 36.6274 40 30C40 23.3726 34.6274 18 28 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HexagonStrip.js

/* harmony default export */ var HexagonStrip = (IconWrapper('hexagon-strip', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.0002 4H29.0002V15.3397L38.8207 9.66982L43.8207 18.3301L34.0002 24L43.8207 29.6698L38.8207 38.3301L29.0002 32.6602V44H19.0002V32.6602L9.17969 38.3301L4.17969 29.6698L14.0002 24L4.17969 18.3301L9.17969 9.66982L19.0002 15.3397V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GameEmoji.js

/* harmony default export */ var GameEmoji = (IconWrapper('game-emoji', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "30",
      "width": "40",
      "height": "12",
      "rx": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "14",
      "r": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14L13 5L22 14L13 23L4 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FourArrows.js

/* harmony default export */ var FourArrows = (IconWrapper('four-arrows', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 8V24M24 24L29 19M24 24L19 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 40V24M24 24L29 29M24 24L19 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "8",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "8",
      "cy": "28",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "40",
      "cy": "20",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "28",
      "cy": "40",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FiveEllipses.js

/* harmony default export */ var FiveEllipses = (IconWrapper('five-ellipses', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "41",
      "cy": "25",
      "rx": "3",
      "ry": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "7",
      "cy": "25",
      "rx": "3",
      "ry": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "rx": "6",
      "ry": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "34",
      "cy": "24",
      "rx": "4",
      "ry": "16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "14",
      "cy": "24",
      "rx": "4",
      "ry": "16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FigmaResetInstance.js

/* harmony default export */ var FigmaResetInstance = (IconWrapper('figma-reset-instance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24L24 4L4 24L24 44L35 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 24L26 20M22 24L26 28M22 24C22 24 34.5 23.5 39.5 28.5C44.5 33.5 39 44 39 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FigmaComponent.js

/* harmony default export */ var FigmaComponent = (IconWrapper('figma-component', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 12L24 5L31 12L24 19L17 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36L24 29L31 36L24 43L17 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24L36 17L43 24L36 31L29 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 24L12 17L19 24L12 31L5 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlocksAndArrows.js

/* harmony default export */ var BlocksAndArrows = (IconWrapper('blocks-and-arrows', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "6",
      "width": "14",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "28",
      "width": "14",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "6",
      "width": "14",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 28H42M28 28V42M28 28L42 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Asterisk.js

/* harmony default export */ var Asterisk = (IconWrapper('asterisk', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 24H33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.5 16.2058L28.5 31.7942",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.5 16.2058L19.5 31.7942",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Benz.js

/* harmony default export */ var Benz = (IconWrapper('benz', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 4V24M41.3207 34L24.0002 24M6.67969 34L24.0002 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CirclesAndTriangles.js

/* harmony default export */ var CirclesAndTriangles = (IconWrapper('circles-and-triangles', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 4L41.3207 34H6.67969L24.0002 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CircularConnection.js

/* harmony default export */ var CircularConnection = (IconWrapper('circular-connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "26",
      "r": "17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M43 36C43 37.3416 42.4716 38.5597 41.6117 39.4577C40.7015 40.4082 39.4199 41 38 41C35.2386 41 33 38.7614 33 36C33 33.9899 34.1861 32.2569 35.8967 31.4626C36.536 31.1657 37.2487 31 38 31C40.7614 31 43 33.2386 43 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 36C15 37.3416 14.4716 38.5597 13.6117 39.4577C12.7015 40.4082 11.4199 41 10 41C7.23858 41 5 38.7614 5 36C5 33.9899 6.18614 32.2569 7.89667 31.4626C8.53604 31.1657 9.24867 31 10 31C12.7614 31 15 33.2386 15 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 9C29 10.3416 28.4716 11.5597 27.6117 12.4577C26.7015 13.4082 25.4199 14 24 14C21.2386 14 19 11.7614 19 9C19 6.98991 20.1861 5.25686 21.8967 4.4626C22.536 4.16572 23.2487 4 24 4C26.7614 4 29 6.23858 29 9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cone.js

/* harmony default export */ var Cone = (IconWrapper('cone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 39C42 41.7614 33.9411 44 24 44C14.0589 44 6 41.7614 6 39C6 38.5107 6.25301 38.0378 6.72466 37.5909C8.91494 35.5156 15.8203 34 24 34C32.1797 34 39.0851 35.5156 41.2753 37.5909C41.747 38.0378 42 38.5107 42 39Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39C42 41.7614 33.9411 44 24 44C14.0589 44 6 41.7614 6 39M42 39L41.2753 37.5909M42 39C42 38.5107 41.747 38.0378 41.2753 37.5909M6 39L6.72466 37.5909M6 39C6 38.5107 6.25301 38.0378 6.72466 37.5909M6.72466 37.5909C8.91494 35.5156 15.8203 34 24 34C32.1797 34 39.0851 35.5156 41.2753 37.5909",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.72461 37.5909L23.9999 4L41.2753 37.5909",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CrownTwo.js

/* harmony default export */ var CrownTwo = (IconWrapper('crown-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 29V19L19 22L24 15L29 22L35 19V29H13Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CubeFive.js

/* harmony default export */ var CubeFive = (IconWrapper('cube-five', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0002 4L41.3207 14M24.0002 4L6.67969 14M24.0002 4V17M41.3207 14V34M41.3207 14L30 27M41.3207 14L24.0002 17M41.3207 34L24.0002 44M41.3207 34L30 27M24.0002 44L6.67969 34M24.0002 44L18 27M24.0002 44L30 27M6.67969 34V14M6.67969 34L18 27M6.67969 14L18 27M6.67969 14L24.0002 17M24.0002 17L18 27M24.0002 17L30 27M18 27H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CubeFour.js

/* harmony default export */ var CubeFour = (IconWrapper('cube-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.3399 9L6.67969 14V24V34L15.3399 39L24.0002 44L32.6605 39L41.3207 34V24V14L32.6605 9L24.0002 4L15.3399 9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 24V11M24.0002 24L34.3925 30M24.0002 24L13.6079 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4438 15.875L35.2584 17.5V20.75M26.8146 35.375L24 37L21.1854 35.375M12.7417 20.75V17.5L15.5563 15.875",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CubeThree.js

/* harmony default export */ var CubeThree = (IconWrapper('cube-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.3399 9L6.67969 14V24V34L15.3399 39L24.0002 44L32.6605 39L41.3207 34V24V14L32.6605 9L24.0002 4L15.3399 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 4V11V24M41.3207 14L32.6605 19M41.3207 34L34.3925 30L24.0002 24M24.0002 44V34M6.67969 34L13.6079 30L24.0002 24M6.67969 14L15.3399 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CubeTwo.js

/* harmony default export */ var CubeTwo = (IconWrapper('cube-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15.3399 9L6.67969 14V24V34L15.3399 39L24.0002 44L32.6605 39L41.3207 34V24V14L32.6605 9L24.0002 4L15.3399 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 4V24M41.3207 14L24.0002 24M41.3207 34L24.0002 24M24.0002 44V24M6.67969 34L24.0002 24M6.67969 14L24.0002 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cube.js

/* harmony default export */ var Cube = (IconWrapper('cube', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.3207 14L32.6605 19M41.3207 14V24M41.3207 14L32.6605 9M24.0002 44L32.6605 39M24.0002 44L15.3399 39M24.0002 44V34M6.67969 14L15.3399 9M6.67969 14L15.3399 19M6.67969 14V24M24.0002 24L32.6605 19M24.0002 24L15.3399 19M24.0002 24V34M32.6605 19L15.3399 9M32.6605 19V39M15.3399 9L24.0002 4L32.6605 9M32.6605 39L41.3207 34V24M15.3399 39L6.67969 34V24M15.3399 39V19M15.3399 19L32.6605 9M6.67969 24L24.0002 34M24.0002 34L41.3207 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CycleArrow.js

/* harmony default export */ var CycleArrow = (IconWrapper('cycle-arrow', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 16H13C8.02944 16 4 20.0294 4 25C4 29.9706 8.02944 34 13 34C15.4758 34 17.7181 33.0003 19.3453 31.3826C20.9849 29.7525 24 25 24 25C24 25 27.0057 20.2685 28.632 18.6401C30.261 17.009 32.5127 16 35 16C39.9706 16 44 20.0294 44 25C44 29.9706 39.9706 34 35 34H31M17 16L13 12M17 16L13 20M31 34L35 30M31 34L35 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cylinder.js

/* harmony default export */ var Cylinder = (IconWrapper('cylinder', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 10C44 13.3137 35.0457 16 24 16C12.9543 16 4 13.3137 4 10C4 6.68629 12.9543 4 24 4C35.0457 4 44 6.68629 44 10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 38C44 41.3137 35.0457 44 24 44C12.9543 44 4 41.3137 4 38C4 34.6863 12.9543 32 24 32C35.0457 32 44 34.6863 44 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 10V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FourLeaves.js

/* harmony default export */ var FourLeaves = (IconWrapper('four-leaves', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4.00006C44 4.00006 33.5899 2.20107 30 8.00006C27.3278 12.3167 31 17.0001 31 17.0001M44 4.00006C44 4.00006 45.799 14.4102 40 18.0001C35.6834 20.6723 31 17.0001 31 17.0001M44 4.00006L31 17.0001M31 17.0001L28 20.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 43.9999C44 43.9999 33.5899 45.7989 30 39.9999C27.3278 35.6833 31 30.9999 31 30.9999M44 43.9999C44 43.9999 45.799 33.5898 40 29.9999C35.6834 27.3277 31 30.9999 31 30.9999M44 43.9999L31 30.9999M31 30.9999L28 27.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.26367 4.00006C4.26367 4.00006 14.6738 2.20107 18.2637 8.00006C20.9359 12.3167 17.2637 17.0001 17.2637 17.0001M4.26367 4.00006C4.26367 4.00006 2.46468 14.4102 8.26367 18.0001C12.5803 20.6723 17.2637 17.0001 17.2637 17.0001M4.26367 4.00006L17.2637 17.0001M17.2637 17.0001L20.2637 20.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.26367 43.9999C4.26367 43.9999 14.6738 45.7989 18.2637 39.9999C20.9359 35.6833 17.2637 30.9999 17.2637 30.9999M4.26367 43.9999C4.26367 43.9999 2.46468 33.5898 8.26367 29.9999C12.5803 27.3277 17.2637 30.9999 17.2637 30.9999M4.26367 43.9999L17.2637 30.9999M17.2637 30.9999L20.2637 27.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FourPointConnection.js

/* harmony default export */ var FourPointConnection = (IconWrapper('four-point-connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 20V8H28M20 8H8V20M8 28V40H20M28 40H40V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20H36V28H44V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 20H4V28H12V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 36H20V44H28V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 4H20V12H28V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FourRoundPointConnection.js

/* harmony default export */ var FourRoundPointConnection = (IconWrapper('four-round-point-connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "10",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.28339 14.7108C5.42081 16.3525 4.77973 18.1288 4.3999 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.7109 6.28358C16.3527 5.42099 18.129 4.77992 20.0002 4.40009",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "10",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2893 6.28358C31.6475 5.42099 29.8712 4.77992 28 4.40009",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.7163 14.7108C42.5789 16.3525 43.22 18.1288 43.5998 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "38",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.7163 33.2893C42.5789 31.6475 43.22 29.8712 43.5998 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2893 41.7164C31.6475 42.579 29.8712 43.2201 28 43.5999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "38",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.7109 41.7164C16.3527 42.579 18.129 43.2201 20.0002 43.5999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.28339 33.2893C5.42081 31.6475 4.77973 29.8712 4.3999 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H30M24 30V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hexagonal.js

/* harmony default export */ var Hexagonal = (IconWrapper('hexagonal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.0002 4L41.3207 14M24.0002 4L6.67969 14M24.0002 4L41.3207 34M24.0002 4L6.67969 34M41.3207 14V34M41.3207 14H6.67969M41.3207 14L24.0002 44M41.3207 34L24.0002 44M41.3207 34H6.67969M24.0002 44L6.67969 34M24.0002 44L6.67969 14M6.67969 34V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Keyline.js

/* harmony default export */ var Keyline = (IconWrapper('keyline', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6H42V42H6V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24C36 30.6274 30.6274 36 24 36C17.3726 36 12 30.6274 12 24C12 17.3726 17.3726 12 24 12C30.6274 12 36 17.3726 36 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4L44 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4L4 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiTriangularFour.js

/* harmony default export */ var MultiTriangularFour = (IconWrapper('multi-triangular-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 41H44L24 6L4 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V41M44 41L14 23.5M4 41L34 23.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiTriangularThree.js

/* harmony default export */ var MultiTriangularThree = (IconWrapper('multi-triangular-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 41H44L24 6L4 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V29.3333M44 41L24 29.3333M4 41L24 29.3333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiTriangularTwo.js

/* harmony default export */ var MultiTriangularTwo = (IconWrapper('multi-triangular-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 41H44L24 6L4 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 23.5L24 41L14 23.5H34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiTriangular.js

/* harmony default export */ var MultiTriangular = (IconWrapper('multi-triangular', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6L4 41H44L24 6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 32.25L34 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 14.75L14 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 23.5L24 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultilayerSphere.js

/* harmony default export */ var MultilayerSphere = (IconWrapper('multilayer-sphere', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11.998 8C15.341 10.5116 19.4967 12 24 12C28.5033 12 32.659 10.5116 36.0019 8M11.998 8C15.341 5.48836 19.4967 4 24 4C28.5033 4 32.659 5.48836 36.0019 8M11.998 8C10.4837 9.13776 9.13612 10.4855 7.99853 12M7.99853 12C11.6474 16.8578 17.4567 20 24 20C30.5433 20 36.3526 16.8578 40.015 12M7.99853 12C7.07396 13.2309 6.2881 14.572 5.66418 16M5.66418 16C8.7504 23.0636 15.7987 28 24 28C32.2013 28 39.2496 23.0636 42.3358 16M5.66418 16C5.10928 17.27 4.68247 18.6088 4.40007 20M4.40007 20C4.13772 21.2924 4 22.6301 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 22.6301 43.8623 21.2924 43.5999 20M4.40007 20C6.25315 29.129 14.3242 36 24 36C33.6758 36 41.7468 29.129 43.5999 20M36.0019 8C37.5163 9.13776 38.8639 10.4855 40.015 12M40.015 12C40.926 13.2309 41.7119 14.572 42.3358 16M42.3358 16C42.8907 17.27 43.3175 18.6088 43.5999 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NestedArrows.js

/* harmony default export */ var NestedArrows = (IconWrapper('nested-arrows', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 17V4H4V30H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43 43V17H17V43H43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 30L28 25M33 30L28 35M33 30H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 17V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NinePointsConnected.js

/* harmony default export */ var NinePointsConnected = (IconWrapper('nine-points-connected', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M26.8286 37.1716L37.1718 26.8284",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.1718 26.8284L10.8286 37.1716",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.8286 21.1716L37.1718 10.8284",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.8286 21.1716L21.1718 10.8284",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8C12 10.2091 10.2091 12 8 12C5.79086 12 4 10.2091 4 8C4 5.79086 5.79086 4 8 4C10.2091 4 12 5.79086 12 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 8C28 10.2091 26.2091 12 24 12C21.7909 12 20 10.2091 20 8C20 5.79086 21.7909 4 24 4C26.2091 4 28 5.79086 28 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8C44 10.2091 42.2091 12 40 12C37.7909 12 36 10.2091 36 8C36 5.79086 37.7909 4 40 4C42.2091 4 44 5.79086 44 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24C44 26.2091 42.2091 28 40 28C37.7909 28 36 26.2091 36 24C36 21.7909 37.7909 20 40 20C42.2091 20 44 21.7909 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 40C44 42.2091 42.2091 44 40 44C37.7909 44 36 42.2091 36 40C36 37.7909 37.7909 36 40 36C42.2091 36 44 37.7909 44 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40C28 42.2091 26.2091 44 24 44C21.7909 44 20 42.2091 20 40C20 37.7909 21.7909 36 24 36C26.2091 36 28 37.7909 28 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40C12 42.2091 10.2091 44 8 44C5.79086 44 4 42.2091 4 40C4 37.7909 5.79086 36 8 36C10.2091 36 12 37.7909 12 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24C12 26.2091 10.2091 28 8 28C5.79086 28 4 26.2091 4 24C4 21.7909 5.79086 20 8 20C10.2091 20 12 21.7909 12 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24C28 26.2091 26.2091 28 24 28C21.7909 28 20 26.2091 20 24C20 21.7909 21.7909 20 24 20C26.2091 20 28 21.7909 28 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OvalLoveTwo.js

/* harmony default export */ var OvalLoveTwo = (IconWrapper('oval-love-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18.258 17.5002C12.7352 27.066 13.2985 37.7308 19.5163 41.3207C20.8461 42.0885 22.3269 42.4704 23.8872 42.5029C29.6225 42.6224 36.433 38.0202 40.7747 30.5002C46.2975 20.9343 45.7341 10.2695 39.5163 6.67968C35.1001 4.12995 29.0191 5.83511 23.8872 10.4648C21.7937 12.3533 19.8582 14.7286 18.258 17.5002Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M8.25809 6.67968C2.04029 10.2695 1.47691 20.9343 6.99976 30.5002C11.3414 38.0202 18.1519 42.6224 23.8872 42.5029C22.3269 42.4704 20.8461 42.0885 19.5163 41.3207C13.2985 37.7308 12.7352 27.066 18.258 17.5002C19.8582 14.7286 21.7937 12.3533 23.8872 10.4648C18.7553 5.83511 12.6744 4.12995 8.25809 6.67968Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.8872 10.4648C29.0191 5.83511 35.1001 4.12995 39.5163 6.67968C45.7341 10.2695 46.2975 20.9343 40.7747 30.5002C36.433 38.0202 29.6225 42.6224 23.8872 42.5029M23.8872 10.4648C21.7937 12.3533 19.8582 14.7286 18.258 17.5002C12.7352 27.066 13.2985 37.7308 19.5163 41.3207C20.8461 42.0885 22.3269 42.4704 23.8872 42.5029M23.8872 10.4648C18.7553 5.83511 12.6744 4.12995 8.25809 6.67968C2.04029 10.2695 1.47691 20.9343 6.99976 30.5002C11.3414 38.0202 18.1519 42.6224 23.8872 42.5029",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OvalLove.js

/* harmony default export */ var OvalLove = (IconWrapper('oval-love', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29.5164 17.5002C35.0393 27.066 34.4759 37.7308 28.2581 41.3207C22.0403 44.9105 12.5226 40.066 6.99976 30.5002C1.47691 20.9343 2.04029 10.2695 8.25809 6.67968C14.4759 3.08983 23.9936 7.93434 29.5164 17.5002Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M18.258 17.5002C12.7352 27.066 13.2985 37.7308 19.5163 41.3207C25.7341 44.9105 35.2518 40.066 40.7747 30.5002C46.2975 20.9343 45.7341 10.2695 39.5163 6.67968C33.2985 3.08983 23.7808 7.93434 18.258 17.5002Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M29.5164 17.5002C35.0393 27.066 34.4759 37.7308 28.2581 41.3207C22.0403 44.9105 12.5226 40.066 6.99976 30.5002C1.47691 20.9343 2.04029 10.2695 8.25809 6.67968C14.4759 3.08983 23.9936 7.93434 29.5164 17.5002Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.258 17.5002C12.7352 27.066 13.2985 37.7308 19.5163 41.3207C25.7341 44.9105 35.2518 40.066 40.7747 30.5002C46.2975 20.9343 45.7341 10.2695 39.5163 6.67968C33.2985 3.08983 23.7808 7.93434 18.258 17.5002Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/QuadrangularPyramid.js

/* harmony default export */ var QuadrangularPyramid = (IconWrapper('quadrangular-pyramid', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24L24 4L4 24L24 44L44 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H30M4 24H18M30 24L24 4L18 24M30 24H18M30 24L24 44L18 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RectangleTear.js

/* harmony default export */ var RectangleTear = (IconWrapper('rectangle-tear', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40C6 41.1046 6.89543 42 8 42H40C41.1046 42 42 41.1046 42 40V8C42 6.89543 41.1046 6 40 6H8C6.89543 6 6 6.89543 6 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 6L21 12L27 18L21 24L27 30L21 36L27 42",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 6H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 42H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RectangularVertebra.js

/* harmony default export */ var RectangularVertebra = (IconWrapper('rectangular-vertebra', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 9L24 4L36 9L44 38L24 44L4 38L12 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 9L24 14M24 14L36 9M24 14V44M24 14V32M24 32L4 38M24 32L44 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoundCaliper.js

/* harmony default export */ var RoundCaliper = (IconWrapper('round-caliper', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24C44 27.3688 43.1491 30.683 41.5261 33.6351C39.9032 36.5872 37.5609 39.0815 34.7165 40.8866L30.4299 34.1319C32.1365 33.0489 33.5419 31.5523 34.5157 29.781C35.4894 28.0098 36 26.0213 36 24H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.4233 40.9745C10.5641 39.193 8.2013 36.7181 6.55405 33.7795C4.9068 30.8409 4.02851 27.5339 4.00068 24.1652L12.0004 24.0991C12.0171 26.1203 12.5441 28.1046 13.5324 29.8677C14.5208 31.6309 15.9385 33.1158 17.654 34.1847L13.4233 40.9745Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.4422 6.43161C17.4014 4.8217 20.7193 3.98536 24.0881 4.00019C27.4568 4.01503 30.7672 4.88055 33.7121 6.51646L29.8273 13.5099C28.0603 12.5283 26.0741 12.009 24.0528 12.0001C22.0316 11.9912 20.0408 12.493 18.2653 13.459L14.4422 6.43161Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoundDistortion.js

/* harmony default export */ var RoundDistortion = (IconWrapper('round-distortion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44M44 24C44 12.9543 35.0457 4 24 4M44 24C44 29.5228 39.5228 34 34 34C28.4772 34 24 29.5228 24 24M24 44C12.9543 44 4 35.0457 4 24M24 44C18.4772 44 14 39.5228 14 34C14 28.4772 18.4772 24 24 24M4 24C4 12.9543 12.9543 4 24 4M4 24C4 18.4772 8.47715 14 14 14C19.5228 14 24 18.4772 24 24M24 4C29.5228 4 34 8.47715 34 14C34 19.5228 29.5228 24 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoundMask.js

/* harmony default export */ var RoundMask = (IconWrapper('round-mask', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C32.9553 44 40.5359 38.1142 43.0844 30H4.9156C7.46413 38.1142 15.0447 44 24 44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4.9156 30C7.46413 38.1142 15.0447 44 24 44C32.9553 44 40.5359 38.1142 43.0844 30M4.9156 30C4.32071 28.1059 4 26.0904 4 24C4 12.9543 12.9543 4 24 4C35.0457 4 44 12.9543 44 24C44 26.0904 43.6793 28.1059 43.0844 30M4.9156 30H43.0844",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SixCircularConnection.js

/* harmony default export */ var SixCircularConnection = (IconWrapper('six-circular-connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 8L37.8564 16V32L24 40L10.1436 32V16L24 8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "40",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "8",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "16",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "32",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "16",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "32",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SixPoints.js

/* harmony default export */ var SixPoints = (IconWrapper('six-points', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9999 24L13.5 30.0621M23.9999 24L34.4998 30.0621M23.9999 24V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 16C14 18.2091 12.2091 20 10 20C7.79086 20 6 18.2091 6 16C6 13.7909 7.79086 12 10 12C12.2091 12 14 13.7909 14 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 32C14 34.2091 12.2091 36 10 36C7.79086 36 6 34.2091 6 32C6 29.7909 7.79086 28 10 28C12.2091 28 14 29.7909 14 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40C28 42.2091 26.2091 44 24 44C21.7909 44 20 42.2091 20 40C20 37.7909 21.7909 36 24 36C26.2091 36 28 37.7909 28 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 32C42 34.2091 40.2091 36 38 36C35.7909 36 34 34.2091 34 32C34 29.7909 35.7909 28 38 28C40.2091 28 42 29.7909 42 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 16C42 18.2091 40.2091 20 38 20C35.7909 20 34 18.2091 34 16C34 13.7909 35.7909 12 38 12C40.2091 12 42 13.7909 42 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 8C28 10.2091 26.2091 12 24 12C21.7909 12 20 10.2091 20 8C20 5.79086 21.7909 4 24 4C26.2091 4 28 5.79086 28 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sphere.js

/* harmony default export */ var Sphere = (IconWrapper('sphere', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44M44 24C44 12.9543 35.0457 4 24 4M44 24C44 28.4183 35.0457 32 24 32C12.9543 32 4 28.4183 4 24M44 24C44 19.5817 35.0457 16 24 16C12.9543 16 4 19.5817 4 24M24 44C12.9543 44 4 35.0457 4 24M24 44C28.4183 44 32 35.0457 32 24C32 12.9543 28.4183 4 24 4M24 44C19.5817 44 16 35.0457 16 24C16 12.9543 19.5817 4 24 4M4 24C4 12.9543 12.9543 4 24 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StereoPerspective.js

/* harmony default export */ var StereoPerspective = (IconWrapper('stereo-perspective', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 14H34M4 14V44M4 14L14 4M34 14V44M34 14L44 4M34 44H4M34 44L44 34M4 44L14 34M14 4H44M14 4V34M44 4V34M44 34H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThreeTriangles.js

/* harmony default export */ var ThreeTriangles = (IconWrapper('three-triangles', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.0001 7L24.0001 19.1244L29.9905 29.5H4.00977L17.0001 7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0001 7L43.9905 29.5H18.0098L24.0001 19.1244L31.0001 7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M11.0098 41.5H36.9905L29.9905 29.5H18.0098L11.0098 41.5Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0098 29.5L11.0098 41.5H36.9905L29.9905 29.5M18.0098 29.5H43.9905L31.0001 7L24.0001 19.1244M18.0098 29.5L24.0001 19.1244M18.0098 29.5H29.9905M29.9905 29.5H4.00977L17.0001 7L24.0001 19.1244M29.9905 29.5L24.0001 19.1244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TriangleRoundRectangle.js

/* harmony default export */ var TriangleRoundRectangle = (IconWrapper('triangle-round-rectangle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "29",
      "width": "14",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L34 21H14L24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "36",
      "r": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TriangularPyramid.js

/* harmony default export */ var TriangularPyramid = (IconWrapper('triangular-pyramid', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44L42 35L24 4L6 35L24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoTrianglesTwo.js

/* harmony default export */ var TwoTrianglesTwo = (IconWrapper('two-triangles-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24L4 4V44L44 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24L44 44L44 4L4 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CoordinateSystem.js

/* harmony default export */ var CoordinateSystem = (IconWrapper('coordinate-system', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 12L38 20V36L24 44L10 36V20L24 12Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20L24 28L38 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 36L44 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 39L10 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cones.js

/* harmony default export */ var Cones = (IconWrapper('cones', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 8L4 40H44L24 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 32L24 28L18 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28V22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DegreeHat.js

/* harmony default export */ var DegreeHat = (IconWrapper('degree-hat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M2 17.4L23.0222 9L44.0444 17.4L23.0222 25.8L2 17.4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44.0444 17.5101V26.7333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11.5555 21.8253V34.2667C11.5555 34.2667 16.3656 39 23.0222 39C29.6788 39 34.4889 34.2667 34.4889 34.2667V21.8253",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConnectionPoint.js

/* harmony default export */ var ConnectionPoint = (IconWrapper('connection-point', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "4",
      "width": "12",
      "height": "12",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "6",
      "y": "32",
      "width": "12",
      "height": "12",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "32",
      "width": "12",
      "height": "12",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24.0083L24.0083 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32.0083L36.0083 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32.0083L12.0083 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IdCard.js

/* harmony default export */ var IdCard = (IconWrapper('id-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 8.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "0",
      "width": "40",
      "height": "32",
      "rx": "2"
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "x": "24",
      "y": "8",
      "width": "8",
      "height": "8"
    }
  }), h("path", {
    "attrs": {
      "d": "M8,24 L32,24",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8,8 L14,8",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8,16 L14,16",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Book.js

/* harmony default export */ var Book = (IconWrapper('book', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 40C8 36 8 10 8 10C8 6.68629 10.8654 4 14.4 4H40V36C40 36 19.9815 36 14.4 36C9.36225 36 8 36.6842 8 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M12 44H40V36H12C9.79086 36 8 37.7909 8 40C8 42.2091 9.79086 44 12 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Flask.js

/* harmony default export */ var Flask = (IconWrapper('flask', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "37.8449774 35.0219317 44 41.3157895 44 44 4 44 4 41.3157895 10.1183816 35.0593993"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "10.1038429 35.074266 18 27 18 6 18 6 30 6 30 27 37.8725898 35.050167"
    }
  }), h("path", {
    "attrs": {
      "d": "M11,35 L37,35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30,14 L24,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30,20 L24,20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PullRequests.js

/* harmony default export */ var PullRequests = (IconWrapper('pull-requests', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "30",
      "cy": "36",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "36",
      "r": "4"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,8 L4,32",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17,6 L26,6 C28.209139,6 30,7.790861 30,10 L30,32",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(20.000000, 6.000000) rotate(180.000000) translate(-20.000000, -6.000000) ",
      "points": "17 0 23 6 17 12"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Branch.js

/* harmony default export */ var Branch = (IconWrapper('branch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(5.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "35",
      "cy": "20",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "36",
      "r": "4"
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "4 8 4 32 4 20.0083363 31 20.0083363"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fork.js

/* harmony default export */ var Fork = (IconWrapper('fork', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "30",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "17",
      "cy": "36",
      "r": "4"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,8 L4,11 C4,18 17,21 17,28 L17,32 L17,28 C17,21 30,18 30,11 L30,8",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BranchTwo.js

/* harmony default export */ var BranchTwo = (IconWrapper('branch-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M36 12C38.2091 12 40 10.2091 40 8C40 5.79086 38.2091 4 36 4C33.7909 4 32 5.79086 32 8C32 10.2091 33.7909 12 36 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14 12C16.2091 12 18 10.2091 18 8C18 5.79086 16.2091 4 14 4C11.7909 4 10 5.79086 10 8C10 10.2091 11.7909 12 14 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14 44C16.2091 44 18 42.2091 18 40C18 37.7909 16.2091 36 14 36C11.7909 36 10 37.7909 10 40C10 42.2091 11.7909 44 14 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 12L14 36L14 33C14 25 36 24 36 16V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Connection.js

/* harmony default export */ var Connection = (IconWrapper('connection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 34L44 39L39 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8L20 8C22.2091 8 24 9.79086 24 12V35C24 37.2091 25.7909 39 28 39H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CrossRing.js

/* harmony default export */ var CrossRing = (IconWrapper('cross-ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "20",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "20",
      "cy": "36",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "20",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "36",
      "cy": "20",
      "r": "4"
    }
  }), h("path", {
    "attrs": {
      "d": "M8,20 L32,20",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8,20 L32,20",
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(20.000000, 20.000000) rotate(90.000000) translate(-20.000000, -20.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M11.1104658,6.69474141 C10.2379344,7.27885667 9.42606093,7.94652207 8.6862915,8.6862915 C7.94652207,9.42606093 7.27885667,10.2379344 6.69474141,11.1104658 M6.69474141,28.8895342 C7.27885667,29.7620656 7.94652207,30.5739391 8.6862915,31.3137085 C9.42606093,32.0534779 10.2379344,32.7211433 11.1104658,33.3052586 M28.8895342,33.3052586 C29.7620656,32.7211433 30.5739391,32.0534779 31.3137085,31.3137085 C32.0534779,30.5739391 32.7211433,29.7620656 33.3052586,28.8895342 M33.3052586,11.1104658 C32.7211433,10.2379344 32.0534779,9.42606093 31.3137085,8.6862915 C30.5739391,7.94652207 29.7620656,7.27885667 28.8895342,6.69474141",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PayCode.js

/* harmony default export */ var PayCode = (IconWrapper('pay-code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "0",
      "width": "40",
      "height": "40"
    }
  }), h("path", {
    "attrs": {
      "d": "M8,12 L8,28",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16,12 L16,28",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24,12 L24,28",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32,12 L32,28",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Plug.js

/* harmony default export */ var Plug = (IconWrapper('plug', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,10 L36,10 L36,20 C32,28 26,32 18,32 C10,32 4,28 0,20 L0,10 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "points": "27 30 26 40 10 40 9 30"
    }
  }), h("path", {
    "attrs": {
      "d": "M16,20 L20,20",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10,8 L10,0",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(10.000000, 4.000000) rotate(180.000000) translate(-10.000000, -4.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M26,8 L26,0",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(26.000000, 4.000000) rotate(180.000000) translate(-26.000000, -4.000000) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Shake.js

/* harmony default export */ var Shake = (IconWrapper('shake', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 6.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "points": "0 4 4 8.66666667 0 13.3333333 4 18 0 22.6666667 4 27.3333333 0 32"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "transform": "translate(38.000000, 18.000000) scale(-1, 1) translate(-38.000000, -18.000000) ",
      "points": "36 4 40 8.66666667 36 13.3333333 40 18 36 22.6666667 40 27.3333333 36 32"
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "10",
      "y": "0",
      "width": "20",
      "height": "36"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,29 L22,29",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sim.js

/* harmony default export */ var Sim = (IconWrapper('sim', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(8.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "points": "0 0 24.8888889 0 32 7.27272727 32 40 0 40"
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "x": "7",
      "y": "22",
      "width": "18",
      "height": "10"
    }
  }), h("path", {
    "attrs": {
      "d": "M7,8 L7,14",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13,8 L13,14",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19,8 L19,14",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Thermometer.js

/* harmony default export */ var Thermometer = (IconWrapper('thermometer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(14.000000, 6.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M4,19.9992676 L4,4 C4,0.686291501 6.6862915,-2 10,-2 C13.3137085,-2 16,0.686291501 16,4 L16,19.9992676 C18.4288934,21.8236803 20,24.7283643 20,28 C20,33.5228475 15.5228475,38 10,38 C4.4771525,38 0,33.5228475 0,28 C0,24.7283643 1.5711066,21.8236803 4,19.9992676 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M10,11 L10,24",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "cx": "10",
      "cy": "28",
      "r": "4"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Vial.js

/* harmony default export */ var Vial = (IconWrapper('vial', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M30,33 C30,26.5555556 30,16.8888889 30,4 L18,4 C18,16.8748616 18,26.5310079 18,32.9684387",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30,14 L25,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30,20 L25,20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18,33 C18,34.0441131 18,35.6102827 18,37.6985088 C18,41.1787263 20.6862915,44 24,44 C27.3137085,44 30,41.1787263 30,37.6985088 C30,35.638632 30,34.0937244 30,33.063786 L18,33 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BabyBottle.js

/* harmony default export */ var BabyBottle = (IconWrapper('baby-bottle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(8.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "16",
      "width": "24",
      "height": "24"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,32 L28,32"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,24 L28,24"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,16 L32,16"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,10 L12.4,10 L12.4,3.6 C12.4,2.39814813 13.6,0 16,0 C18.4,0 19.6,2.39814813 19.6,3.6 L19.6,10 L28,10"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CookingPot.js

/* harmony default export */ var CookingPot = (IconWrapper('cooking-pot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 3.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M6,41 L34,41 L34,17.9473684 C34,11.9013038 27.7319865,7 20,7 C12.2680135,7 6,11.9013038 6,17.9473684 L6,41 Z",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34,19.0436777 C34,18.8000534 34,18.434617 34,17.9473684 C34,11.9013038 27.7319865,7 20,7 C12.2680135,7 6,11.9013038 6,17.9473684 C6,18.4331602 6,18.7975039 6,19.0403998 L34,19.0436777 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,19 L40,19",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17,1 L23,1",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ghost.js

/* harmony default export */ var Ghost = (IconWrapper('ghost', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("path", {
    "attrs": {
      "d": "M8,44 L12,40 L16,44 L20,38 L24,44 L28,38 L32,44 L36,40 L40,44 L40,20 C40,11.163444 32.836556,4 24,4 C15.163444,4 8,11.163444 8,20 L8,44 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M19,20 L21,20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31,20 L33,20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Game.js

/* harmony default export */ var Game = (IconWrapper('game', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M34.5120527,5.53620381 C30.8466015,2.10248672 25.9188318,0 20.5,0 C9.17816263,0 1.98951966e-13,9.17816263 1.98951966e-13,20.5 C1.98951966e-13,31.8218374 9.17816263,41 20.5,41 C26.1148083,41 31.2023928,38.742687 34.9047551,35.0860595 L20,20 L34.5120527,5.53620381 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "36",
      "cy": "20",
      "r": "4"
    }
  }), h("path", {
    "attrs": {
      "d": "M13,9 L13,17",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M9,13 L17,13",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GameTwo.js

/* harmony default export */ var GameTwo = (IconWrapper('game-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 15L24 19L28 15V4H20V15Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 33L24 29L28 33V44H20V33Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 28L29 24L33 20L44 20L44 28L33 28Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 20L19 24L15 28L4 28L4 20L15 20Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Joystick.js

/* harmony default export */ var Joystick = (IconWrapper('joystick', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "29",
      "width": "40",
      "height": "10"
    }
  }), h("rect", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "x": "22",
      "y": "22",
      "width": "12",
      "height": "7"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "14",
      "cy": "5",
      "r": "5"
    }
  }), h("path", {
    "attrs": {
      "d": "M12,10 L5,29",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GameHandle.js

/* harmony default export */ var GameHandle = (IconWrapper('game-handle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "14",
      "width": "40",
      "height": "24",
      "rx": "12"
    }
  }), h("path", {
    "attrs": {
      "d": "M12,22 L12,30",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8,26 L16,26",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "points": "20 12 20 5.71428571 28 5.71428571 28 2.84272605e-13"
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "cx": "28",
      "cy": "26",
      "r": "4"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Handheld.js

/* harmony default export */ var Handheld = (IconWrapper('handheld', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "points": "42 18 42 44 6 44 6 18 6 18"
    }
  }), h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "6",
      "y": "4",
      "width": "36",
      "height": "14"
    }
  }), h("path", {
    "attrs": {
      "d": "M16,27 L16,35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12,31 L20,31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "32",
      "cy": "31",
      "r": "4"
    }
  })])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterRate.js

/* harmony default export */ var WaterRate = (IconWrapper('water-rate', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M24,44 C32.836556,44 40,37.4875642 40,29.4545455 C40,21.5757576 34.6666667,13.0909091 24,4 C13.3333333,13.0909091 8,21.5757576 8,29.4545455 C8,37.4877782 15.163444,44 24,44 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("g", {
    "attrs": {
      "transform": "translate(18.000000, 19.000000)",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-width": props.strokeWidth
    }
  }, [h("polyline", {
    "attrs": {
      "points": "0.857142857 0 6 5.36842105 11.1428571 0"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,7.15789474 L12,7.15789474"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,12.5263158 L12,12.5263158"
    }
  }), h("path", {
    "attrs": {
      "d": "M6,7.15789474 L6,17"
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fireworks.js

/* harmony default export */ var Fireworks = (IconWrapper('fireworks', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 2.000000)"
    }
  }, [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "0 40 8.67409249 15.2640024 25 32.0384615"
    }
  }), h("path", {
    "attrs": {
      "d": "M17,17 L22,12 C24.6666667,9.33333333 25,7 23,5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23,23 L28,18 C31.3333333,14.6666667 34.6666667,14.6666667 38,18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[0],
      "cx": "14",
      "cy": "3",
      "r": "2"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[0],
      "cx": "36",
      "cy": "2",
      "r": "2"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[0],
      "cx": "36",
      "cy": "25",
      "r": "2"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[0],
      "cx": "33",
      "cy": "34",
      "r": "2"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Skull.js

/* harmony default export */ var Skull = (IconWrapper('skull', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M11.2631579,44 L14.6270764,35.6852027 C10.0310281,32.5933537 7,27.2926864 7,21.2727273 C7,11.7332634 14.6111593,4 24,4 C33.3888407,4 41,11.7332634 41,21.2727273 C41,27.2926864 37.9689719,32.5933537 33.3729236,35.6852027 L36.7368421,44 L11.2631579,44 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20,38 L20,44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28,38 L28,44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "17",
      "cy": "20",
      "r": "3"
    }
  }), h("circle", {
    "attrs": {
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "cx": "31",
      "cy": "20",
      "r": "3"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Poker.js

/* harmony default export */ var Poker = (IconWrapper('poker', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "8",
      "y": "0",
      "width": "30",
      "height": "40"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap,
      "points": "0 7.78947368 8 6 8 40"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[2],
      "fill": props.colors[3],
      "fill-rule": "nonzero",
      "points": "23 14 18 20 23 26 28 20"
    }
  }), h("path", {
    "attrs": {
      "d": "M14,6 L14,10",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32,30 L32,34",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RedEnvelopes.js

/* harmony default export */ var RedEnvelopes = (IconWrapper('red-envelopes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(8.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "x": "0",
      "y": "0",
      "width": "32",
      "height": "40"
    }
  }), h("path", {
    "attrs": {
      "d": "M11.7368854,16.7775148 C7.73688539,15.2066736 4,11.7624921 0,6 M32,6 C28,11.7624921 24.319097,15.3206733 20.319097,16.8915145",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "16",
      "cy": "18.5",
      "r": "4.5"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Signal.js

/* harmony default export */ var Signal = (IconWrapper('signal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.500000, 6.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.5,0 L32.5,36"
    }
  }), h("path", {
    "attrs": {
      "d": "M21.5,10 L21.5,36"
    }
  }), h("path", {
    "attrs": {
      "d": "M11.5,20 L11.5,36"
    }
  }), h("path", {
    "attrs": {
      "d": "M0.5,30 L0.5,36"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SignalOne.js

/* harmony default export */ var SignalOne = (IconWrapper('signal-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38.1421 38.1421C41.7614 34.5228 44 29.5228 44 23.9999C44 18.4771 41.7614 13.4771 38.1421 9.85779",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85786 9.85779C6.23858 13.4771 4 18.4771 4 23.9999C4 29.5228 6.23858 34.5228 9.85786 38.1421",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.1005 14.1005C12.567 16.634 11 20.134 11 24C11 27.866 12.567 31.366 15.1005 33.8995",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32.8995 33.8995C35.433 31.366 37 27.866 37 24C37 20.134 35.433 16.634 32.8995 14.1005",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 43.9999V33.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 3.99988V13.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "23.9999",
      "r": "3",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Magic.js

/* harmony default export */ var Magic = (IconWrapper('magic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(5.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M25,0 L25,6 M34.8994949,4.10050506 L30.6568542,8.34314575 M39,14 L33,14 M34.8994949,23.8994949 L30.6568542,19.6568542 M25,28 L25,22 M15.1005051,23.8994949 L19.3431458,19.6568542 M11,14 L17,14 M15.1005051,4.10050506 L19.3431458,8.34314575"
    }
  }), h("path", {
    "attrs": {
      "d": "M24.5857864,14.4142136 L0.544155877,38.4558441",
      "transform": "translate(12.564971, 26.435029) rotate(-0.000000) translate(-12.564971, -26.435029) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bedside.js

/* harmony default export */ var Bedside = (IconWrapper('bedside', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "18",
      "width": "40",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "30",
      "width": "40",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 24H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 36H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 42V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 42V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 10H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SofaTwo.js

/* harmony default export */ var SofaTwo = (IconWrapper('sofa-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 38V18H36V31H12V18H4V38H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 6H12L12 31H36L36 6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10 44C12.2091 44 14 42.2091 14 40C12.9028 40.0044 6.7003 40 6 40C6 42.2091 7.79086 44 10 44Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 44C40.2091 44 42 42.2091 42 40C40.0954 39.9934 34.8627 40 34 40C34 42.2091 35.7909 44 38 44Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sofa.js

/* harmony default export */ var Sofa = (IconWrapper('sofa', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 8.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "13",
      "width": "8",
      "height": "14"
    }
  }), h("rect", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "32",
      "y": "13",
      "width": "8",
      "height": "14"
    }
  }), h("rect", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "x": "8",
      "y": "19",
      "width": "24",
      "height": "8"
    }
  }), h("polyline", {
    "attrs": {
      "stroke-linecap": props.strokeLinecap,
      "points": "4 12 4 0 36 0 36 12"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,28 L4,32",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36,28 L36,32",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BarCode.js

/* harmony default export */ var BarCode = (IconWrapper('bar-code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 6.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,14 L40,14"
    }
  }), h("path", {
    "attrs": {
      "d": "M2,0 L2,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M2,19.9954922 L2,31.9991242"
    }
  }), h("path", {
    "attrs": {
      "d": "M16.4,0 L16.4,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M16.4,20 L16.4,36"
    }
  }), h("path", {
    "attrs": {
      "d": "M30.8,0 L30.8,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M38,0 L38,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M30.8,20 L30.8,28"
    }
  }), h("path", {
    "attrs": {
      "d": "M9.2,0 L9.2,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M9.2,20 L9.2,28"
    }
  }), h("path", {
    "attrs": {
      "d": "M23.6,0 L23.6,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M23.6,20 L23.6,28"
    }
  }), h("path", {
    "attrs": {
      "d": "M38,20 L38,32"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Usb.js

/* harmony default export */ var Usb = (IconWrapper('usb', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("path", {
    "attrs": {
      "d": "M12,22 C14.209139,22 16,20.209139 16,18 C16,15.790861 14.209139,14 12,14 C9.790861,14 8,15.790861 8,18 C8,20.209139 9.790861,22 12,22 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36,28 C38.209139,28 40,26.209139 40,24 C40,21.790861 38.209139,20 36,20 C33.790861,20 32,21.790861 32,24 C32,26.209139 33.790861,28 36,28 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "19 9 24 4 29 9"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "25 39 12 28.2631579 12 22"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "36 28 36 32.7894737 24 41"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,4 L24,43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21,44 L27,44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Diamond.js

/* harmony default export */ var Diamond = (IconWrapper('diamond', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(3.000000, 5.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("polygon", {
    "attrs": {
      "points": "7.63636364 0 34.3636364 0 42 13.3 21 38 0 13.3"
    }
  }), h("polyline", {
    "attrs": {
      "points": "7.63636364 0 21 38 34.3636364 0"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,13.3 L42,13.3"
    }
  }), h("polyline", {
    "attrs": {
      "points": "12.4090909 13.3 21 0 29.5909091 13.3"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Trend.js

/* harmony default export */ var Trend = (IconWrapper('trend', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "x": "6",
      "y": "6",
      "width": "36",
      "height": "36",
      "rx": "3"
    }
  }), h("g", {
    "attrs": {
      "transform": "translate(13.000000, 13.000000)",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-width": props.strokeWidth
    }
  }, [h("polyline", {
    "attrs": {
      "transform": "translate(10.729923, 10.927306) rotate(-135.000000) translate(-10.729923, -10.927306) ",
      "points": "13.8290808 -0.525973264 13.8290808 7.47402674 7.63076535 7.48132266 7.6591204 22.3805856"
    }
  }), h("polyline", {
    "attrs": {
      "points": "13 5 21 5 21 13"
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Theme.js

/* harmony default export */ var Theme = (IconWrapper('theme', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("path", {
    "attrs": {
      "d": "M18,6 C18,9.3137085 20.6862915,12 24,12 C27.3137085,12 30,9.3137085 30,6 L35.4545455,6 L42,15.8181818 L36.2727273,20.7272727 L36.2727273,42 L11.7272727,42 L11.7272727,20.7272727 L6,15.8181818 L12.5454545,6 L18,6 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  })])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PaperMoney.js

/* harmony default export */ var PaperMoney = (IconWrapper('paper-money', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 7.000000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "x": "0",
      "y": "0",
      "width": "40",
      "height": "34",
      "rx": "5"
    }
  }), h("g", {
    "attrs": {
      "transform": "translate(13.000000, 8.000000)",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }, [h("polyline", {
    "attrs": {
      "points": "1 0 7 6 13 0"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,8 L14,8"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,14 L14,14"
    }
  }), h("path", {
    "attrs": {
      "d": "M7,8 L7,19"
    }
  })])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rugby.js

/* harmony default export */ var Rugby = (IconWrapper('rugby', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(24.000000, 24.000000) rotate(-45.000000) translate(-24.000000, -24.000000) translate(0.000000, 10.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "14",
      "rx": "24",
      "ry": "14"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,18 L24,10",
      "transform": "translate(24.000000, 14.000000) rotate(180.000000) translate(-24.000000, -14.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M30,18 L30,10",
      "transform": "translate(30.000000, 14.000000) rotate(180.000000) translate(-30.000000, -14.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M18,18 L18,10",
      "transform": "translate(18.000000, 14.000000) rotate(180.000000) translate(-18.000000, -14.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M8,14.0083363 L40,14.0083363"
    }
  }), h("path", {
    "attrs": {
      "d": "M8,24 L8,4",
      "transform": "translate(8.000000, 14.000000) rotate(180.000000) translate(-8.000000, -14.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M40,24 L40,4",
      "transform": "translate(40.000000, 14.000000) rotate(180.000000) translate(-40.000000, -14.000000) "
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Football.js

/* harmony default export */ var Football = (IconWrapper('football', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "20",
      "r": "20"
    }
  }), h("g", {
    "attrs": {
      "transform": "translate(2.000000, 2.000000)"
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(0.000000, 0.500000)"
    }
  }, [h("polyline", {
    "attrs": {
      "points": "24.0930233 -8.8817842e-16 18.0697674 4.35897436 18.0697674 8.71794872 25.8139535 14.8205128 30.1162791 13.0769231 32.6976744 6.1025641"
    }
  }), h("polyline", {
    "attrs": {
      "points": "12.0465116 -8.8817842e-16 18.0697674 4.35897436 18.0697674 8.71794872 10.3255814 14.8205128 6.02325581 13.0769231 3.44186047 6.1025641"
    }
  }), h("polyline", {
    "attrs": {
      "points": "1.0658141e-14 15.6923077 6.02325581 13.0769231 10.3255814 14.8205128 12.9069767 24.4102564 10.3255814 27.8974359 2.58139535 27.8974359"
    }
  }), h("polyline", {
    "attrs": {
      "points": "10.3255814 34 10.3255814 27.8974359 12.9069767 24.4102564 23.2325581 24.4102564 25.8139535 27.8974359 25.8139535 34"
    }
  }), h("polyline", {
    "attrs": {
      "points": "33.5581395 27.8974359 25.8139535 27.8974359 23.2325581 24.4102564 25.8139535 14.8205128 30.1162791 13.0769231 37 16.5641026"
    }
  })])])])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Basketball.js

/* harmony default export */ var Basketball = (IconWrapper('basketball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "20",
      "r": "20"
    }
  }), h("path", {
    "attrs": {
      "d": "M4.54545455,7.27272727 C8.78787879,10.9090909 10.9090909,15.1515152 10.9090909,20 C10.9090909,24.8484848 8.78787879,29.0909091 4.54545455,32.7272727"
    }
  }), h("path", {
    "attrs": {
      "d": "M35.4545455,32.7272727 C31.2121212,29.0909091 29.0909091,24.8484848 29.0909091,20 C29.0909091,15.1515152 31.2121212,10.9090909 35.4545455,7.27272727 L35.4545455,7.27272727"
    }
  }), h("path", {
    "attrs": {
      "d": "M0,20 L40,20"
    }
  }), h("path", {
    "attrs": {
      "d": "M20,0 L20,40"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Baseball.js

/* harmony default export */ var Baseball = (IconWrapper('baseball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "20",
      "r": "20"
    }
  }), h("path", {
    "attrs": {
      "d": "M4.54545455,7.27272727 C8.78787879,10.9090909 10.9090909,15.1515152 10.9090909,20 C10.9090909,24.8484848 8.78787879,29.0909091 4.54545455,32.7272727"
    }
  }), h("path", {
    "attrs": {
      "d": "M35.4545455,32.7272727 C31.2121212,29.0909091 29.0909091,24.8484848 29.0909091,20 C29.0909091,15.1515152 31.2121212,10.9090909 35.4545455,7.27272727 L35.4545455,7.27272727"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dumbbell.js

/* harmony default export */ var Dumbbell = (IconWrapper('dumbbell', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 13.6C14 12.1641 12.6569 11 11 11C9.34315 11 8 12.1641 8 13.6V34.4C8 35.8359 9.34315 37 11 37C12.6569 37 14 35.8359 14 34.4V13.6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 13.6C40 12.1641 38.6569 11 37 11C35.3431 11 34 12.1641 34 13.6V34.4C34 35.8359 35.3431 37 37 37C38.6569 37 40 35.8359 40 34.4V13.6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 18.6667C8 17.1939 6.65685 16 5 16C3.34315 16 2 17.1939 2 18.6667V29.3333C2 30.8061 3.34315 32 5 32C6.65685 32 8 30.8061 8 29.3333V18.6667Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M46 18.6667C46 17.1939 44.6569 16 43 16C41.3431 16 40 17.1939 40 18.6667V29.3333C40 30.8061 41.3431 32 43 32C44.6569 32 46 30.8061 46 29.3333V18.6667Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "width": "20",
      "height": "6",
      "transform": "matrix(1 0 0 -1 14 27)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlackEight.js

/* harmony default export */ var BlackEight = (IconWrapper('black-eight', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23C26.7614 23 29 20.7614 29 18C29 15.2386 26.7614 13 24 13C21.2386 13 19 15.2386 19 18C19 20.7614 21.2386 23 24 23Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35C27.3137 35 30 32.3137 30 29C30 25.6863 27.3137 23 24 23C20.6863 23 18 25.6863 18 29C18 32.3137 20.6863 35 24 35Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ship.js

/* harmony default export */ var Ship = (IconWrapper('ship', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "6 20.3768116 24 14 42 20.3768116 36.6666667 34 11.3333333 34"
    }
  }), h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "13 8 35 8 34.99759 17.8960866 24 14 13 17.8958424"
    }
  }), h("path", {
    "attrs": {
      "d": "M24,8 L24,4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,24 L24,16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "10 40 13.5 44 17 40 20.5 44 24 40 27.5 44 31 40 34.5 44 38 40"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Peoples.js

/* harmony default export */ var Peoples = (IconWrapper('peoples', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.6077 7C34.6405 8.2249 36.0001 10.4537 36.0001 13C36.0001 15.5463 34.6405 17.7751 32.6077 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40.8V42H34V40.8C34 36.3196 34 34.0794 33.1281 32.3681C32.3611 30.8628 31.1372 29.6389 29.6319 28.8719C27.9206 28 25.6804 28 21.2 28H16.8C12.3196 28 10.0794 28 8.36808 28.8719C6.86278 29.6389 5.63893 30.8628 4.87195 32.3681C4 34.0794 4 36.3196 4 40.8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9999 42V40.8C43.9999 36.3196 43.9999 34.0794 43.128 32.3681C42.361 30.8628 41.1371 29.6389 39.6318 28.8719",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeoplePlus.js

/* harmony default export */ var PeoplePlus = (IconWrapper('people-plus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M36 29V41V29Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M30 35H42H30Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 29V41M30 35H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/People.js

/* harmony default export */ var People = (IconWrapper('people', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 20C27.866 20 31 16.866 31 13C31 9.13401 27.866 6 24 6C20.134 6 17 9.13401 17 13C17 16.866 20.134 20 24 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 40.8V42H42V40.8C42 36.3196 42 34.0794 41.1281 32.3681C40.3611 30.8628 39.1372 29.6389 37.6319 28.8719C35.9206 28 33.6804 28 29.2 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleMinus.js

/* harmony default export */ var PeopleMinus = (IconWrapper('people-minus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M30 35H42H30Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M30 35H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeoplePlusOne.js

/* harmony default export */ var PeoplePlusOne = (IconWrapper('people-plus-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40.8V42H34V40.8C34 36.3196 34 34.0794 33.1281 32.3681C32.3611 30.8628 31.1372 29.6389 29.6319 28.8719C27.9206 28 25.6804 28 21.2 28H16.8C12.3196 28 10.0794 28 8.36808 28.8719C6.86278 29.6389 5.63893 30.8628 4.87195 32.3681C4 34.0794 4 36.3196 4 40.8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 13V25V13Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32 19H44H32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38 13V25M32 19H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleMinusOne.js

/* harmony default export */ var PeopleMinusOne = (IconWrapper('people-minus-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40.8V42H34V40.8C34 36.3196 34 34.0794 33.1281 32.3681C32.3611 30.8628 31.1372 29.6389 29.6319 28.8719C27.9206 28 25.6804 28 21.2 28H16.8C12.3196 28 10.0794 28 8.36808 28.8719C6.86278 29.6389 5.63893 30.8628 4.87195 32.3681C4 34.0794 4 36.3196 4 40.8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32 19H44H32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M32 19H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/User.js

/* harmony default export */ var User = (IconWrapper('user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UserPositioning.js

/* harmony default export */ var UserPositioning = (IconWrapper('user-positioning', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "16",
      "r": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 36C36 29.3726 30.6274 24 24 24C17.3726 24 12 29.3726 12 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 4H44V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4H4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 44H44V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 44H4V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AddUser.js

/* harmony default export */ var AddUser = (IconWrapper('add-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 39H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ReduceUser.js

/* harmony default export */ var ReduceUser = (IconWrapper('reduce-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 39H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WrongUser.js

/* harmony default export */ var WrongUser = (IconWrapper('wrong-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 36L28 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 36L20 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RightUser.js

/* harmony default export */ var RightUser = (IconWrapper('right-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 36L22 44L18 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GuideBoard.js

/* harmony default export */ var GuideBoard = (IconWrapper('guide-board', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M18,0 L18,37",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("polygon", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "points": "18 4 33.5454545 4 36 8 33.5454545 12 18 12"
    }
  }), h("polygon", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "transform": "translate(9.000000, 22.000000) scale(-1, 1) translate(-9.000000, -22.000000) ",
      "points": "0 18 15.5454545 18 18 22 15.5454545 26 0 26"
    }
  }), h("path", {
    "attrs": {
      "d": "M10,38 L26,38",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MapRoad.js

/* harmony default export */ var MapRoad = (IconWrapper('map-road', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3"
    }
  }), h("path", {
    "attrs": {
      "d": "M37,12 L33,36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "transform": "translate(35.000000, 24.000000) scale(-1, 1) translate(-35.000000, -24.000000) "
    }
  }), h("path", {
    "attrs": {
      "d": "M16,12 L12,36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,12 L24,16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,22 L24,26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,32 L24,36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Road.js

/* harmony default export */ var Road = (IconWrapper('road', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(6.000000, 5.091863)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M5,0.908136641 L0,36.9081366"
    }
  }), h("path", {
    "attrs": {
      "d": "M36.9287415,0.908136641 L31.9643708,36.8633744",
      "transform": "translate(33.964371, 18.886476) scale(-1, 1) translate(-33.964371, -18.886476) "
    }
  }), h("path", {
    "attrs": {
      "d": "M18,0.908136641 L18,6.90813664"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,29.9081366 L18,36.9081366"
    }
  }), h("path", {
    "attrs": {
      "d": "M18,14.9081366 L18,21.9081366"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoadSign.js

/* harmony default export */ var RoadSign = (IconWrapper('road-sign', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 10V22H38L44 16L38 10L6 10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 22V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 4V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 44H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Taxi.js

/* harmony default export */ var Taxi = (IconWrapper('taxi', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 11.000000)"
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,24 L0,16.7096591 C0,14.4362682 1.28486268,12.3581322 3.31860205,11.3421546 L4.00052612,11.0014917 L6.31046481,3.09193569 C6.73255871,1.28116768 8.34671607,0 10.2060289,0 L29.8943096,0 C31.7675242,0 33.3898545,1.29998174 33.7981404,3.12815989 L36.0031455,11.0014917 L36.6833687,11.3416171 C38.716025,12.3579864 40,14.4355394 40,16.7081367 L40,24 C40,25.6568542 38.6568542,27 37,27 L35.0031455,27 L35.0031455,28 C35.0031455,30.209139 33.2122845,32 31.0031455,32 C28.790861,32 27,30.209139 27,28 L27,27 L13,27 L13,28.0002631 C13,30.2092568 11.2092568,32 9.00026306,32 C6.79126935,32 5.00052612,30.2092568 5.00052612,28.0002631 L5.00052612,27 L3,27 C1.34314575,27 0,25.6568542 0,24 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[2],
      "cx": "9.5",
      "cy": "19.5",
      "r": "2.5"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[2],
      "cx": "30.5",
      "cy": "19.5",
      "r": "2.5"
    }
  })]), h("path", {
    "attrs": {
      "d": "M18,11 L30,11 L29.0088185,6.04409272 C28.8868085,5.43404265 28.3998325,5 27.8373941,5 L20.1626059,5 C19.6001675,5 19.1131915,5.43404265 18.9911815,6.04409272 L18,11 Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15,23 L33,23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TableFile.js

/* harmony default export */ var TableFile = (IconWrapper('table-file', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "x": "4",
      "y": "6",
      "width": "40",
      "height": "36",
      "rx": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,18 L44,18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.5,18 L17.5,42",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.5,18 L30.5,42",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4,30 L44,30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44,8 L44,40 C44,41.1045695 43.1045695,42 42,42 L6,42 C4.8954305,42 4,41.1045695 4,40 L4,8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Outdoor.js

/* harmony default export */ var Outdoor = (IconWrapper('outdoor', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(4.000000, 4.000000)",
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("polygon", {
    "attrs": {
      "points": "-3.38652717e-14 38 14 6 24 30 28 18 40 38"
    }
  }), h("circle", {
    "attrs": {
      "cx": "33",
      "cy": "5",
      "r": "5"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Material.js

/* harmony default export */ var Material = (IconWrapper('material', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V36C30.6274 36 36 30.6274 36 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneTelephone.js

/* harmony default export */ var PhoneTelephone = (IconWrapper('phone-telephone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 49",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.9963 7.68583C17.7228 7.68583 18.3922 8.07985 18.7449 8.71509L21.1913 13.1219C21.5116 13.6989 21.5267 14.3968 21.2315 14.9871L18.8747 19.7008C18.8747 19.7008 19.5577 23.2122 22.4161 26.0706C25.2746 28.929 28.7742 29.6002 28.7742 29.6002L33.4871 27.2438C34.0778 26.9484 34.7762 26.9637 35.3534 27.2846L39.7727 29.7416C40.4074 30.0945 40.8009 30.7635 40.8009 31.4896L40.8009 36.5631C40.8009 39.1468 38.401 41.0129 35.953 40.1868C30.925 38.4903 23.1203 35.2601 18.1735 30.3132C13.2267 25.3664 9.99643 17.5617 8.29989 12.5338C7.47387 10.0857 9.33996 7.68583 11.9236 7.68583L16.9963 7.68583Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneOutgoing.js

/* harmony default export */ var PhoneOutgoing = (IconWrapper('phone-outgoing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 51 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31 20L44 7.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 7H44V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.3757 9.79423C18.1022 9.79423 18.7716 10.1883 19.1243 10.8235L21.5707 15.2303C21.891 15.8073 21.9061 16.5052 21.6109 17.0955L19.2541 21.8092C19.2541 21.8092 19.9371 25.3206 22.7955 28.179C25.654 31.0374 29.1536 31.7086 29.1536 31.7086L33.8665 29.3522C34.4572 29.0568 35.1556 29.0721 35.7328 29.393L40.1521 31.85C40.7868 32.2028 41.1803 32.8719 41.1803 33.598L41.1803 38.6715C41.1803 41.2552 38.7804 43.1213 36.3324 42.2952C31.3044 40.5987 23.4997 37.3685 18.5529 32.4216C13.606 27.4748 10.3758 19.6701 8.67928 14.6422C7.85326 12.1941 9.71935 9.79423 12.303 9.79423L17.3757 9.79423Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneIncoming.js

/* harmony default export */ var PhoneIncoming = (IconWrapper('phone-incoming', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 51 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.3757 9.79423C18.1022 9.79423 18.7716 10.1883 19.1243 10.8235L21.5707 15.2303C21.891 15.8073 21.9061 16.5052 21.6109 17.0955L19.2541 21.8092C19.2541 21.8092 19.9371 25.3206 22.7955 28.179C25.654 31.0374 29.1536 31.7086 29.1536 31.7086L33.8665 29.3522C34.4572 29.0568 35.1556 29.0721 35.7328 29.393L40.1521 31.85C40.7868 32.2028 41.1803 32.8719 41.1803 33.598L41.1803 38.6715C41.1803 41.2552 38.7804 43.1213 36.3324 42.2952C31.3044 40.5987 23.4997 37.3685 18.5529 32.4216C13.606 27.4748 10.3758 19.6701 8.67928 14.6422C7.85326 12.1941 9.71935 9.79423 12.303 9.79423L17.3757 9.79423Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20L44 7.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20H31V7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneCall.js

/* harmony default export */ var PhoneCall = (IconWrapper('phone-call', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 52 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44.7796 21.6066C45.0324 19.9108 44.9495 18.1747 44.5309 16.5054C43.978 14.3002 42.8392 12.2118 41.1147 10.4873C39.3902 8.76281 37.3018 7.62409 35.0967 7.07115C33.4274 6.65257 31.6912 6.56967 29.9954 6.82245",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37.1897 20.8035C37.4605 18.9869 36.8967 17.0699 35.4983 15.6715C34.0998 14.2731 32.1829 13.7092 30.3663 13.98",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.3757 9.79423C18.1022 9.79423 18.7716 10.1883 19.1243 10.8235L21.5707 15.2303C21.891 15.8073 21.9061 16.5052 21.6109 17.0955L19.2541 21.8091C19.2541 21.8091 19.9371 25.3206 22.7955 28.179C25.654 31.0374 29.1536 31.7086 29.1536 31.7086L33.8665 29.3522C34.4572 29.0568 35.1556 29.0721 35.7328 29.393L40.1521 31.85C40.7868 32.2028 41.1803 32.8719 41.1803 33.598L41.1803 38.6715C41.1803 41.2552 38.7804 43.1213 36.3323 42.2952C31.3044 40.5987 23.4997 37.3685 18.5529 32.4216C13.606 27.4748 10.3758 19.6701 8.67929 14.6422C7.85326 12.1941 9.71935 9.79423 12.303 9.79423L17.3757 9.79423Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneOutgoingOne.js

/* harmony default export */ var PhoneOutgoingOne = (IconWrapper('phone-outgoing-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 52 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.3756 9.79423C18.1022 9.79423 18.7716 10.1883 19.1242 10.8235L21.5707 15.2303C21.891 15.8073 21.906 16.5052 21.6109 17.0955L19.2541 21.8092C19.2541 21.8092 19.937 25.3206 22.7955 28.179C25.6539 31.0374 29.1536 31.7086 29.1536 31.7086L33.8665 29.3522C34.4572 29.0568 35.1556 29.0721 35.7328 29.393L40.1521 31.85C40.7867 32.2028 41.1803 32.8719 41.1803 33.598L41.1803 38.6715C41.1803 41.2552 38.7804 43.1213 36.3323 42.2952C31.3044 40.5987 23.4997 37.3685 18.5528 32.4216C13.606 27.4748 10.3758 19.6701 8.67925 14.6422C7.85323 12.1941 9.71932 9.79423 12.303 9.79423L17.3756 9.79423Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 6L46 14L38 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 14.0083H46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneIncomingOne.js

/* harmony default export */ var PhoneIncomingOne = (IconWrapper('phone-incoming-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 52 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.3756 9.79423C18.1022 9.79423 18.7716 10.1883 19.1242 10.8235L21.5707 15.2303C21.891 15.8073 21.906 16.5052 21.6109 17.0955L19.2541 21.8092C19.2541 21.8092 19.937 25.3206 22.7955 28.179C25.6539 31.0374 29.1536 31.7086 29.1536 31.7086L33.8665 29.3522C34.4572 29.0568 35.1556 29.0721 35.7328 29.393L40.1521 31.85C40.7867 32.2028 41.1803 32.8719 41.1803 33.598L41.1803 38.6715C41.1803 41.2552 38.7804 43.1213 36.3323 42.2952C31.3044 40.5987 23.4997 37.3685 18.5528 32.4216C13.606 27.4748 10.3758 19.6701 8.67925 14.6422C7.85323 12.1941 9.71932 9.79423 12.303 9.79423L17.3756 9.79423Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.2404 6L30.2404 14L38.2404 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M46.2404 14.0083H30.2404",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneMissed.js

/* harmony default export */ var PhoneMissed = (IconWrapper('phone-missed', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 49 50",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.9963 8.68583C17.7228 8.68583 18.3922 9.07985 18.7449 9.71509L21.1913 14.1219C21.5116 14.6989 21.5267 15.3968 21.2315 15.9871L18.8747 20.7008C18.8747 20.7008 19.5577 24.2122 22.4161 27.0706C25.2746 29.929 28.7742 30.6002 28.7742 30.6002L33.4871 28.2438C34.0778 27.9484 34.7762 27.9637 35.3534 28.2846L39.7727 30.7416C40.4074 31.0945 40.8009 31.7635 40.8009 32.4896L40.8009 37.5631C40.8009 40.1468 38.401 42.0129 35.953 41.1868C30.925 39.4903 23.1203 36.2601 18.1735 31.3132C13.2267 26.3664 9.99643 18.5617 8.29989 13.5338C7.47387 11.0857 9.33996 8.68583 11.9236 8.68583L16.9963 8.68583Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39.7351 9.28589L31.2498 17.7712",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.2498 9.28596L39.735 17.7712",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneOff.js

/* harmony default export */ var PhoneOff = (IconWrapper('phone-off', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.4438 21.5001C19.017 20.4326 18.8747 19.7007 18.8747 19.7007L21.2315 14.987C21.5266 14.3968 21.5116 13.6989 21.1913 13.1219L18.7448 8.71505C18.3922 8.07981 17.7228 7.68579 16.9962 7.68579L11.9236 7.68579C9.33993 7.68578 7.47453 10.088 8.30063 12.536C9.5121 16.126 11.5052 21.1307 14.3465 25.5001M26.6772 28.9116C27.9041 29.4333 28.7742 29.6002 28.7742 29.6002L33.4871 27.2437C34.0778 26.9484 34.7762 26.9637 35.3534 27.2846L39.7727 29.7416C40.4073 30.0944 40.8009 30.7635 40.8009 31.4896L40.8009 36.5631C40.8009 39.1467 38.3973 41.0117 35.9493 40.1856C32.2021 38.921 26.9142 36.8049 22.4161 33.7618",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 8L8 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Layers.js

/* harmony default export */ var Layers = (IconWrapper('layers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 11.9143L24 19L44 11.9143L24 5L4 11.9143Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20L24 27L44 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 27.9999L24 34.9999L44 27.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36L24 43L44 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Workbench.js

/* harmony default export */ var Workbench = (IconWrapper('workbench', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("polygon", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "points": "12 33 4 33 4 7 44 7 44 33 36 33"
    }
  }), h("path", {
    "attrs": {
      "d": "M16,22 L16,26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,33 L24,39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24,18 L24,26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32,14 L32,26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12,41 L36,41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Speed.js

/* harmony default export */ var Speed = (IconWrapper('speed', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 58",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34.0234 6.68921C31.0764 4.97912 27.6525 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 20.3727 43.0344 16.9709 41.3461 14.0377",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.9498 16.0502C31.9498 16.0502 28.5621 25.0947 27.0001 26.6568C25.438 28.2189 22.9053 28.2189 21.3432 26.6568C19.7811 25.0947 19.7811 22.562 21.3432 20.9999C22.9053 19.4378 31.9498 16.0502 31.9498 16.0502Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Equalizer.js

/* harmony default export */ var Equalizer = (IconWrapper('equalizer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 16V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 6V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 16C13.7614 16 16 13.7614 16 11C16 8.23858 13.7614 6 11 6C8.23858 6 6 8.23858 6 11C6 13.7614 8.23858 16 11 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29C26.7614 29 29 26.7614 29 24C29 21.2386 26.7614 19 24 19C21.2386 19 19 21.2386 19 24C19 26.7614 21.2386 29 24 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 42C39.7614 42 42 39.7614 42 37C42 34.2386 39.7614 32 37 32C34.2386 32 32 34.2386 32 37C32 39.7614 34.2386 42 37 42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tool.js

/* harmony default export */ var Tool = (IconWrapper('tool', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 16C44 22.6274 38.6274 28 32 28C29.9733 28 28.0639 27.4975 26.3896 26.6104L9 44L4 39L21.3896 21.6104C20.5025 19.9361 20 18.0267 20 16C20 9.37258 25.3726 4 32 4C34.0267 4 35.9361 4.50245 37.6104 5.38959L30 13L35 18L42.6104 10.3896C43.4975 12.0639 44 13.9733 44 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CityOne.js

/* harmony default export */ var CityOne = (IconWrapper('city-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "22",
      "width": "12",
      "height": "20",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "4",
      "width": "20",
      "height": "38",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 32.0083H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32.0083H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 23.0083H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 14.0083H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SpeedOne.js

/* harmony default export */ var SpeedOne = (IconWrapper('speed-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30.2972 18.7786C30.2972 18.7786 27.0679 27.8808 25.5334 29.4699C23.9988 31.0591 21.4665 31.1033 19.8774 29.5687C18.2882 28.0341 18.244 25.5018 19.7786 23.9127C21.3132 22.3236 30.2972 18.7786 30.2972 18.7786Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.8492 38.8492C42.6495 35.049 45 29.799 45 24C45 12.402 35.598 3 24 3C12.402 3 3 12.402 3 24C3 29.799 5.35051 35.049 9.15076 38.8492",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.8454 11.1421L35.7368 13.6593",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.5225 27.2328L38.6251 26.333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.47749 27.2328L9.37497 26.333",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.15463 11.1421L12.2632 13.6593",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Trace.js

/* harmony default export */ var Trace = (IconWrapper('trace', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6C14.0589 6 6 14.0589 6 24C6 33.9411 14.0589 42 24 42V42C33.9411 42 42 33.9411 42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15C19.0294 15 15 19.0294 15 24C15 28.9706 19.0294 33 24 33C28.9706 33 33 28.9706 33 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24.0001L30.3 17.6943",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.3 11.4264V17.7H36.6251L42.0001 12.3002H35.7033V6L30.3 11.4264Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Drag.js

/* harmony default export */ var Drag = (IconWrapper('drag', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19 10.3075C19 12.6865 17.2091 14.615 15 14.615C12.7909 14.615 11 12.6865 11 10.3075C11 7.92854 12.7909 6 15 6C17.2091 6 19 7.92854 19 10.3075ZM15 28.615C17.2091 28.615 19 26.6865 19 24.3075C19 21.9285 17.2091 20 15 20C12.7909 20 11 21.9285 11 24.3075C11 26.6865 12.7909 28.615 15 28.615ZM15 42.615C17.2091 42.615 19 40.6865 19 38.3075C19 35.9285 17.2091 34 15 34C12.7909 34 11 35.9285 11 38.3075C11 40.6865 12.7909 42.615 15 42.615Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M37 10.3075C37 12.6865 35.2091 14.615 33 14.615C30.7909 14.615 29 12.6865 29 10.3075C29 7.92854 30.7909 6 33 6C35.2091 6 37 7.92854 37 10.3075ZM33 28.615C35.2091 28.615 37 26.6865 37 24.3075C37 21.9285 35.2091 20 33 20C30.7909 20 29 21.9285 29 24.3075C29 26.6865 30.7909 28.615 33 28.615ZM33 42.615C35.2091 42.615 37 40.6865 37 38.3075C37 35.9285 35.2091 34 33 34C30.7909 34 29 35.9285 29 38.3075C29 40.6865 30.7909 42.615 33 42.615Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Key.js

/* harmony default export */ var Key = (IconWrapper('key', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.8682 24.298C25.4105 26.7933 26.4138 30.4523 25.4971 33.886C24.5805 37.3198 21.8844 40.0016 18.4325 40.9135C14.9806 41.8253 11.3022 40.8273 8.79375 38.2984C5.02208 34.4138 5.07602 28.2392 8.91499 24.4204C12.754 20.6016 18.9613 20.548 22.8664 24.2998L22.8682 24.298Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 24L40 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.3054 16.9L35.7339 22.3L42.0673 16L36.6387 10.6L30.3054 16.9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ring.js

/* harmony default export */ var Ring = (IconWrapper('ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9999 11.619C26.0928 11.619 27.7894 9.91347 27.7894 7.80952C27.7894 5.70558 26.0928 4 23.9999 4C21.9071 4 20.2104 5.70558 20.2104 7.80952C20.2104 9.91347 21.9071 11.619 23.9999 11.619Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.78947 40.1906C11.8823 40.1906 13.5789 38.485 13.5789 36.3811C13.5789 34.2771 11.8823 32.5715 9.78947 32.5715C7.69661 32.5715 6 34.2771 6 36.3811C6 38.485 7.69661 40.1906 9.78947 40.1906Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.2106 40.1906C40.3035 40.1906 42.0001 38.485 42.0001 36.3811C42.0001 34.2771 40.3035 32.5715 38.2106 32.5715C36.1177 32.5715 34.4211 34.2771 34.4211 36.3811C34.4211 38.485 36.1177 40.1906 38.2106 40.1906Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.1426 10.3142C38.444 13.4629 41.9999 19.2664 41.9999 25.9048C41.9999 26.4816 41.9731 27.0522 41.9206 27.6152V27.6152",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0137 42.575C28.8583 43.4926 26.488 44.0001 23.9999 44.0001C21.5118 44.0001 19.1416 43.4926 16.9861 42.575",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.07936 27.6152C6.02685 27.0522 6 26.4816 6 25.9048C6 19.2664 9.5559 13.4629 14.8573 10.3142",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RingOne.js

/* harmony default export */ var RingOne = (IconWrapper('ring-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.9999 11.2727C26.0082 11.2727 27.6363 9.64467 27.6363 7.63636C27.6363 5.62806 26.0082 4 23.9999 4C21.9916 4 20.3635 5.62806 20.3635 7.63636C20.3635 9.64467 21.9916 11.2727 23.9999 11.2727Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9999 44C26.0082 44 27.6363 42.372 27.6363 40.3637C27.6363 38.3554 26.0082 36.7273 23.9999 36.7273C21.9916 36.7273 20.3635 38.3554 20.3635 40.3637C20.3635 42.372 21.9916 44 23.9999 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.63636 27.6363C9.64467 27.6363 11.2727 26.0082 11.2727 23.9999C11.2727 21.9916 9.64467 20.3635 7.63636 20.3635C5.62806 20.3635 4 21.9916 4 23.9999C4 26.0082 5.62806 27.6363 7.63636 27.6363Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.3637 27.6363C42.372 27.6363 44 26.0082 44 23.9999C44 21.9916 42.372 20.3635 40.3637 20.3635C38.3554 20.3635 36.7273 21.9916 36.7273 23.9999C36.7273 26.0082 38.3554 27.6363 40.3637 27.6363Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.7339 10.1597C34.7916 11.4609 36.539 13.2084 37.8403 15.266",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37.8403 32.7339C36.539 34.7916 34.7916 36.539 32.7339 37.8403",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.266 37.8403C13.2084 36.539 11.4609 34.7916 10.1597 32.7339",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.1597 15.266C11.4609 13.2084 13.2084 11.4609 15.266 10.1597",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Creative.js

/* harmony default export */ var Creative = (IconWrapper('creative', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 39V9.00003C42 7.34317 40.6569 6.00003 39 6.00003L9.00001 6C7.34315 6 6 7.34315 6.00001 9.00001L6.00007 39C6.00007 40.6569 7.34321 42 9.00006 42H39C40.6569 42 42 40.6569 42 39Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.9994 18.3158L21.1038 24.2263L14.5264 25.18L19.2911 29.8382L18.1521 36.3158L23.9994 33.1986L29.8479 36.3158L28.7173 29.8382L33.4737 25.18L26.9328 24.2263L23.9994 18.3158Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3158 12.6316H29.6842",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pinwheel.js

/* harmony default export */ var Pinwheel = (IconWrapper('pinwheel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 4V21H11L21 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 44V27H37L27 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 11L44 21H27L27 11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 37L4 27H21L21 37Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RecycleBin.js

/* harmony default export */ var RecycleBin = (IconWrapper('recycle-bin', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 18L24 4.5L32 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 28.5L46 42H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.6913 41.6782L1.99994 41.8564L9.99994 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 29H30.8217",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fire.js

/* harmony default export */ var Fire = (IconWrapper('fire', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C32.2347 44 38.9998 37.4742 38.9998 29.0981C38.9998 27.0418 38.8953 24.8375 37.7555 21.4116C36.6157 17.9858 36.3861 17.5436 35.1809 15.4279C34.666 19.7454 31.911 21.5448 31.2111 22.0826C31.2111 21.5231 29.5445 15.3359 27.0176 11.6339C24.537 8 21.1634 5.61592 19.1853 4C19.1853 7.06977 18.3219 11.6339 17.0854 13.9594C15.8489 16.2849 15.6167 16.3696 14.0722 18.1002C12.5278 19.8308 11.8189 20.3653 10.5274 22.4651C9.23596 24.565 9 27.3618 9 29.4181C9 37.7942 15.7653 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FingerprintThree.js

/* harmony default export */ var FingerprintThree = (IconWrapper('fingerprint-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.4309 12.0391C37.7023 7.38257 31.1542 4.5 23.9187 4.5C16.7257 4.5 10.2121 7.34876 5.48999 11.9571",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.66675 29.4743V29.4167C6.66675 19.8437 14.4271 12.0833 24.0001 12.0833",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.1694 13.6309C37.1649 16.3582 41.3333 22.4006 41.3333 29.4167V29.4296",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.25 37V29.4167C14.25 24.0319 18.6152 19.6667 24 19.6667C29.3848 19.6667 33.75 24.0319 33.75 29.4167V37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.5261 43.5C19.489 43.0154 20.75 40.9456 20.75 39.196C20.75 37.3354 20.75 34.4367 20.75 30.5C20.75 28.7051 22.2051 27.25 24 27.25C25.795 27.25 27.25 28.7051 27.25 30.5V39.196",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Entertainment.js

/* harmony default export */ var Entertainment = (IconWrapper('entertainment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 24C21.5228 24 26 19.5228 26 14C26 8.47715 21.5228 4 16 4C10.4772 4 6 8.47715 6 14C6 19.5228 10.4772 24 16 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 15.202C26.0144 15.2163 30.7229 21.1376 40.1256 32.9656C40.4562 33.363 40.4295 33.9468 40.064 34.3124L35.9805 38.3959C35.615 38.7614 35.0311 38.7881 34.6338 38.4575L17.8222 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.47 24.4701L29.2984 27.2985",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 44.0864C18.9166 41.5881 21.2468 40.3389 23.9906 40.3389C28.1063 40.3389 32.9629 45.5097 37.1063 44.798C41.2496 44.0864 42.4355 40 39.8851 37.7375",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Performance.js

/* harmony default export */ var Performance = (IconWrapper('performance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 21.2883 43.4603 18.7026 42.4825 16.3446C42.2308 15.7376 41.9501 15.1457 41.6421 14.5707",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 10C37.2091 10 39 8.65685 39 7C39 5.34315 37.2091 4 35 4C32.7909 4 31 5.34315 31 7C31 8.65685 32.7909 10 35 10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C27.866 31 31 27.866 31 24C31 20.134 27.866 17 24 17C20.134 17 17 20.134 17 24C17 27.866 20.134 31 24 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 6.5V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sleep.js

/* harmony default export */ var Sleep = (IconWrapper('sleep', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.8657 7.46922C16.3036 9.21179 16 11.0704 16 13C16 22.9411 24.0589 31 34 31C36.5346 31 38.9468 30.4761 41.1343 29.5308C38.8006 36.766 32.0116 42 24 42C14.0589 42 6 33.9411 6 24C6 16.5935 10.4734 10.2317 16.8657 7.46922Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.6605 10H41L31 18H41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConnectionBox.js

/* harmony default export */ var ConnectionBox = (IconWrapper('connection-box', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M43 4H5C4.44772 4 4 4.48842 4 5.09091V14.9091C4 15.5116 4.44772 16 5 16H43C43.5523 16 44 15.5116 44 14.9091V5.09091C44 4.48842 43.5523 4 43 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43 32H5C4.44772 32 4 32.4884 4 33.0909V42.9091C4 43.5116 4.44772 44 5 44H43C43.5523 44 44 43.5116 44 42.9091V33.0909C44 32.4884 43.5523 32 43 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 16V24.0083L34 24.0172V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 38H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 10H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HourglassNull.js

/* harmony default export */ var HourglassNull = (IconWrapper('hourglass-null', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 3.500000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,0.5 L34,0.5",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M0,40.5 L34,40.5",
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30,20.4999965 C27.3333333,33.8388874 23,40.5055541 17,40.4999965 C11,40.494439 6.66666667,33.8277723 4,20.4999965 L30,20.4999965 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "transform": "translate(17.000000, 30.499998) rotate(180.000000) translate(-17.000000, -30.499998) "
    }
  }), h("path", {
    "attrs": {
      "d": "M30,0.5 C27.3333333,13.8388909 23,20.5055575 17,20.5 C11,20.4944425 6.66666667,13.8277758 4,0.5 L30,0.5 Z",
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HourglassFull.js

/* harmony default export */ var HourglassFull = (IconWrapper('hourglass-full', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 3.500000)",
      "stroke-width": props.strokeWidth
    }
  }, [h("path", {
    "attrs": {
      "d": "M0,0.5 L34,0.5",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M0,40.5 L34,40.5",
      "stroke": props.colors[0],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30,20.4999965 C27.3333333,33.8388874 23,40.5055541 17,40.4999965 C11,40.494439 6.66666667,33.8277723 4,20.4999965 L30,20.4999965 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "transform": "translate(17.000000, 30.499998) rotate(180.000000) translate(-17.000000, -30.499998) "
    }
  }), h("path", {
    "attrs": {
      "d": "M30,0.5 C27.3333333,13.8388909 23,20.5055575 17,20.5 C11,20.4944425 6.66666667,13.8277758 4,0.5 L30,0.5 Z",
      "stroke": props.colors[0],
      "fill": props.colors[1],
      "fill-rule": "nonzero"
    }
  }), h("path", {
    "attrs": {
      "d": "M14,11.5 L20,11.5",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12,34.5 L22,34.5",
      "stroke": props.colors[2],
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dashboard.js

/* harmony default export */ var Dashboard = (IconWrapper('dashboard', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8.44365 41.5564C4.46243 37.5751 2 32.0751 2 26C2 13.8497 11.8497 4 24 4C36.1503 4 46 13.8497 46 26C46 32.0751 43.5376 37.5751 39.5564 41.5564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.1005 35.8995C11.567 33.366 10 29.866 10 26C10 18.268 16.268 12 24 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 26V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MaterialTwo.js

/* harmony default export */ var MaterialTwo = (IconWrapper('material-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36C30.6274 36 36 30.6274 36 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlidingVertical.js

/* harmony default export */ var SlidingVertical = (IconWrapper('sliding-vertical', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 20L24 16L28 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 28L24 32L28 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SlidingHorizontal.js

/* harmony default export */ var SlidingHorizontal = (IconWrapper('sliding-horizontal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20L32 24L28 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 20L16 24L20 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Carousel.js

/* harmony default export */ var Carousel = (IconWrapper('carousel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 11C4 9.89543 4.89543 9 6 9H42C43.1046 9 44 9.89543 44 11V35C44 36.1046 43.1046 37 42 37H6C4.89543 37 4 36.1046 4 35V11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "17",
      "width": "8",
      "height": "12",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 17H36V29H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17H12V29H4",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 13V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mouth.js

/* harmony default export */ var Mouth = (IconWrapper('mouth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24C4 24 10 15 14 15C18 15 22 17 24 17C26 17 30 15 34 15C38 15 44 24 44 24C44 24 34 34 24 34C14 34 4 24 4 24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 24H44H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 24 10 15 14 15C18 15 22 17 24 17C26 17 30 15 34 15C38 15 44 24 44 24M4 24C4 24 14 34 24 34C34 34 44 24 44 24M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dollar.js

/* harmony default export */ var Dollar = (IconWrapper('dollar', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 2V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 6C35 6 24.9706 6 20 6C15.0294 6 11 10.0294 11 15C11 19.9706 15.0294 24 20 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 42C13 42 23.0294 42 28 42C32.9706 42 37 37.9706 37 33C37 28.0294 32.9706 24 28 24H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Contrast.js

/* harmony default export */ var Contrast = (IconWrapper('contrast', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V12C17.3726 12 12 17.3726 12 24C12 30.6274 17.3726 36 24 36Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RockGesture.js

/* harmony default export */ var RockGesture = (IconWrapper('rock-gesture', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 25C24 25 24 8.5 24 7.5C24 6.21875 24.5 4 27 4C29.5 4 30 6.21875 30 7.5C30 8 30 30 30 30C30 30 35.7031 24.2969 37 23C38.2969 21.7031 40.0781 21.0781 41.5 22.5C42.9219 23.9219 43.0938 25.4063 41.5 27C39.9063 28.5937 35 33.5 35 33.5C35 33.5 29.0938 44 26 44C22.9063 44 13 44 13 44C13 44 10 44 8.00002 42C6.00002 40 6.00002 37.5 6.00002 37.5C6.00002 37.5 5.99998 13.5 6.00002 12.7812C6.00005 12.0625 6.50002 10 9.00002 10C11.5 10 12 12 12 12.7812C12 13.5 12 25 12 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "19",
      "width": "6",
      "height": "12",
      "rx": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "19",
      "width": "6",
      "height": "12",
      "rx": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DashboardCar.js

/* harmony default export */ var DashboardCar = (IconWrapper('dashboard-car', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6.57198 37.428C3.70527 33.7128 2 29.0556 2 24C2 11.8497 11.8497 2 24 2C36.1503 2 46 11.8497 46 24C46 29.0556 44.2947 33.7128 41.428 37.428",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.3035 31.6965C10.8474 29.4881 10 26.843 10 24C10 16.268 16.268 10 24 10C31.732 10 38 16.268 38 24C38 26.843 37.1526 29.4881 35.6965 31.6965",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 30L40 46H8L24 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ZoomInternal.js

/* harmony default export */ var ZoomInternal = (IconWrapper('zoom-internal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4V16H4",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 24V36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 36L24 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 6V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 4L27 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InsertCard.js

/* harmony default export */ var InsertCard = (IconWrapper('insert-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 18H4L4 6H44V18H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 12L4 41H44L36 12H12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ColorFilter.js

/* harmony default export */ var ColorFilter = (IconWrapper('color-filter', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 40.9443C26.123 42.8445 28.9266 43.9999 32 43.9999C38.6274 43.9999 44 38.6273 44 31.9999C44 26.4084 40.1757 21.7101 35 20.3779",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 20.3779C7.82432 21.7101 4 26.4084 4 31.9999C4 38.6273 9.37258 43.9999 16 43.9999C22.6274 43.9999 28 38.6273 28 31.9999C28 30.4504 27.7063 28.9696 27.1716 27.6099",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28C30.6274 28 36 22.6274 36 16C36 9.37258 30.6274 4 24 4C17.3726 4 12 9.37258 12 16C12 22.6274 17.3726 28 24 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TeaDrink.js

/* harmony default export */ var TeaDrink = (IconWrapper('tea-drink', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M2 20C2 32.1503 8 42 20 42C32 42 38 32.1503 38 20H2Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 14V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 14V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 14V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.1904 30.6229C37.1802 28.039 37.764 25.1374 37.9417 22.0511C38.2868 22.0174 38.6402 22 39 22C42.866 22 46 24.0147 46 26.5C46 28.9853 42.866 31 39 31C38.0007 31 37.0504 30.8654 36.1904 30.6229Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Noodles.js

/* harmony default export */ var Noodles = (IconWrapper('noodles', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 24C4 35.0457 10.6667 44 24 44C37.3333 44 44 35.0457 44 24H4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13L44 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TreeList.js

/* harmony default export */ var TreeList = (IconWrapper('tree-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "18",
      "y": "20",
      "width": "20",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "6",
      "width": "14",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "34",
      "width": "26",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 10H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 24H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 38H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 44V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ranking.js

/* harmony default export */ var Ranking = (IconWrapper('ranking', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "18",
      "width": "13",
      "height": "24",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "17",
      "y": "6",
      "width": "13",
      "height": "36",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "30",
      "y": "26",
      "width": "13",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fan.js

/* harmony default export */ var Fan = (IconWrapper('fan', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.0139 27.7553L4.02783 24.5106C5.39825 20.2929 8.06873 16.6173 11.6565 14.0106C15.2443 11.404 19.5653 10 24 10C28.4348 10 32.7557 11.404 36.3435 14.0106C39.9313 16.6173 42.6018 20.2929 43.9722 24.5106L33.9861 27.7553M14.0139 27.7553C14.6991 25.6465 16.0344 23.8087 17.8283 22.5053M14.0139 27.7553L24 31M17.8283 22.5053C19.6222 21.202 21.7826 20.5 24 20.5M17.8283 22.5053L24 31M24 20.5C26.2174 20.5 28.3779 21.202 30.1718 22.5053M24 20.5V31M30.1718 22.5053C31.9657 23.8087 33.3009 25.6465 33.9861 27.7553M30.1718 22.5053L24 31M33.9861 27.7553L24 31M24 31V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwitchTrack.js

/* harmony default export */ var SwitchTrack = (IconWrapper('switch-track', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 4V18L8 30L8 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 22V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 9V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 44V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 31V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Click.js

/* harmony default export */ var Click = (IconWrapper('click', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M22 22L42 26L36 30L42 36L36 42L30 36L26 42L22 22Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 9.85795L32.4853 15.5148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85787 38.1421L15.5147 32.4852",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85783 9.85787L15.5147 15.5147",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UsbOne.js

/* harmony default export */ var UsbOne = (IconWrapper('usb-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd"
    }
  }, [h("g", [h("rect", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "stroke-linejoin": props.strokeLinejoin,
      "x": "6",
      "y": "21",
      "width": "36",
      "height": "21"
    }
  }), h("polyline", {
    "attrs": {
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "points": "14 21 14 6 14 6 34 6 34 21"
    }
  }), h("path", {
    "attrs": {
      "d": "M20,12 L20,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28,12 L28,14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CheckCorrect.js

/* harmony default export */ var CheckCorrect = (IconWrapper('check-correct', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 18V39C42 40.6569 40.6569 42 39 42H9C7.34315 42 6 40.6569 6 39V9C6 7.34315 7.34315 6 9 6H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 20L24 28L42 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Vip.js

/* harmony default export */ var Vip = (IconWrapper('vip', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 4H4L15 44H23L12 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 44L44 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IdCardV.js

/* harmony default export */ var IdCardV = (IconWrapper('id-card-v', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19C26.2091 19 28 17.2091 28 15C28 12.7909 26.2091 11 24 11C21.7909 11 20 12.7909 20 15C20 17.2091 21.7909 19 24 19Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 25C30 21.6863 27.3137 19 24 19C20.6863 19 18 21.6863 18 25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 31H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 37H25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Shop.js

/* harmony default export */ var Shop = (IconWrapper('shop', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 12H44V20L42.6015 20.8391C40.3847 22.1692 37.6153 22.1692 35.3985 20.8391L34 20L32.6015 20.8391C30.3847 22.1692 27.6153 22.1692 25.3985 20.8391L24 20L22.6015 20.8391C20.3847 22.1692 17.6153 22.1692 15.3985 20.8391L14 20L12.6015 20.8391C10.3847 22.1692 7.61531 22.1692 5.39853 20.8391L4 20V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 22.4889V44H40V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 11.8222V4H40V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "19",
      "y": "32",
      "width": "10",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BezierCurve.js

/* harmony default export */ var BezierCurve = (IconWrapper('bezier-curve', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "30",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "30",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "10",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 14H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 14H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 30.0001C8 22.5447 13.0991 16.2803 20 14.5042",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 14.5042C34.9009 16.2803 40 22.5447 40 30.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BigX.js

/* harmony default export */ var BigX = (IconWrapper('big-x', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 6H44L15 42H4L33 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 6H4L33 42H44L15 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Laptop.js

/* harmony default export */ var Laptop = (IconWrapper('laptop', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "8",
      "width": "32",
      "height": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 28L4 41H44L40 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.9 35H28.1L30 41H18L19.9 35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TrendTwo.js

/* harmony default export */ var TrendTwo = (IconWrapper('trend-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 26L12 28V38H4V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24L28 20V38H20V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 16L44 12V38H36V16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 18L12 20L44 4H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterLevel.js

/* harmony default export */ var WaterLevel = (IconWrapper('water-level', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C32.2843 44 39 37.2843 39 29C39 15 24 4 24 4C24 4 9 15 9 29C9 37.2843 15.7157 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 29C9 37.2843 15.7157 44 24 44C32.2843 44 39 37.2843 39 29C39 29 30 32 24 29C18 26 9 29 9 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sinusoid.js

/* harmony default export */ var Sinusoid = (IconWrapper('sinusoid', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24C4 24 6 4 14 4C22 4 23 19 24 24C25 29 28 44 35 44C42 44 44 24 44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 24H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 24H37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShareSys.js

/* harmony default export */ var ShareSys = (IconWrapper('share-sys', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.3654 41.6322C6.44902 37.9812 4 32.7766 4 27C4 15.9543 12.9543 7 24 7C35.0457 7 44 15.9543 44 27C44 32.7766 41.551 37.9812 37.6346 41.6322",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.1375 36.5109C12.5919 34.1378 11 30.7548 11 27C11 19.8203 16.8203 14 24 14C31.1797 14 37 19.8203 37 27C37 30.7548 35.4081 34.1378 32.8625 36.5109",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.9096 31.3897C18.7347 30.2944 18 28.733 18 27C18 23.6863 20.6863 21 24 21C27.3137 21 30 23.6863 30 27C30 28.733 29.2653 30.2944 28.0904 31.3897",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FingerprintTwo.js

/* harmony default export */ var FingerprintTwo = (IconWrapper('fingerprint-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 44V22C19 18.6863 21.6863 16 25 16C28.3137 16 31 18.6863 31 22V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 44V22C13 15.3726 18.3726 10 25 10C31.6274 10 37 15.3726 37 22V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 44V22C7 12.0589 15.0589 4 25 4C34.9411 4 43 12.0589 43 22V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 44V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClickTapTwo.js

/* harmony default export */ var ClickTapTwo = (IconWrapper('click-tap-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 44V15C11 12.7909 12.7909 11 15 11C17.2091 11 19 12.7909 19 15V35L42 40V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 25.2501V25.2501C6.90264 23.65 4 19.664 4 15C4 8.92487 8.92487 4 15 4C21.0751 4 26 8.92487 26 15C26 19.664 23.0974 23.65 19 25.2501",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RadarChart.js

/* harmony default export */ var RadarChart = (IconWrapper('radar-chart', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 3L34.9504 10.928L45.8743 18.8926L41.7182 31.757L37.5191 44.6074L24 44.63L10.4809 44.6074L6.28182 31.757L2.1257 18.8926L13.0496 10.928L24 3Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 3L24.0135 25.9814L45.8743 18.8926L24.0219 26.0071L37.5191 44.6074L24 26.023L10.4809 44.6074L23.9781 26.0071L2.1257 18.8926L23.9865 25.9814L24 3Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 13L30.1894 17.4811L36.3637 21.9828L34.0146 29.2539L31.6412 36.5172L24 36.53L16.3588 36.5172L13.9854 29.2539L11.6363 21.9828L17.8106 17.4811L24 13Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Leaves.js

/* harmony default export */ var Leaves = (IconWrapper('leaves', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31 43C31 43 18 44 11 36C4 28 4 4 4 4C4 4 28 3 36 9C44 15 42 32 42 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44C44 44 32.8207 35.5515 26 28C19.1793 20.4485 16 13 16 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 28L27 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 28L16 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IdCardH.js

/* harmony default export */ var IdCardH = (IconWrapper('id-card-h', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "32",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 25C19.2091 25 21 23.2091 21 21C21 18.7909 19.2091 17 17 17C14.7909 17 13 18.7909 13 21C13 23.2091 14.7909 25 17 25Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 31C23 27.6863 20.3137 25 17 25C13.6863 25 11 27.6863 11 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 28H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MapRoadTwo.js

/* harmony default export */ var MapRoadTwo = (IconWrapper('map-road-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 22L38 12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 29L38 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "2 6"
    }
  }), h("path", {
    "attrs": {
      "d": "M10 36L38 26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19L13 11",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 36L34 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hanger.js

/* harmony default export */ var Hanger = (IconWrapper('hanger', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20.7301 27.1255C22.7185 25.833 25.2815 25.833 27.2699 27.1255L42.8202 37.2331C43.556 37.7114 44 38.5295 44 39.4071C44 40.8391 42.8391 42 41.4071 42H6.59288C5.16087 42 4 40.8391 4 39.4071C4 38.5295 4.44395 37.7114 5.17979 37.2331L20.7301 27.1255Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 25C24 25 30 16.3137 30 13C30 9.68629 27.3137 7 24 7C20.6863 7 18 9.68629 18 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cuvette.js

/* harmony default export */ var Cuvette = (IconWrapper('cuvette', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18 10H30V27L44 41V44H4V41L18 27V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.5 37.5L37 34L33.5 30.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.5 37.5L37 34L33.5 30.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.5 30.5L11 34L7.5 37.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.5 30.5L11 34L7.5 37.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 4H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 35H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RadarTwo.js

/* harmony default export */ var RadarTwo = (IconWrapper('radar-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 20V4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ContrastView.js

/* harmony default export */ var ContrastView = (IconWrapper('contrast-view', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "7",
      "y": "7",
      "width": "17",
      "height": "34",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 7H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 7H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 41H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 7V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 15V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 23V25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 31V33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 39V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 41H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PaperMoneyTwo.js

/* harmony default export */ var PaperMoneyTwo = (IconWrapper('paper-money-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 13H44V37H4V13Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 21C8.41828 21 12 17.4183 12 13H4V21Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 29C8.41828 29 12 32.5817 12 37H4V29Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 29V37H36C36 32.5817 39.5817 29 44 29Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 21C39.5817 21 36 17.4183 36 13H44V21Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C26.7614 31 29 28.3137 29 25C29 21.6863 26.7614 19 24 19C21.2386 19 19 21.6863 19 25C19 28.3137 21.2386 31 24 31Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MoreApp.js

/* harmony default export */ var MoreApp = (IconWrapper('more-app', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "16",
      "height": "16",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "28",
      "width": "16",
      "height": "16",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "4",
      "width": "16",
      "height": "16",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 28H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 36H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Crown.js

/* harmony default export */ var Crown = (IconWrapper('crown', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9 40L4 17L14 22L24 8L34 22L44 17L39 40H9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 33C26.2091 33 28 31.2091 28 29C28 26.7909 26.2091 25 24 25C21.7909 25 20 26.7909 20 29C20 31.2091 21.7909 33 24 33Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BedsideTwo.js

/* harmony default export */ var BedsideTwo = (IconWrapper('bedside-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "18",
      "width": "40",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "30",
      "width": "40",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 24H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 36H26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 42V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 42V46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32 10C32 5.58172 28.4183 2 24 2C19.5817 2 16 5.58172 16 10H32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BankCardTwo.js

/* harmony default export */ var BankCardTwo = (IconWrapper('bank-card-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 18V8H4V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "18",
      "width": "40",
      "height": "22",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 29H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 29H22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 29H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FullScreenPlay.js

/* harmony default export */ var FullScreenPlay = (IconWrapper('full-screen-play', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 40H6C4.89543 40 4 39.1046 4 38V10C4 8.89543 4.89543 8 6 8H42C43.1046 8 44 8.89543 44 10V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "24",
      "y": "24",
      "width": "20",
      "height": "16",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Parabola.js

/* harmony default export */ var Parabola = (IconWrapper('parabola', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 25H6C12 25 16 9 24 9C32 9 36 25 42 25H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 33V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 33V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 33V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CardTwo.js

/* harmony default export */ var CardTwo = (IconWrapper('card-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28 12V4L8 14V42L20 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 16L40 6V34L20 44V16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ContrastViewCircle.js

/* harmony default export */ var ContrastViewCircle = (IconWrapper('contrast-view-circle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C35.0457 4 44 12.9543 44 24C44 35.0457 35.0457 44 24 44V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CalendarThree.js

/* harmony default export */ var CalendarThree = (IconWrapper('calendar-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "36",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 32H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20V44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20V44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 13V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13L4 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 44H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MultiFunctionKnife.js

/* harmony default export */ var MultiFunctionKnife = (IconWrapper('multi-function-knife', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "18",
      "y": "4",
      "width": "12",
      "height": "40",
      "rx": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 20.3137L37.2426 27.5563C38.8047 29.1184 41.3374 29.1184 42.8995 27.5563C44.4616 25.9943 44.4616 23.4616 42.8995 21.8995L30 9V20.3137Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0711 27.4142L10.8284 20.1716C9.26633 18.6095 6.73367 18.6095 5.17157 20.1716C3.60948 21.7337 3.60948 24.2663 5.17157 25.8284L18.0711 38.7279V27.4142Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 10V11",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 37V38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TestTube.js

/* harmony default export */ var TestTube = (IconWrapper('test-tube', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 4H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C27.3137 44 30 41.3137 30 38V10H18V38C18 41.3137 20.6863 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V21",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 35H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BroadcastRadio.js

/* harmony default export */ var BroadcastRadio = (IconWrapper('broadcast-radio', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "12",
      "width": "40",
      "height": "28",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 31C33.7614 31 36 28.7614 36 26C36 23.2386 33.7614 21 31 21C28.2386 21 26 23.2386 26 26C26 28.7614 28.2386 31 31 31Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 30H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 40V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 40V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12L36 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AnchorTwo.js

/* harmony default export */ var AnchorTwo = (IconWrapper('anchor-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 24H4C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 14C26.7614 14 29 11.7614 29 9C29 6.23858 26.7614 4 24 4C21.2386 4 19 6.23858 19 9C19 11.7614 21.2386 14 24 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WalletTwo.js

/* harmony default export */ var WalletTwo = (IconWrapper('wallet-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 8H44V16C44 16 34 18 34 24C34 30 44 32 44 32V40H4V8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoundSocket.js

/* harmony default export */ var RoundSocket = (IconWrapper('round-socket', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 26L17 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 26L31 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 13V19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Watermelon.js

/* harmony default export */ var Watermelon = (IconWrapper('watermelon', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23 34C34.0457 34 43 25.0457 43 14H3C3 25.0457 11.9543 34 23 34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 23V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.636 20.364L14.5147 22.4853",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.3639 20.364L31.4852 22.4853",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hamburger.js

/* harmony default export */ var Hamburger = (IconWrapper('hamburger', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M44 22C44 12.0589 35.0457 4 24 4C12.9543 4 4 12.0589 4 22H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "38",
      "width": "40",
      "height": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28L9.45455 32L16.7273 28L24 32L31.2727 28L38.5455 32L44 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BusTwo.js

/* harmony default export */ var BusTwo = (IconWrapper('bus-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 28H44V40H4V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 10H44V28H4V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M4 4H44V10H4V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "40",
      "width": "8",
      "height": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "32",
      "y": "40",
      "width": "8",
      "height": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 16H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 34H12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 34H29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 34H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OpenDoor.js

/* harmony default export */ var OpenDoor = (IconWrapper('open-door', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 4V44L42 38V10L20 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 10H20V38H6V10Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 22V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Devices.js

/* harmony default export */ var Devices = (IconWrapper('devices', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22 44H44V4L13 4V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 16H22V44H4L4 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 38H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 38H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MapTwo.js

/* harmony default export */ var MapTwo = (IconWrapper('map-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "10",
      "width": "40",
      "height": "30",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 16L38 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 16L24 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16L10 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterRateTwo.js

/* harmony default export */ var WaterRateTwo = (IconWrapper('water-rate-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C32.8366 44 40 36.8363 40 28C40 15 24 4 24 4C24 4 8 15 8 28C8 36.8366 15.1634 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20L20 28H28L24 36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Lightning.js

/* harmony default export */ var Lightning = (IconWrapper('lightning', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 4H37L26 18H41L17 44L22 25H8L19 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CurveAdjustment.js

/* harmony default export */ var CurveAdjustment = (IconWrapper('curve-adjustment', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 10C32 10 27 14 24 24C21 34 16 38 10 38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Table.js

/* harmony default export */ var Table = (IconWrapper('table', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 16H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 32H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 12V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BuildingFour.js

/* harmony default export */ var BuildingFour = (IconWrapper('building-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M17 14L44 24V44H17L17 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 14L4 24L4 44H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 44V32L26 29L26 44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BuildingTwo.js

/* harmony default export */ var BuildingTwo = (IconWrapper('building-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 13L11 20L11 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M21 4L31 11V24L38 29V44H21V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BuildingOne.js

/* harmony default export */ var BuildingOne = (IconWrapper('building-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M11 14L25 4V44H11V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 13L39 23V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Globe.js

/* harmony default export */ var Globe = (IconWrapper('globe', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37.8261 4C41.6276 7.58886 44 12.6753 44 18.3158C44 29.1871 35.1871 38 24.3158 38C18.6753 38 13.5889 35.6276 10 31.8261",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 32C31.732 32 38 25.732 38 18C38 10.268 31.732 4 24 4C16.268 4 10 10.268 10 18C10 25.732 16.268 32 24 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 44H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BuildingThree.js

/* harmony default export */ var BuildingThree = (IconWrapper('building-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 8L44 21V44H4L4 21L24 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 44V23L12 28L12 44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 44V23L36 28L36 44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 44H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Stickers.js

/* harmony default export */ var Stickers = (IconWrapper('stickers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 24 33.5 27 27 20C20.5 13 24 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24L24 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Effects.js

/* harmony default export */ var Effects = (IconWrapper('effects', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24.9505 42.3604L30.4161 30.3695L43.1044 26.6501L33.3381 17.7699L33.7057 4.60739L22.2041 11.1099L9.74305 6.69445L12.401 19.5935L4.33204 30.0271L17.4763 31.4966L24.9505 42.3604Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.1776 36.0537L44.1776 44.0179",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Beauty.js

/* harmony default export */ var Beauty = (IconWrapper('beauty', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 44C42 44 42 29.6492 42 22C42 12.0589 33.9411 4 24 4C14.0589 4 6 12.0589 6 22C6 28.6625 6 44 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 43C29.5228 43 34 34.0457 34 23H14C14 34.0457 18.4772 43 24 43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Audit.js

/* harmony default export */ var Audit = (IconWrapper('audit', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.99976 36L8.00437 28.0426C8.00527 27.4906 8.45289 27.0432 9.00495 27.0426C12.3389 27.0426 15.6729 27.0426 19.0069 27.0426C19.9284 27.0426 19.9235 26.2252 19.9235 24.2792C19.9235 22.3332 15.0219 20.6941 15.0219 13.8528C15.0219 7.01151 20.0997 5 24.3198 5C28.5399 5 33.1364 7.01151 33.1364 13.8528C33.1364 20.6941 28.2605 21.7818 28.2605 24.2792C28.2605 26.7765 28.2605 27.0426 29.0411 27.0426C32.3607 27.0426 35.6804 27.0426 39.0001 27.0426C39.5523 27.0426 40.0001 27.4904 40.0001 28.0426V36H7.99976Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 42H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Deeplink.js

/* harmony default export */ var Deeplink = (IconWrapper('deeplink', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 34.9929C21 35.8067 21 36.471 21 36.9857C21 37.8714 21 39.2 21 40.9714C21 41.5395 20.5772 42 20.0556 42H4.94444C4.42284 42 4 41.5395 4 40.9714V7.02857C4 6.46051 4.42284 6 4.94444 6H20.0556C20.5772 6 21 6.46051 21 7.02857C21 8.8 21 10.1286 21 11.0143C21 11.529 21 12.1933 21 13.0071",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27 13.0071C27 12.1933 27 11.529 27 11.0143C27 10.1286 27 8.8 27 7.02857C27 6.46051 27.4228 6 27.9444 6H43.0556C43.5772 6 44 6.46051 44 7.02857V40.9714C44 41.5395 43.5772 42 43.0556 42H27.9444C27.4228 42 27 41.5395 27 40.9714C27 39.2 27 37.8714 27 36.9857C27 36.471 27 35.8067 27 34.9929",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12.5 38C13.6046 38 14.5 37.1046 14.5 36C14.5 34.8954 13.6046 34 12.5 34C11.3954 34 10.5 34.8954 10.5 36C10.5 37.1046 11.3954 38 12.5 38Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M35.5 38C36.6046 38 37.5 37.1046 37.5 36C37.5 34.8954 36.6046 34 35.5 34C34.3954 34 33.5 34.8954 33.5 36C33.5 37.1046 34.3954 38 35.5 38Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 23.5H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27.2229 28.2729L28.8139 26.682L31.9959 23.5L28.8139 20.318L27.2229 18.727",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Fm.js

/* harmony default export */ var Fm = (IconWrapper('fm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "22",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.5238 33.0539C22.7619 31.6487 25.2381 31.6486 26.4762 33.0539C27.7143 34.4592 26.4763 43.3608 25.6508 44.2975C24.8254 45.2342 23.1746 45.2342 22.3492 44.2975C21.5238 43.3608 20.2857 34.4591 21.5238 33.0539Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.9668 30.513C33.4289 28.4957 35 25.4313 35 22C35 15.9249 30.0751 11 24 11C17.9249 11 13 15.9249 13 22C13 25.4313 14.5711 28.4957 17.0332 30.513",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.9258 38.1656C37.8928 35.2345 42 29.0969 42 22C42 12.0589 33.9411 4 24 4C14.0589 4 6 12.0589 6 22C6 29.0969 10.1072 35.2345 16.0742 38.1656",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Airpods.js

/* harmony default export */ var Airpods = (IconWrapper('airpods', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 4C31.0294 4 27 8.02944 27 13V44H33V21.4879C33.9383 21.8195 34.9481 22 36 22C39.4829 22 42.5038 20.0216 44 17.1272V8.8728C42.5038 5.97844 39.4829 4 36 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4C16.9706 4 21 8.02944 21 13V44H15V21.4879C14.0617 21.8195 13.0519 22 12 22C8.51707 22 5.49623 20.0216 4 17.1272V8.8728C5.49623 5.97844 8.51707 4 12 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 13H14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 13H34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoadingOne.js

/* harmony default export */ var LoadingOne = (IconWrapper('loading-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 6.67944L32 10.1435",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.3206 14L37.8565 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.3206 34L37.8565 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 41.3206L32 37.8565",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 41.3206L16 37.8565",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.67944 34L10.1435 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.67944 14L10.1435 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 6.67944L16 10.1435",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LoadingTwo.js

/* harmony default export */ var LoadingTwo = (IconWrapper('loading-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 9.85791L32.4852 15.5148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 38.1421L32.4852 32.4852",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 38.1421L15.5148 32.4852",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 9.85791L15.5148 15.5148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.3464 5.52246L17.8772 9.21798",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.52246 16.3462L9.21798 17.8769",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.52246 31.6538L9.21798 30.123",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.3464 42.4777L17.8772 38.7822",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.6538 42.4777L30.123 38.7822",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.4776 31.6538L38.7821 30.123",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42.4776 16.3462L38.7821 17.8769",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.6538 5.52246L30.123 9.21798",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LinkTwo.js

/* harmony default export */ var LinkTwo = (IconWrapper('link-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 19H20C15.5817 19 12 22.5817 12 27C12 31.4183 15.5817 35 20 35H36C40.4183 35 44 31.4183 44 27C44 24.9711 43.2447 23.1186 42 21.7084",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24.2916C4.75527 22.8814 4 21.0289 4 19C4 14.5817 7.58172 11 12 11H28C32.4183 11 36 14.5817 36 19C36 23.4183 32.4183 27 28 27H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Target.js

/* harmony default export */ var Target = (IconWrapper('target', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21.4172 18.5828C19.3962 19.5481 18 21.6109 18 23.9999C18 27.3136 20.6863 29.9999 24 29.9999C26.389 29.9999 28.4519 28.6037 29.4172 26.5828",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.2793 11.7207C26.9392 11.2538 25.4992 11 24 11C16.8203 11 11 16.8203 11 24C11 31.1797 16.8203 37 24 37C31.1797 37 37 31.1797 37 24C37 22.5008 36.7462 21.0608 36.2793 19.7207",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.5675 6.43255C30.7255 4.88151 27.4657 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 20.5343 43.1185 17.2745 41.5675 14.4325",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4L24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Piano.js

/* harmony default export */ var Piano = (IconWrapper('piano', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "24",
      "width": "40",
      "height": "16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 24V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 24V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LatticePattern.js

/* harmony default export */ var LatticePattern = (IconWrapper('lattice-pattern', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 16H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 6V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 14V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 16H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 8H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 14V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 32H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 22V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 30V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 24H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 32H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 22V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 30V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 40H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 38V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 40H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 38V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 40H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FileCabinet.js

/* harmony default export */ var FileCabinet = (IconWrapper('file-cabinet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 4H6V14H42V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 19H6V29H42V19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 34H6V44H42V34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 9H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21 24H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21 39H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoHands.js

/* harmony default export */ var TwoHands = (IconWrapper('two-hands', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 59 49",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.9999 19.9757L42.0174 23.9333L33.3115 30.2403L33.3616 41.9576L39.9999 42.0002L39.6273 33.5147C46.5487 29.1859 50.0095 26.0144 50.0095 24.0002C50.0095 21.986 50.0095 16.6722 50.0095 6.05876",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20.051L18.0331 24.0002L26.4005 30.4159L26.7595 42.1279L20 42.0002L20.2029 33.9087C13.4093 30.0009 10.0126 27.0251 10.0126 24.9812C10.0126 22.9374 10.0126 17.2867 10.0126 6.02919",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MayuraGesture.js

/* harmony default export */ var MayuraGesture = (IconWrapper('mayura-gesture', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20.9951 36.0001L19.0937 31.9909L24.2032 31.573C26.2913 31.573 27.984 29.8796 27.984 27.7907C27.984 25.7018 26.2913 24.0085 24.2032 24.0085C20.4565 24.0085 17.7211 24.0085 15.9972 24.0085C12.6087 24.0085 9 27.5841 9 31.0422C9 34.5004 9.78742 36.481 10.6467 38.3389C11.506 40.1967 13.7968 44.0001 20.016 44.0001C23.986 44.0001 23.4272 44.0001 28.9545 44.0001C34.2029 44.0001 38 39.1456 37.987 33.0001C37.9789 29.1697 37.9814 23.503 37.9944 16.0001C37.9973 14.3483 36.6606 13.007 35.0088 13.0041L35.0036 13.0041C33.3521 13.0041 32.0134 14.3429 32.0134 15.9943C32.0134 15.9964 32.0134 15.9984 32.0134 16.0004C32.0238 21.1411 32.029 24.158 32.029 25.0511C32.029 27.9449 30.6885 28.9423 28.0074 28.0432M25.9546 24.0001L25.9945 7.00012C25.9984 5.34716 24.6616 4.00403 23.0086 4.00015C23.0063 4.00014 23.0039 4.00014 23.0016 4.00014C21.3447 4.00014 20.016 5.34328 20.016 7.00013V23.0402",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.0061 24.0004V10.0004C14.0061 8.34581 15.3474 7.00453 17.0019 7.00453C17.0033 7.00453 17.0047 7.00453 17.0061 7.00453C18.6636 7.00684 20.0061 8.35118 20.0061 10.0087V24.0004",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.0073 20.0197V19.0197C26.0073 17.3628 27.3505 16.0197 29.0073 16.0197C30.6642 16.0197 32.0073 17.3628 32.0073 19.0197V20.0197",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HandDrag.js

/* harmony default export */ var HandDrag = (IconWrapper('hand-drag', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.58303 27.1825C7.86719 28.3543 7.00928 30.2936 7.00928 33.0003C7.00928 37.0604 12.0001 44.0003 16.5006 44.0003C21.001 44.0003 23.6111 44.0003 28.016 44.0003C32.421 44.0003 35.0965 40.1496 35.0965 37.0604C35.0965 32.907 35.0965 28.7537 35.0965 24.6004C35.0965 22.8073 33.6456 21.3523 31.8525 21.3473C30.0659 21.3423 28.6135 22.7866 28.6085 24.5732C28.6085 24.5762 28.6085 24.5793 28.6085 24.5823V24.6837",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10.9812 29.4454V7.66259C10.9812 5.88581 12.4216 4.44545 14.1983 4.44545C15.9751 4.44545 17.4155 5.88581 17.4155 7.66259V23.648",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17.4155 24.0003V19.8078C17.4155 18.259 18.671 17.0036 20.2197 17.0036C21.7684 17.0036 23.0239 18.259 23.0239 19.8078V24.4273",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 24.6584V21.8078C23 20.259 24.2555 19.0036 25.8042 19.0036C27.3529 19.0036 28.6084 20.259 28.6084 21.8078V25.0036",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 8.00014H41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36 12.5001L37.6667 11.0001L41 8.00014L37.6667 5.00014L36 3.50014",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TwoFingers.js

/* harmony default export */ var TwoFingers = (IconWrapper('two-fingers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.5658 27.1826C10.8553 28.3544 10 30.2936 10 33.0003C10 37.0604 14.9753 44.0003 19.4618 44.0003C23.9483 44.0003 26.5502 44.0003 30.9415 44.0003C35.3328 44.0003 38 40.1497 38 37.0604C38 32.7101 38 28.3597 38 24.0094C38 22.3526 36.6569 21.0094 35 21.0094H34.9909C33.3391 21.0094 32 22.3485 32 24.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.9812 29.4453V11.006C13.9812 9.35049 15.3233 8.00844 16.9788 8.00844C16.9815 8.00844 16.9843 8.00844 16.9871 8.00845C18.6485 8.01305 19.9929 9.36119 19.9929 11.0226V24.5921",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19.9929 24.0085V7.01562C19.9929 5.35022 21.343 4.00014 23.0084 4.00014C24.6738 4.00014 26.0239 5.35022 26.0239 7.01562V24.0085",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 23.7159V21.0036C26 19.3467 27.3431 18.0036 29 18.0036C30.6569 18.0036 32 19.3467 32 21.0036V24.0036",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MiddleFinger.js

/* harmony default export */ var MiddleFinger = (IconWrapper('middle-finger', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.9718 26.9747C11.6511 27.5664 9.99072 29.5749 9.99072 33.0003C9.99072 38.1384 15.1438 44.0003 19.7905 44.0003C24.4372 44.0003 27.1321 44.0003 31.6802 44.0003C36.2283 44.0003 38.9907 40.1497 38.9907 37.0604C38.9907 32.7101 38.9907 28.3597 38.9907 24.0094C38.9907 22.3526 37.6476 21.0094 35.9907 21.0094H35.9816C34.3298 21.0094 32.9907 22.3485 32.9907 24.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14.9719 30.0403V21.0132C14.9719 19.3548 16.3163 18.0104 17.9747 18.0104C17.9757 18.0104 17.9767 18.0104 17.9778 18.0104C19.6384 18.0121 20.9836 19.3588 20.9836 21.0194V25.023",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.9836 24.0085V7.01562C20.9836 5.35022 22.3337 4.00014 23.9991 4.00014C25.6645 4.00014 27.0146 5.35022 27.0146 7.01562V24.0085",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.9907 23.7159V21.0036C26.9907 19.3467 28.3339 18.0036 29.9907 18.0036C31.6476 18.0036 32.9907 19.3467 32.9907 21.0036V24.0036",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PaintedEggshell.js

/* harmony default export */ var PaintedEggshell = (IconWrapper('painted-eggshell', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 43.9998C34.2524 43.9998 40 37.0455 40 25.9998C40 14.9542 31.1316 3.99985 24 3.99985C16.8684 3.99985 8 14.9542 8 25.9998C8 37.0455 13.7476 43.9998 24 43.9998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M21 37.9998C22.6569 37.9998 24 36.6567 24 34.9998C24 33.343 22.6569 31.9998 21 31.9998C19.3431 31.9998 18 33.343 18 34.9998C18 36.6567 19.3431 37.9998 21 37.9998Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M16 29.6673C17.1046 29.6673 18 28.7719 18 27.6673C18 26.5628 17.1046 25.6673 16 25.6673C14.8954 25.6673 14 26.5628 14 27.6673C14 28.7719 14.8954 29.6673 16 29.6673Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Balance.js

/* harmony default export */ var Balance = (IconWrapper('balance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 15.9998H4V39.9998H36V15.9998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 31.9998C22.2091 31.9998 24 30.209 24 27.9998C24 25.7907 22.2091 23.9998 20 23.9998C17.7909 23.9998 16 25.7907 16 27.9998C16 30.209 17.7909 31.9998 20 31.9998Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 7.99985H28H44V18.9998V21.7498",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IndexFinger.js

/* harmony default export */ var IndexFinger = (IconWrapper('index-finger', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12.5658 26.1826C10.8553 27.3544 10 29.2936 10 32.0003C10 36.0604 14.9753 43.0003 19.4618 43.0003C23.9483 43.0003 26.5502 43.0003 30.9415 43.0003C35.3328 43.0003 38 39.1497 38 36.0604C38 31.7101 38 27.3597 38 23.0094C38 21.3526 36.6569 20.0094 35 20.0094H34.9909C33.3391 20.0094 32 21.3485 32 23.0003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.9812 28.4453V8.006C13.9812 6.35049 15.3233 5.00844 16.9788 5.00844C16.9815 5.00844 16.9843 5.00844 16.9871 5.00845C18.6485 5.01305 19.9929 6.36119 19.9929 8.02263V23.5921",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19.9929 23.0085V19.0156C19.9929 17.3502 21.343 16.0001 23.0084 16.0001C24.6738 16.0001 26.0239 17.3502 26.0239 19.0156V23.0085",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 22.7159V20.0036C26 18.3467 27.3431 17.0036 29 17.0036C30.6569 17.0036 32 18.3467 32 20.0036V23.0036",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bye.js

/* harmony default export */ var Bye = (IconWrapper('bye', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35 26.6139L15.1463 7.31395C13.9868 6.18686 12.1332 6.21308 11.0062 7.3725C10.9652 7.41459 10.9256 7.45789 10.8873 7.50235C9.74436 8.82907 9.8228 10.814 11.0669 12.0463L21.091 21.9763",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M21.0909 21.9762L10.1773 11.1548C8.88352 9.87195 6.8201 9.80176 5.44214 10.9937C4.17554 12.0893 4.03694 14.0043 5.13256 15.2709C5.17411 15.3189 5.21715 15.3656 5.26164 15.411L16.2553 26.6138",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.2553 26.6138L10 20.5001C8.73766 19.2104 6.67317 19.1745 5.36682 20.4197C4.07445 21.6515 4.02538 23.6978 5.25721 24.9902C5.26288 24.9961 5.26857 25.002 5.27429 25.0079C14.5039 34.5444 19.294 39.0486 21.091 40.5535C24 42.9898 29.7351 44.0001 32.7305 42.0001C35.7259 40.0001 38.4333 37.1545 39.7183 34.3288C40.4833 32.6466 41.9692 27.4596 44.1759 18.768C44.6251 16.9987 43.5549 15.2002 41.7856 14.751C41.7627 14.7452 41.7397 14.7396 41.7167 14.7343C39.8835 14.3106 38.0431 15.4117 37.5499 17.2274L35 26.6138",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.7159 12.666C31.004 11.6026 30.1903 10.6131 29.2887 9.71151C28.3871 8.80992 27.3976 7.9962 26.3342 7.28431C25.8051 6.9301 25.2577 6.6011 24.6937 6.29903C24.133 5.99872 23.5559 5.72502 22.9641 5.47963",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M5.19397 33.7763C5.84923 34.8754 6.61005 35.9062 7.46322 36.8537C8.31639 37.8012 9.26192 38.6656 10.2866 39.4322C10.7964 39.8136 11.3259 40.1708 11.8733 40.502C12.4175 40.8312 12.9795 41.1348 13.5576 41.4108",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HandUp.js

/* harmony default export */ var HandUp = (IconWrapper('hand-up', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 38.0001H19V44.0001H41V38.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.0001 38.0001C12.4812 30.8772 8.74054 26.7493 7.77829 25.6164C6.33491 23.9169 6.941 21.9962 10.5532 21.9962C14.1653 21.9962 16.2485 27.2816 19.0001 27.2816C19.0165 27.285 19.0176 20.5258 19.0034 7.00418C19.0017 5.34683 20.3438 4.00188 22.0012 4.00014L22.0043 4.00014C23.6635 4.00014 25.0085 5.34515 25.0085 7.0043V15.0137C32.9813 16.2226 37.3158 16.8895 38.0122 17.0145C39.0567 17.2021 41.0001 18.1991 41.0001 21.0682C41.0001 22.9809 41.0001 27.9582 41.0001 38.0001H19.0001Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HandDown.js

/* harmony default export */ var HandDown = (IconWrapper('hand-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.05322 10.0003L29.0532 10.0003V4.00032L7.05322 4.00032V10.0003Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M29.0531 10.0003C35.5721 17.1232 39.3127 21.2512 40.2749 22.3841C41.7183 24.0835 41.1122 26.0043 37.5001 26.0043C33.8879 26.0043 31.8047 20.7189 29.0531 20.7189C29.0367 20.7155 29.0356 27.4746 29.0498 40.9963C29.0515 42.6536 27.7094 43.9986 26.0521 44.0003L26.0489 44.0003C24.3898 44.0003 23.0447 42.6553 23.0447 40.9962V32.9867C15.072 31.7779 10.7374 31.111 10.0411 30.9859C8.99656 30.7984 7.05308 29.8014 7.05308 26.9323C7.05308 25.0196 7.05308 20.0423 7.05308 10.0003L29.0531 10.0003Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HandLeft.js

/* harmony default export */ var HandLeft = (IconWrapper('hand-left', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 40.9998V18.9998H38V40.9998H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 19C30.8948 12.4302 26.7757 8.66342 25.6428 7.69966C23.9433 6.25403 22.0226 6.86106 22.0226 10.4789C22.0226 14.0967 27.2864 16.2441 27.2864 19C27.2898 19.0164 20.529 19.0175 7.00404 19.0033C5.3467 19.0015 4.00175 20.3437 4 22.001C4 22.0021 4 22.0031 4 22.0042C4 23.6633 5.34501 25.0083 7.00417 25.0083H14.0165C15.2234 32.9769 15.8893 37.3099 16.0144 38.0073C16.2019 39.0535 17.199 41 20.068 41C21.9807 41 27.9581 41 38 41V19Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HandRight.js

/* harmony default export */ var HandRight = (IconWrapper('hand-right', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.0266 40.9736L10.0266 18.9736H4.02661L4.02661 40.9736H10.0266Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10.0266 18.9736C17.1495 12.4546 21.2774 8.71403 22.4104 7.75178C24.1098 6.30839 26.0306 6.91448 26.0306 10.5266C26.0306 14.1388 20.7452 16.222 20.7452 18.9736C20.7418 18.99 27.5009 18.9911 41.0226 18.9769C42.6799 18.9752 44.0249 20.3173 44.0266 21.9746L44.0266 21.9778C44.0266 23.637 42.6816 24.982 41.0224 24.982H33.013C31.8042 32.9547 31.1373 37.2893 31.0122 37.9856C30.8247 39.0302 29.8276 40.9736 26.9586 40.9736C25.0459 40.9736 20.0686 40.9736 10.0266 40.9736V18.9736Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Classroom.js

/* harmony default export */ var Classroom = (IconWrapper('classroom', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "13",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 44C5 35.5625 11.175 27.6875 16.4 26C16.4 26 21.15 31.0625 24 34.4375L31.6 26C35.875 26.5625 43 35.5625 43 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M2 44L46 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hands.js

/* harmony default export */ var Hands = (IconWrapper('hands', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "13",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.5 43.9994C4.5 38 11.5 27.9994 24 27.9994C24 27.9994 24 27.9994 24 27.9994C24 27.9994 26.7588 27.9994 29.7821 29.0906C32.7438 30.1596 36.5 31.1481 36.5 27.9994V27.9994V7.74952C36.5 5.67845 38.1789 3.99951 40.25 3.99951V3.99951C42.3211 3.99951 44 5.67844 44 7.74951V43.9994",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M2 44L46 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Baby.js

/* harmony default export */ var Baby = (IconWrapper('baby', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 43.5998C32.432 43.5998 39.5606 36.919 41.8935 29.2496C42.4179 27.5253 46 27.5253 46 23.7998C46 20.0744 42.3839 19.86 41.7987 18.0479C39.3724 10.5345 32.3209 3.99985 24 3.99985C15.6745 3.99985 8.61973 10.5406 6.19725 18.0604C5.61467 19.8689 2 20.009 2 23.7998C2 27.5907 5.59225 27.5907 6.1349 29.3419C8.4967 36.9638 15.6018 43.5998 24 43.5998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("g", {
    "attrs": {
      "filter": 'url(#' + props.id + '3da53cab' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M41.7987 18.0479C39.3724 10.5345 32.3209 3.99985 24 3.99985",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("path", {
    "attrs": {
      "d": "M19.1001 21.5997C19.1001 22.426 18.8759 23.1515 18.5397 23.6558C18.2012 24.1635 17.7884 24.3997 17.4001 24.3997C17.0118 24.3997 16.599 24.1635 16.2605 23.6558C15.9243 23.1515 15.7001 22.426 15.7001 21.5997C15.7001 20.7733 15.9243 20.0478 16.2605 19.5435C16.599 19.0358 17.0118 18.7997 17.4001 18.7997C17.7884 18.7997 18.2012 19.0358 18.5397 19.5436C18.8759 20.0478 19.1001 20.7733 19.1001 21.5997Z",
      "fill": props.colors[2],
      "stroke": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M32.3 21.5997C32.3 22.426 32.0758 23.1515 31.7396 23.6558C31.4011 24.1635 30.9883 24.3997 30.6 24.3997C30.2117 24.3997 29.7989 24.1635 29.4604 23.6558C29.1242 23.1515 28.9 22.426 28.9 21.5997C28.9 20.7733 29.1242 20.0478 29.4604 19.5436C29.7989 19.0358 30.2117 18.7997 30.6 18.7997C30.9883 18.7997 31.4011 19.0358 31.7396 19.5435C32.0758 20.0478 32.3 20.7733 32.3 21.5997Z",
      "fill": props.colors[2],
      "stroke": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.4978 31.7503C20.4287 33.05 22.2658 33.6998 24.0092 33.6998C25.7507 33.6998 27.4773 33.0514 29.1892 31.7545",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M18.4978 31.7503C20.4287 33.05 22.2658 33.6998 24.0092 33.6998C25.7507 33.6998 27.4773 33.0514 29.1892 31.7545",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.7283 6.20004C31.9964 8.13353 31.4067 9.54636 29.9593 10.4385C28.5119 11.3307 26.1602 11.7488 22.9043 11.6928",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("defs", [h("filter", {
    "attrs": {
      "id": props.id + '3da53cab',
      "x": "18",
      "y": "1.99985",
      "width": "29.7992",
      "height": "26.0486",
      "filterUnits": "userSpaceOnUse",
      "color-interpolation-filters": "sRGB"
    }
  }, [h("feFlood", {
    "attrs": {
      "flood-opacity": "0",
      "result": "BackgroundImageFix"
    }
  }), h("feColorMatrix", {
    "attrs": {
      "in": "SourceAlpha",
      "type": "matrix",
      "values": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
    }
  }), h("feOffset", {
    "attrs": {
      "dy": "4"
    }
  }), h("feGaussianBlur", {
    "attrs": {
      "stdDeviation": "2"
    }
  }), h("feColorMatrix", {
    "attrs": {
      "type": "matrix",
      "values": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
    }
  }), h("feBlend", {
    "attrs": {
      "mode": "normal",
      "in2": "BackgroundImageFix",
      "result": "effect1_dropShadow"
    }
  }), h("feBlend", {
    "attrs": {
      "mode": "normal",
      "in": "SourceGraphic",
      "in2": "effect1_dropShadow",
      "result": "shape"
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RankingList.js

/* harmony default export */ var RankingList = (IconWrapper('ranking-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 8H6C4.89543 8 4 8.89543 4 10V38C4 39.1046 4.89543 40 6 40H42C43.1046 40 44 39.1046 44 38V10C44 8.89543 43.1046 8 42 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16 22V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/LightMember.js

/* harmony default export */ var LightMember = (IconWrapper('light-member', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35.0564 15.0002L18.4628 7.66508C17.5888 7.27875 16.5636 7.56461 16.0157 8.34745L11.359 15.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M43 15H5C4.44772 15 4 15.4477 4 16V40C4 40.5523 4.44772 41 5 41H43C43.5523 41 44 40.5523 44 40V16C44 15.4477 43.5523 15 43 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M19 23L24.1026 33L29 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShoppingMall.js

/* harmony default export */ var ShoppingMall = (IconWrapper('shopping-mall', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 44V6C8 5.44772 8.44772 5 9 5H29C29.5523 5 30 5.44772 30 6V44",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44V6C8 5.44772 8.44772 5 9 5H29C29.5523 5 30 5.44772 30 6V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 15L40 20.9993V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Concern.js

/* harmony default export */ var Concern = (IconWrapper('concern', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.8579 9.85791C7.23858 13.4772 5 18.4772 5 24C5 29.5229 7.23858 34.5229 10.8579 38.1422",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M39.1421 38.1422C42.7614 34.5229 45 29.5229 45 24C45 18.4772 42.7614 13.4772 39.1421 9.85791",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34.8994 33.8996C37.4329 31.3661 38.9999 27.8661 38.9999 24.0001C38.9999 20.1341 37.4329 16.6341 34.8994 14.1006",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.1005 14.1006C12.567 16.6341 11 20.1341 11 24.0001C11 27.8661 12.567 31.3661 15.1005 33.8996",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28.1818 20C30.2905 20 32 21.6118 32 23.6C32 26.1882 29.4545 28.4 28.1818 29.6C27.3333 30.4 26.2727 31.2 25 32C23.7273 31.2 22.6667 30.4 21.8182 29.6C20.5455 28.4 18 26.1882 18 23.6C18 21.6118 19.7095 20 21.8182 20C23.1463 20 24.316 20.6393 25 21.6093C25.684 20.6393 26.8537 20 28.1818 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Snacks.js

/* harmony default export */ var Snacks = (IconWrapper('snacks', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 14H42V8H38L36 4H12L10 8H6V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 44L38 14H10L12 44H36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Theater.js

/* harmony default export */ var Theater = (IconWrapper('theater', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 6H40C41.1046 6 42 6.89543 42 8V36L32 22.0053C29.3333 23.5901 26.6667 24.3825 24 24.3825C21.3333 24.3825 18.6667 23.5901 16 22.0053L6 36V8C6 6.89543 6.89543 6 8 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Woman.js

/* harmony default export */ var Woman = (IconWrapper('woman', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.4853 24.4853C34.6569 22.3137 36 19.3137 36 16C36 9.37258 30.6274 4 24 4C17.3726 4 12 9.37258 12 16C12 19.3137 13.3431 22.3137 15.5147 24.4853",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 44L7 39L18 31L24 37L30 31L41 39L42 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.9934 21.0071C13.0061 16.8965 13.6749 13.8941 15 11.9999C16.9877 9.15871 18.387 9.36755 19.4054 9.81009C20.4238 10.2526 21.0226 13.1442 22.7236 13.9777C24.4246 14.8112 28.7777 14.9141 30.2687 15.9167C31.7597 16.9194 35.1696 18.7844 34.3195 21.9684",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sport.js

/* harmony default export */ var Sport = (IconWrapper('sport', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 15C38.7614 15 41 12.7614 41 10C41 7.23858 38.7614 5 36 5C33.2386 5 31 7.23858 31 10C31 12.7614 33.2386 15 36 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M12 16.7691L20.0031 13.998L31 19.2466L20.0031 27.4442L31 34.6834L24.0083 43.998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.3198 21.6434L38.0015 23.1018L43.9998 17.4658",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.849 31.5454L13.8793 35.4572L4.00391 40.9964",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VoiceOne.js

/* harmony default export */ var VoiceOne = (IconWrapper('voice-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M30 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36 22V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14V34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Acoustic.js

/* harmony default export */ var Acoustic = (IconWrapper('acoustic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 3.99976V43.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34 11.9998V35.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17.9998V29.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M44 17.9998V29.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14 11.9998V35.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UserToUserTransmission.js

/* harmony default export */ var UserToUserTransmission = (IconWrapper('user-to-user-transmission', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 18C17.866 18 21 14.866 21 11C21 7.13401 17.866 4 14 4C10.134 4 7 7.13401 7 11C7 14.866 10.134 18 14 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 18C37.866 18 41 14.866 41 11C41 7.13401 37.866 4 34 4C30.134 4 27 7.13401 27 11C27 14.866 30.134 18 34 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 44C4 43.1111 4 40.1111 4 35C4 29.4772 7.77023 25 12.4211 25C14.6667 25 16.3509 25 17.4737 25C21.5587 25 24.0001 29.0269 24.0001 29.0269",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9998 44C43.9998 43.1111 43.9998 40.1111 43.9998 35C43.9998 29.4772 40.1847 25 35.4785 25C33.2062 25 31.502 25 30.3658 25C26.4046 25 23.992 29.0269 23.9997 29.0269",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 40H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.2954 36.2583L35.535 37.5055L38.0141 39.9998L35.535 42.5613L34.2954 43.8421",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.3295 36.2321L13.0703 37.4857L10.5519 39.9928L13.0703 42.5415L14.3295 43.8159",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tennis.js

/* harmony default export */ var Tennis = (IconWrapper('tennis', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C23.8991 10.6682 22.2619 15.6696 19.0884 19.0044C15.9148 22.3391 10.8853 24.0071 4 24.0083",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9682 25.0052C37.4557 24.5585 32.4795 25.9505 29.0395 29.1812C25.5994 32.4119 23.9206 37.3515 24.0029 43.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Buy.js

/* harmony default export */ var Buy = (IconWrapper('buy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6 15H42L40 42H8L6 15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19V6H32V19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 34H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Iwatch.js

/* harmony default export */ var Iwatch = (IconWrapper('iwatch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 12.0001H10V36.0001H36V12.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 24.0001C27 21.791 25.2091 20.0001 23 20.0001C20.7909 20.0001 19 21.791 19 24.0001C19 26.2093 20.7909 28.0001 23 28.0001C25.2091 28.0001 27 26.2093 27 24.0001Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 12.0001C15 11.9272 15.0083 11.8544 15.0246 11.7832L16.6321 4.78319C16.7372 4.32565 17.1565 4.00012 17.6409 4.00012H28.3837C28.8681 4.00012 29.2874 4.32565 29.3925 4.78319L31 11.7832",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15 36.0001C15 36.0731 15.0083 36.1458 15.0246 36.2171L16.6321 43.2171C16.7372 43.6746 17.1565 44.0001 17.6409 44.0001H28.3837C28.8681 44.0001 29.2874 43.6746 29.3925 43.2171L31 36.2171",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M39 16.0001V20.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Protection.js

/* harmony default export */ var Protection = (IconWrapper('protection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 24C42 14.6112 33.9411 7.00003 24 7.00003C14.0589 7.00003 6 14.6112 6 24H42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24.0083V38.5455C24 41.5579 21.5142 44 18.5 44C15.4858 44 13 41.5579 13 38.5455",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4.00003V7.00003",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AppleOne.js

/* harmony default export */ var AppleOne = (IconWrapper('apple-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 41.0202C26.4311 41.0202 27.4311 42.3302 28.7342 42.6214C30.0373 42.9127 31.1312 42.9935 32.2515 42.4999C34.47 41.5223 35.8224 40.3578 37.4634 38.6186C40.5046 35.3953 42 30.9635 42 25.0286C42 19.0936 40.3996 16.0265 37.9334 14.0202C35.4672 12.014 34.037 11.6296 31.0549 12.014C28.0727 12.3983 26.4489 15.6025 24.0083 15.6025C21.5678 15.6025 18.5933 12.4431 16.0055 12.014C13.4177 11.5848 12 12.014 9.75967 14.0202C7.51934 16.0265 6 19.1506 6 25.0286C6 30.9066 7.55155 35.265 10.5927 38.4882C12.2337 40.2275 13.53 41.5223 15.7485 42.4999C16.8688 42.9935 18.0267 42.9127 19.2844 42.6214C20.5422 42.3302 21.5422 41.0202 24 41.0202Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0083 15.6025C24.7932 7.86751 28.1274 4 34.0109 4C34.5504 5.62786 34.6897 7.20336 34.429 8.7265C34.3051 9.45008 33.9208 10.4819 33.2759 11.8219",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14.2291 26C13.9526 27.3457 13.9526 28.7313 14.2291 30.1566C14.5057 31.5819 15.0946 32.6818 15.996 33.4563",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Honey.js

/* harmony default export */ var Honey = (IconWrapper('honey', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.613 4.84259L9.92372 9.53183C8.62882 10.8267 8.62882 12.9262 9.92372 14.2211C11.2186 15.516 13.3181 15.516 14.613 14.2211L19.3022 9.53183C20.5971 8.23693 20.5971 6.13749 19.3022 4.84259C18.0073 3.54769 15.9078 3.5477 14.613 4.84259Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24.773 13.4397L18.5206 19.692C17.2257 20.9869 17.2257 23.0863 18.5206 24.3812C19.8155 25.6761 21.915 25.6761 23.2099 24.3812L29.4622 18.1289C30.7571 16.834 30.7571 14.7346 29.4622 13.4397C28.1673 12.1448 26.0679 12.1448 24.773 13.4397Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M28.6807 18.9104L42.4507 32.6803C43.4784 33.708 43.2618 35.5909 41.9669 36.8857C40.672 38.1806 38.7891 38.3973 37.7614 37.3696L23.9915 23.5996",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M22.4284 6.40571L11.4868 17.3473C10.1919 18.6422 10.1919 20.7416 11.4868 22.0365C12.7817 23.3314 14.8812 23.3314 16.1761 22.0365L27.1176 11.0949C28.4125 9.80005 28.4125 7.70061 27.1176 6.40571C25.8227 5.11081 23.7233 5.11081 22.4284 6.40571Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M13.8545 23.1421C15.2781 27.5788 15.041 30.8568 13.1434 32.976C10.2969 36.1547 10.7396 44.1421 17.1705 44.1421C23.6014 44.1421 25.4904 36.1547 20.0426 33.3527",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/World.js

/* harmony default export */ var World = (IconWrapper('world', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20.8404C7.01485 19.4168 9.24466 19.2185 10.6894 20.2454C12.8566 21.7859 13.1283 28.064 18.0575 25.0635C22.9867 22.063 15.9467 20.8404 17.475 16.4939C19.0033 12.1474 24.0083 15.5237 24.5059 10.7627C24.8375 7.58862 21.0408 6.37413 13.1156 7.11921",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M36.0001 8C30.2857 12.9886 28.2899 16.0011 30.0127 17.0373C32.5968 18.5917 33.6933 16.4033 36.8467 17.0373C40.0001 17.6714 39.3173 21.9457 37.6587 21.9457C36.0001 21.9457 27.41 20.8518 27.8427 25.865C28.2753 30.8781 33.4422 31.6203 33.4422 34.4211C33.4422 36.2883 32.299 39.146 30.0127 42.9942",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6.10461 32.9264C7.0161 32.5288 7.70127 32.2374 8.16011 32.052C12.0072 30.4978 14.8618 30.1314 16.7237 30.953C20.0162 32.4059 18.7504 35.3401 19.7817 36.4211C20.8129 37.5021 23.3881 37.1876 23.3881 39.244C23.3881 40.615 22.9276 42.1637 22.0066 43.8901",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/International.js

/* harmony default export */ var International = (IconWrapper('international', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44.0002C35.0457 44.0002 44 35.0459 44 24.0002C44 12.9545 35.0457 4.00024 24 4.00024C12.9543 4.00024 4 12.9545 4 24.0002C4 35.0459 12.9543 44.0002 24 44.0002Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M6 30.9856C8.63192 32.041 10.5266 32.041 11.6839 30.9856C13.4199 29.4025 11.9219 24.5978 14.3532 23.2727C16.7844 21.9476 20.4886 27.8214 23.9508 25.8887C27.4129 23.9559 23.6246 18.8023 26.0272 16.713C28.4298 14.6237 31.554 16.98 32.1001 13.4865C32.6462 9.99304 29.5521 11.5082 28.9584 8.20693C28.5625 6.00611 28.5625 4.84884 28.9584 4.73511",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29.021 43.3505C27.1469 41.4325 26.4722 39.6497 26.997 38.0019C27.7842 35.5303 29.0827 35.6764 29.6489 34.1482C30.215 32.6199 28.6157 30.4433 32.1644 28.5826C34.5302 27.3421 37.7831 28.7794 41.9229 32.8944",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HeavyMetal.js

/* harmony default export */ var HeavyMetal = (IconWrapper('heavy-metal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M22.2187 7.37842L33.8868 16.6216L36.1778 23.9998L25.2625 26.0852L12.5889 14.5312L15.281 9.00148L22.2187 7.37842Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.2808 9.00146L26.4862 18.6016",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25.2625 26.0852L26.4864 18.1324L33.8867 16.6216",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.993 31.0228L27.2792 38.1032L15.601 40.3785L4 29.014L6.57052 22.6253L12.0285 21.3535",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.57056 22.625L17.284 32.7577",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.6011 39.8648L17.4865 32.1324L24.9908 31.0435",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M34.8868 29.6077L34 36.7999L43.236 34.9985L41.2813 28.1875L34.8868 29.6077Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Disk.js

/* harmony default export */ var Disk = (IconWrapper('disk', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 4V22H15V4H34Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 11V15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M11.9969 4H36.9985",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PageTemplate.js

/* harmony default export */ var PageTemplate = (IconWrapper('page-template', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23 4.00012H4V26.0001H23V4.00012Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34.0001H4V43.0001H44V34.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4.00012H31V12.0001H44V4.00012Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 18.0001H31V26.0001H44V18.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ConceptSharing.js

/* harmony default export */ var ConceptSharing = (IconWrapper('concept-sharing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28.3669 36H24L15 31.0396L4.00879 35.0818L7.01068 41.0257L14.0833 38.0729C20.7 42.0243 24.7272 44 26.1651 44C27.603 44 33.5479 41.3334 44 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M28.9923 26.9878C28.9923 24.097 28.9923 22.5402 28.9923 22.3171C30.0923 21.861 31.535 21.193 32.364 20.364C33.9926 18.7353 35 16.4853 35 14C35 9.02944 30.9706 5 26 5C21.0294 5 17 9.02944 17 14C17 16.4853 18.0074 18.7353 19.636 20.364C20.465 21.193 21.9 21.861 23 22.3171C23.0056 22.6525 23.0056 24.2094 23 26.9878H28.9923Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 21L13 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40 21L39 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15 5L14 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M37 5L38 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M41 12H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12 12H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FaceRecognition.js

/* harmony default export */ var FaceRecognition = (IconWrapper('face-recognition', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 3.99976H44V13.9998M44 33.9998V43.9998H34M14 43.9998H4V33.9998M4 13.9998V3.99976H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 39.9998C31.732 39.9998 38 32.8363 38 23.9998C38 15.1632 31.732 7.99976 24 7.99976C16.268 7.99976 10 15.1632 10 23.9998C10 32.8363 16.268 39.9998 24 39.9998Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24.0081L42 23.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.0697 32.1057C21.3375 33.0429 22.6476 33.5115 24 33.5115C25.3523 33.5115 26.6983 33.0429 28.0381 32.1057",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ScanSetting.js

/* harmony default export */ var ScanSetting = (IconWrapper('scan-setting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 21L38 24L35 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 21L10 24L13 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 13L24 10L21 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 35L24 38L21 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MaskOne.js

/* harmony default export */ var MaskOne = (IconWrapper('mask-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.36573 16.3443C6.48571 18.7024 6 21.2881 6 23.9998C6 26.7115 6.48571 29.2971 7.36573 31.6552M11.2721 38.1419C12.9301 39.9841 14.91 41.4686 17.1101 42.4823C19.2324 43.4601 21.5595 43.9998 24 43.9998C26.4405 43.9998 28.7676 43.4601 30.8899 42.4823C33.09 41.4686 35.0699 39.9841 36.7279 38.1419M40.6343 31.6552C41.5143 29.2971 42 26.7115 42 23.9998C42 21.2881 41.5143 18.7024 40.6343 16.3443M36.7279 9.85762C35.0699 8.01539 33.09 6.53089 30.8899 5.51723C28.7676 4.53943 26.4405 3.99976 24 3.99976C19.0294 3.99976 14.5294 6.23833 11.2721 9.85762",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 22.9998C19.6569 22.9998 21 21.6566 21 19.9998C21 18.3429 19.6569 16.9998 18 16.9998C16.3431 16.9998 15 18.3429 15 19.9998C15 21.6566 16.3431 22.9998 18 22.9998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M30 22.9998C31.6569 22.9998 33 21.6566 33 19.9998C33 18.3429 31.6569 16.9998 30 16.9998C28.3431 16.9998 27 18.3429 27 19.9998C27 21.6566 28.3431 22.9998 30 22.9998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34.9998C26.7614 34.9998 29 33.6566 29 31.9998C29 30.3429 26.7614 28.9998 24 28.9998C21.2386 28.9998 19 30.3429 19 31.9998C19 33.6566 21.2386 34.9998 24 34.9998Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PanoramaHorizontal.js

/* harmony default export */ var PanoramaHorizontal = (IconWrapper('panorama-horizontal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 11C4 11 13 15 24 15C35 15 44 11 44 11V37C44 37 35 33 24 33C13 33 4 37 4 37V11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Luminous.js

/* harmony default export */ var Luminous = (IconWrapper('luminous', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 16V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 21.8579L31.1421 28.8579",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 21.8579L16.8579 28.8579",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 36H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Light.js

/* harmony default export */ var Light = (IconWrapper('light', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 16V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 21.8579L33.8994 26.1005",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 36H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 21.8579L14.1006 26.1005",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 36H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Watch.js

/* harmony default export */ var Watch = (IconWrapper('watch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34.9563 31L30.9999 44H16.9999L13.0436 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0436 17L16.9999 4H30.9999L34.9563 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17V24L28 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 24C37 26.5773 36.25 28.9794 34.9564 31C32.6462 34.6083 28.6024 37 24 37C19.3976 37 15.3538 34.6083 13.0436 31C11.75 28.9794 11 26.5773 11 24C11 21.4227 11.75 19.0206 13.0436 17C15.3538 13.3917 19.3976 11 24 11C28.6024 11 32.6462 13.3917 34.9564 17C36.25 19.0206 37 21.4227 37 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Funds.js

/* harmony default export */ var Funds = (IconWrapper('funds', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "14",
      "cy": "10",
      "rx": "10",
      "ry": "5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 10C4 10 4 14.2386 4 17C4 19.7614 8.47715 22 14 22C19.5228 22 24 19.7614 24 17C24 15.3644 24 10 24 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17C4 17 4 21.2386 4 24C4 26.7614 8.47715 29 14 29C19.5228 29 24 26.7614 24 24C24 22.3644 24 17 24 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 24 4 28.2386 4 31C4 33.7614 8.47715 36 14 36C19.5228 36 24 33.7614 24 31C24 29.3644 24 24 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 31C4 31 4 35.2386 4 38C4 40.7614 8.47715 43 14 43C19.5228 43 24 40.7614 24 38C24 36.3644 24 31 24 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("ellipse", {
    "attrs": {
      "cx": "34",
      "cy": "24",
      "rx": "10",
      "ry": "5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24C24 24 24 28.2386 24 31C24 33.7614 28.4772 36 34 36C39.5228 36 44 33.7614 44 31C44 29.3644 44 24 44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C24 31 24 35.2386 24 38C24 40.7614 28.4772 43 34 43C39.5228 43 44 40.7614 44 38C44 36.3644 44 31 44 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RotatingForward.js

/* harmony default export */ var RotatingForward = (IconWrapper('rotating-forward', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 6.67578C8.02198 10.1339 4 16.5973 4 24.0001M14 6.67578V14.0001M14 6.67578H6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.67564 34C10.1337 39.978 16.5972 44 24 44M6.67564 34H14M6.67564 34V41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 41.3244C39.978 37.8663 44 31.4028 44 24M34 41.3244V34M34 41.3244H41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.3243 14C37.8662 8.02199 31.4028 4 24 4M41.3243 14H34M41.3243 14V6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ReverseRotation.js

/* harmony default export */ var ReverseRotation = (IconWrapper('reverse-rotation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 6.67564C39.978 10.1337 44 16.5972 44 24M34 6.67564V14M34 6.67564H41.3244M41.3244 34C37.8663 39.978 31.4028 44 24 44M41.3244 34H34M41.3244 34V41.3244M14 41.3244C8.02199 37.8663 4 31.4028 4 24M14 41.3244V34M14 41.3244H6.67564M6.67564 14C10.1337 8.02199 16.5972 4 24 4M6.67564 14H14M6.67564 14V6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.3244 34C37.8663 39.978 31.4028 44 24 44M41.3244 34H34M41.3244 34V41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 41.3244C8.02199 37.8663 4 31.4028 4 24M14 41.3244V34M14 41.3244H6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.67566 14C10.1338 8.02199 16.5972 4 24 4M6.67566 14H14M6.67566 14V6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 6.67578C39.978 10.1339 44 16.5973 44 24.0001M34 6.67578V14.0001M34 6.67578H41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RotatingAdd.js

/* harmony default export */ var RotatingAdd = (IconWrapper('rotating-add', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6.67566 14C10.1338 8.02199 16.5972 4 24 4M6.67566 14H14M6.67566 14V6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 41.3244C8.02199 37.8663 4 31.4028 4 24M14 41.3244V34M14 41.3244H6.67564",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.3244 34C37.8663 39.978 31.4028 44 24 44M41.3244 34H34M41.3244 34V41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 6.67578C39.978 10.1339 44 16.5973 44 24.0001M34 6.67578V14.0001M34 6.67578H41.3244",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ScreenRotation.js

/* harmony default export */ var ScreenRotation = (IconWrapper('screen-rotation', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24C4 35.0457 12.9543 44 24 44L19 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24C44 12.9543 35.0457 4 24 4L29 9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 41L7 18L18 7L41 30L30 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Waves.js

/* harmony default export */ var Waves = (IconWrapper('waves', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M2 23.3548H11L17.8889 4L28.8889 44L37 23.3548H46",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Power.js

/* harmony default export */ var Power = (IconWrapper('power', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.5 8C13.8406 8.37652 13.2062 8.79103 12.6 9.24051C11.5625 10.0097 10.6074 10.8814 9.75 11.8402C6.79377 15.1463 5 19.4891 5 24.2455C5 34.6033 13.5066 43 24 43C34.4934 43 43 34.6033 43 24.2455C43 19.4891 41.2062 15.1463 38.25 11.8402C37.3926 10.8814 36.4375 10.0097 35.4 9.24051C34.7938 8.79103 34.1594 8.37652 33.5 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pills.js

/* harmony default export */ var Pills = (IconWrapper('pills', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M9.97315 22.0623L17.2506 15.9558L24.528 9.84929C28.9703 6.12177 35.5932 6.7012 39.3207 11.1435C43.0483 15.5858 42.4688 22.2087 38.0265 25.9362L30.7491 32.0427L23.4717 38.1492C19.0294 41.8767 12.4065 41.2973 8.67896 36.855C4.95144 32.4127 5.53087 25.7898 9.97315 22.0623Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M19.6885 21.8613L25.4261 28.6992",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Prescription.js

/* harmony default export */ var Prescription = (IconWrapper('prescription', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8 6H24H28H30L40 16V19.5V24V42H8V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.0244 6V18.0818H39.9996",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 30H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MedicalFiles.js

/* harmony default export */ var MedicalFiles = (IconWrapper('medical-files', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23 42H19H15H9C7.89543 42 7 41.1046 7 40V8C7 6.89543 7.89543 6 9 6H37C38.1046 6 39 6.89543 39 8V15V19.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.6364 27C39.0463 27 41 28.8804 41 31.2C41 34.2196 38.0909 36.8 36.6364 38.2C35.6667 39.1333 34.4545 40.0667 33 41C31.5455 40.0667 30.3333 39.1333 29.3636 38.2C27.9091 36.8 25 34.2196 25 31.2C25 28.8804 26.9537 27 29.3636 27C30.8814 27 32.2182 27.7459 33 28.8775C33.7818 27.7459 35.1186 27 36.6364 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 14H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PureNatural.js

/* harmony default export */ var PureNatural = (IconWrapper('pure-natural', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 41.0001C15.1674 39.2093 19.0922 38.2431 22.7746 38.1015C26.457 37.9598 31.1988 38.5927 37 40.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M23.0452 44C22.2783 34.5599 22.5964 27.2266 23.9997 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 23.176C25.59 17.1581 28.3898 13.5692 32.3992 12.4095C36.4086 11.2497 40.2755 11.7812 43.9998 14.004C44.0186 18.8959 41.8952 22.4796 37.6296 24.755C33.364 27.0305 28.8208 26.5041 24 23.176Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23.7919 22.1141C24.6253 14.9273 22.9554 9.86554 18.7822 6.92866C14.6089 3.99178 9.77638 3.336 4.28447 4.96133C3.32535 11.5907 4.79153 16.6036 8.68299 20C12.5745 23.3964 17.6108 24.1011 23.7919 22.1141Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hospital.js

/* harmony default export */ var Hospital = (IconWrapper('hospital', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 5H5V43H33V5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 21H43V43H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 21H25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19 15V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bottle.js

/* harmony default export */ var Bottle = (IconWrapper('bottle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 18H12V44H36V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.8943 11H28.1057C29.8329 11 31.365 12.1086 31.9051 13.7492L33.3045 18H14.6953L16.0949 13.7491C16.635 12.1086 18.1671 11 19.8943 11Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 11V7C21 5.34315 22.3431 4 24 4C25.6569 4 27 5.34315 27 7V11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.5 26V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Weight.js

/* harmony default export */ var Weight = (IconWrapper('weight', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 19.0537C15.3249 15.0537 19.3249 13.0537 24 13.0537C28.6751 13.0537 32.6751 15.0537 36 19.0537",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 31C25.6569 31 27 29.6569 27 28C27 26.3431 25.6569 25 24 25C22.3431 25 21 26.3431 21 28C21 29.6569 22.3431 31 24 31Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M19 21L24.0083 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Period.js

/* harmony default export */ var Period = (IconWrapper('period', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.99956 4C12.0022 7.33659 14.0034 10.6715 14.0034 14.0046C14.0034 19.0043 9.99956 21.2436 7.99956 24C5.99956 26.7564 5.00488 29.9311 5.00488 34.0033C5.00488 36.718 6.00311 40.0503 7.99956 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M40.0034 4C36.0008 7.33659 33.9995 10.6715 33.9995 14.0046C33.9995 19.0043 38.0034 21.2436 40.0034 24C42.0034 26.7564 42.998 29.9311 42.998 34.0033C42.998 36.718 41.9998 40.0503 40.0034 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14.0039 29.1826C16.5255 28.941 18.6192 29.3014 20.2853 30.2639C22.7843 31.7076 23.9917 33.3597 24 34.9573C24.0056 36.0224 24.0056 39.0367 24 44.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34.0039 29.1826C31.4824 28.941 29.3886 29.3014 27.7226 30.2639C25.2235 31.7076 24.0161 33.3597 24.0078 34.9573",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PregnantWomen.js

/* harmony default export */ var PregnantWomen = (IconWrapper('pregnant-women', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 4.00012V11.5187C40.3124 15.7132 43.6144 21.294 42.9062 28.2611C42.1979 35.2282 38.8959 40.4746 33 44.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.7722 4.00012C11.6342 4.36948 10.0954 5.62198 9.15593 7.75763C7.74671 10.9611 5 21.9638 5 23.7259C5 25.4881 8.56767 30.2349 17.0518 37.4357C20.9831 40.7724 23.3065 40.6022 24.5648 38.3639C25.8231 36.1257 24.1585 34.6904 22.0496 33.0369C18.1867 30.0084 13.102 25.2151 13.102 23.1111C13.102 21.7084 14.4186 17.4337 17.0518 10.2871",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.20117 28.941C8.71547 33.9211 9.64845 38.9211 11.0001 43.941",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 19.9445C34.5469 20.9722 35.5469 22.3095 36 23.9566C36.4531 25.6036 36.5852 27.1056 36.3963 28.4626",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GeneralBranch.js

/* harmony default export */ var GeneralBranch = (IconWrapper('general-branch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.0001 9H8C6.89543 9 6 9.89543 6 11L6.00003 41C6.00003 42.1046 6.89546 43 8.00003 43H40.0001C41.1047 43 42.0001 42.1046 42.0001 41V11C42.0001 9.89543 41.1047 9 40.0001 9Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 5V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 5V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 17H42",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18 30H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 11L6 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M42 11V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlasticSurgery.js

/* harmony default export */ var PlasticSurgery = (IconWrapper('plastic-surgery', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.036 44C18.0561 40.8044 16.5778 38.422 14.6011 36.8531C11.636 34.4996 6.92483 35.9623 5.18458 33.5347C3.44433 31.1072 6.40382 26.6429 7.44234 24.0089C8.48086 21.3748 3.46179 20.4434 4.04776 19.6957C4.43842 19.1971 6.97471 17.7586 11.6567 15.38C12.987 7.79332 17.9008 4 26.3982 4C39.1441 4 44 14.8059 44 21.6789C44 28.5518 38.1201 35.9562 29.7441 37.5527C28.9951 38.6434 30.0754 40.7926 32.9848 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.0218 4.58984C19.8339 9.81843 19.8339 13.8867 21.0218 16.7948C22.8038 21.1568 30.6808 20.4866 30.6808 24.5563C30.6808 28.626 26.0911 29.4084 26.7035 32.2319C27.1118 34.1142 28.02 36.5555 29.4279 39.5558",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30.5508C17.2354 30.5508 19.4004 30.4124 20.9589 28.7992C21.9979 27.7237 22.5173 26.4573 22.5173 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Injection.js

/* harmony default export */ var Injection = (IconWrapper('injection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.1684 22.262L19.0766 41.3539L6.34863 28.6259L25.4405 9.53406",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1684 22.262L19.0766 41.3539L6.34863 28.6259L25.4405 9.53406",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.9053 5.99854L41.7043 25.7975",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14.834 28.6259L19.0766 32.8686",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6.34961 41.353L12.7128 34.9898",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.8047 15.8979L35.3394 12.3632",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Nutrition.js

/* harmony default export */ var Nutrition = (IconWrapper('nutrition', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 41.9999C24.8653 41.9999 26.8503 41.9999 29.9551 41.9999C30.0381 39.263 30.4393 37.7581 31.1586 37.4851C38.6685 34.6356 44 27.4338 44 18.9999H4C4 27.2513 9.10319 34.3233 16.3568 37.294C17.1151 37.6046 17.6815 39.1732 18.056 41.9999C21.0857 41.9999 23.067 41.9999 24 41.9999Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.4434 26.0223C14.803 27.2102 15.2786 28.1909 15.8702 28.9645C16.4484 29.7208 17.1619 30.4222 18.0104 31.0687",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32.2009 8.01747C30.9409 7.31406 29.5829 6.76772 28.1528 6.40462M22.0507 5.99988C14.9273 6.82248 9.1442 12.0976 7.5 18.9999M40.5 18.9964C39.8296 16.1845 38.4722 13.6429 36.6172 11.5624",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Eyes.js

/* harmony default export */ var Eyes = (IconWrapper('eyes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 40.9999C33.9411 40.9999 42 32.6778 42 26.9999C42 21.3219 33.9411 12.9999 24 12.9999C14.0589 12.9999 6 21.3277 6 26.9999C6 32.6721 14.0589 40.9999 24 40.9999Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32.9999C27.3137 32.9999 30 30.3136 30 26.9999C30 23.6862 27.3137 20.9999 24 20.9999C20.6863 20.9999 18 23.6862 18 26.9999C18 30.3136 20.6863 32.9999 24 32.9999Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.2637 11.266L15.8582 14.8862",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M35.625 11.7103L33.0304 15.3305",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0088 6.99988V12.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Abdominal.js

/* harmony default export */ var Abdominal = (IconWrapper('abdominal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7.89926 4.99988C10.7371 8.01919 12.156 11.9407 12.156 16.7644C12.156 23.9999 5.9995 29.5381 4.969 33.4999C4.282 36.1411 3.95884 39.3077 3.9995 42.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M39.256 4.99988C36.4182 8.01919 34.9992 11.9407 34.9992 16.7644C34.9992 23.9999 41.1558 29.5381 42.1863 33.4999C42.8733 36.1411 43.1964 39.3077 43.1558 42.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6.24414 30.8368C12.7693 34.9666 18.6949 37.0316 24.0211 37.0316C29.3472 37.0316 34.9799 34.9666 40.9192 30.8368",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30.9999C25.3807 30.9999 26.5 29.8806 26.5 28.4999C26.5 27.1192 25.3807 25.9999 24 25.9999C22.6193 25.9999 21.5 27.1192 21.5 28.4999C21.5 29.8806 22.6193 30.9999 24 30.9999Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChineseMedicine.js

/* harmony default export */ var ChineseMedicine = (IconWrapper('chinese-medicine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 43C24.8653 43 26.8503 43 29.9551 43C30.0381 40.2631 30.4393 38.7582 31.1586 38.4852C38.6685 35.6357 44 28.434 44 20H4C4 28.2514 9.10319 35.3234 16.3568 38.2941C17.1151 38.6047 17.6815 40.1733 18.056 43C21.0857 43 23.067 43 24 43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.4436 27.0225C14.8033 28.2103 15.2789 29.191 15.8704 29.9646C16.4487 30.7209 17.1621 31.4223 18.0107 32.0688",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25.2142 20.0264C28.97 12.2748 31.1773 7.70521 31.8361 6.31775C32.8854 4.10791 35.0159 3.57614 36.9811 4.41569C38.9462 5.25524 39.7414 7.65828 38.9165 9.33311C38.4071 10.3675 36.6769 13.9245 33.7261 20.004",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Gastrointestinal.js

/* harmony default export */ var Gastrointestinal = (IconWrapper('gastrointestinal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.9999 4.99988C21.8537 9.46011 21.8537 12.7726 22.9999 14.9374C24.719 18.1845 28.7 19.9803 23.5741 24.3114C18.4482 28.6426 13.2512 25.0082 10.0425 25.0082C6.83388 25.0082 4.02246 28.6212 4.02246 33.9999C4.02246 37.5857 4.68159 40.5857 5.99986 42.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.9842 4.99988C28.5428 10.3289 28.8711 13.7086 30.9694 15.1391C34.1168 17.2849 34.358 12.8034 40.141 15.4698C45.924 18.1362 44.4204 27.431 41.0941 32.2154C37.7677 36.9999 30.6675 41.8345 24.0084 40.9999C17.3493 40.1652 14.8733 32.02 14.0161 32.02C13.159 32.02 11.3479 32.0454 10.9943 35.4171C10.7585 37.6648 11.4287 40.1924 13.0048 42.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35.6447 28.2899C35.0666 30.016 34.09 31.3383 32.7148 32.2998C31.3397 33.2614 29.5942 33.8281 27.4785 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Renal.js

/* harmony default export */ var Renal = (IconWrapper('renal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.0004 43.9998C14.5383 39.651 14.0665 35.9843 14.5849 32.9998C15.1033 30.0152 16.7154 28.0645 19.4211 27.1475C17.4078 33.2544 18.2328 37.7161 21.8962 40.5327C27.3912 44.7575 40.6336 42.8146 41.3511 28.5229C42.0686 14.2313 35.1948 3.91248 25.0302 3.91248C14.8656 3.91248 13.3462 14.9136 20.505 18.647C14.1711 20.0275 10.1518 22.861 8.44706 27.1475C6.74229 31.4341 6.60958 37.0515 8.04891 43.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.5997 14.9999C27.7023 16.7272 26.6522 18.3092 27.4494 19.7459C28.2466 21.1827 30.0547 21.1827 32.8737 19.7459",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.2467 26.2403C29.5062 25.4782 27.257 25.7541 26.4991 27.068C25.3622 29.0388 30.3696 31.8941 32.1848 32.2509",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Uterus.js

/* harmony default export */ var Uterus = (IconWrapper('uterus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.0002 18C31.0772 24 29.0002 29.5 24.5002 29.5C20.0002 29.5 18.5002 24.5 17.0002 18C15.5002 11.5 17.0002 6 24.5002 6C32.0002 6 32.9233 12 32.0002 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M32.5 12.5C34.25 10.8682 36.0328 10.3296 38.8405 10.5043C43.052 10.7664 44 13.648 44 17.9564M44 17.9564C44 22.2648 42.3485 26.1825 39.0589 25.2961C35.7692 24.4097 36.2292 20.9096 37.7678 19.2686C39.3064 17.6276 41.9973 16.9589 44 17.9564Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M16.5 12C14.7309 10.456 12.6403 10.3301 10.0869 10.5048C6.25675 10.7668 3.99999 13.6924 3.99999 18.0008M3.99999 18.0008C3.99999 22.3092 6.89652 26.1829 9.88829 25.2965C12.8801 24.4101 12.4618 20.9101 11.0625 19.2691C9.66321 17.6281 5.82131 17.0033 3.99999 18.0008Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20 27V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 27V43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Endocrine.js

/* harmony default export */ var Endocrine = (IconWrapper('endocrine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23.1466 44C31.2933 44 40 43.0106 40 30.1802C40 23.9643 38.5085 18.9042 35.5256 15C32.7392 19.6667 30.674 22 29.3299 22C27.3139 22 29.3299 15.9107 26.9987 11.2914C25.4445 8.21194 22.6879 5.78146 18.7289 4C19.2794 8.43691 19.1603 11.6554 18.3715 13.6554C17.1882 16.6554 7.15114 21.91 8.05783 30.9349C8.96453 39.9599 15 44 23.1466 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.7076 24.0083C17.9028 27.4666 16.2811 30.6674 16.8427 33.6109C17.3261 36.1448 19.2487 37.3764 20.6969 37.7735C21.8196 38.0814 23.7635 38.2536 25.5004 36.7067C27.3402 35.0682 26.6071 32.7388 23.9392 29.8571C22.8138 28.6415 22.0699 26.6919 21.7076 24.0083Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Orthopedic.js

/* harmony default export */ var Orthopedic = (IconWrapper('orthopedic', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M23.0283 36L34.0026 42.9987V24C41.6769 18.7896 44.496 13.9783 42.4597 9.56594C39.4054 2.94746 34.4604 3.38382 31.0068 5.00174C28.7044 6.08035 27.0354 9.09334 25.9998 14.0407C22.9616 7.57467 18.6951 4.34165 13.2002 4.34165C4.95788 4.34165 4.29401 14.0648 5.47501 16.446C6.656 18.8273 7.77278 20.1122 13.0007 24C12.9255 35.5632 13.4061 41.7818 14.4426 42.6557C16.3435 44.1284 19.2054 41.9098 23.0283 36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 25V31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Nasal.js

/* harmony default export */ var Nasal = (IconWrapper('nasal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.9875 4.00018C17.108 10.2502 16.7846 14.5866 16.0172 17.0093C14.8662 20.6435 6.08203 30.763 6.08203 36.1022C6.08203 41.4413 12.3865 44.3893 15.7908 42.3788",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32.002 4.00018C31.7773 10.2502 32.0486 14.5866 32.8159 17.0093C33.9669 20.6435 42.959 29.4498 42.959 35.2926C42.959 41.1354 36.4466 44.3893 33.0423 42.3788",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0059 34.8338C14.7153 33.8616 16.2019 33.8616 17.4657 34.8338C19.3614 36.2922 19.9562 40.0001 24.0084 40.0001C28.0607 40.0001 30.0472 35.8428 32.0001 34.8338C33.3021 34.1612 34.6354 34.1612 36.0001 34.8338",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.2852 22.1457C19.4914 23.0002 18.6514 23.9533 18.0381 25.614C17.5732 26.8728 17.4803 27.6028 17.416 28.4241",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sperm.js

/* harmony default export */ var Sperm = (IconWrapper('sperm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + 'e101bf60' + ')'
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.2374 24.4746C20.0932 25.774 20.5673 27.1488 21.8458 28.0441C23.2456 29.0242 24.7931 29.5446 26.0149 29.0594C28.3219 28.1433 29.9908 25.1508 32.0264 22.2437C35.9861 16.5887 35.9796 7.85888 32.2866 5.273C28.5936 2.68713 20.4434 5.70557 16.4837 11.3606C14.5488 14.124 12.0147 17.8057 12.1672 19.3632C12.2957 20.6745 12.7366 21.405 14.1249 22.6378C15.5132 23.8706 16.2569 23.0878 18.2374 24.4746Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M13.6175 22.3169C10.0769 26.2145 9.60934 29.1762 12.2147 31.2019C14.8201 33.2276 18.0918 32.2293 22.0296 28.2071",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M12.2386 31.2274C9.14181 34.6146 8.57222 37.7734 10.5299 40.7039C13.4663 45.0997 19.2838 44.8594 22.124 41.5828C24.9642 38.3062 30.3082 30.1868 36.183 31.8559C42.0578 33.525 41.0605 39.9438 37.122 40.6182",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + 'e101bf60'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Teeth.js

/* harmony default export */ var Teeth = (IconWrapper('teeth', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13.1172 5H14.0026C18.6687 5.68989 19.9341 8.33825 24.0003 8.33825C28.0664 8.33825 29.3314 5.69005 33.9978 5H34.5003C39.747 5 44.0003 9.25329 44.0003 14.5V15.1259C44.0003 18.0287 40.9091 21.3433 40.0003 24.4829C39.035 27.8174 38.3737 30.5425 38.1796 33.3943C37.7248 40.0751 35.447 43 33.0003 43C29.3465 43 26.1017 28.0251 24.0627 28.0251C22.0237 28.0251 17.9776 43 15.0003 43C13.1832 43 10.8293 41.9254 9.94554 33.3943C9.59391 30 9.00122 27.9407 8.00028 24.4829C7.1205 21.4437 4.15199 17.8111 4.00028 14.5511C3.76597 9.51593 7.65782 5.24419 12.693 5.00988C12.8343 5.00331 12.9757 5.00002 13.1172 5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M15.4824 12.4634L32.0005 17.7887",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.4824 17.7886L32.0005 12.4632",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Microscope.js

/* harmony default export */ var Microscope = (IconWrapper('microscope', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M26 44C30.3462 40.9919 32.6627 37.9513 32.9493 34.8782C33.2359 31.805 32.308 29.5123 30.1657 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M27.6553 28.2227C30.1406 28.2227 32.1553 26.2079 32.1553 23.7227C32.1553 21.2374 30.1406 19.2227 27.6553 19.2227C25.17 19.2227 23.1553 21.2374 23.1553 23.7227C23.1553 26.2079 25.17 28.2227 27.6553 28.2227Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24.2882 27L18.7783 32.5772L9.58594 23.3848L27.9707 4.99999L37.1631 14.1924L30.9764 20.3791",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.55762 28.1357L14.4195 35.8141",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M6 44H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Nmr.js

/* harmony default export */ var Nmr = (IconWrapper('nmr', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4852 15.5147C30.3136 13.3431 27.3136 12 23.9999 12C20.6862 12 17.6862 13.3431 15.5146 15.5147",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34 24H14V32H34V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.0454 32L17 42.7147",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0455 32L31 42.7147",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mask.js

/* harmony default export */ var icons_Mask = (IconWrapper('mask', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14 14H34C39.5228 14 44 18.4772 44 24V27C44 34.1797 38.1797 40 31 40H24H17C9.8203 40 4 34.1797 4 27V24C4 18.4772 8.47715 14 14 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M18 27H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 21V33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 25.0421V12.0145C4.00003 9.7124 5.86624 7.84619 8.16833 7.84619C9.24067 7.84619 10.2718 8.25946 11.0472 9.00009C12.6463 10.5273 13.7875 12.194 14.4707 14.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 25.0421V12.7656C44 10.2925 41.9952 8.2876 39.522 8.2876C38.1474 8.2876 36.8489 8.91898 36 10.0002C34.9552 11.3308 33.9552 12.6641 33 14.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cardioelectric.js

/* harmony default export */ var Cardioelectric = (IconWrapper('cardioelectric', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5.55469 23.194C5.3698 22.8031 5.19795 22.4068 5.04108 22.0056C4.39264 20.3473 4 18.6042 4 16.8C4 10.8353 8.88417 6 14.9091 6C18.7036 6 22.0456 7.91792 24 10.828C25.9544 7.91792 29.2964 6 33.0909 6C39.1158 6 44 10.8353 44 16.8C44 24.5647 36.7273 31.2 33.0909 34.8C30.6667 37.2 27.6364 39.6 24 42C20.3636 39.6 17.3333 37.2 14.9091 34.8C14.543 34.4376 14.1401 34.0444 13.7114 33.6224",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 29.9734L19.1138 19.0396L25.5781 25.7059L35.2619 15.8188",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Other.js

/* harmony default export */ var Other = (IconWrapper('other', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.799 4.20101L4.41421 22.5858C3.63317 23.3668 3.63316 24.6332 4.41421 25.4142L22.799 43.799C23.58 44.58 24.8464 44.58 25.6274 43.799L44.0122 25.4142C44.7932 24.6332 44.7932 23.3668 44.0122 22.5858L25.6274 4.20101C24.8464 3.41996 23.58 3.41996 22.799 4.20101Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Toxins.js

/* harmony default export */ var Toxins = (IconWrapper('toxins', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M33.9579 44.0001C33.9579 44.0001 33.9824 40.5293 33.9579 39.7601C34.5074 39.4658 35.0408 39.1452 35.5563 38.8001C36.5925 38.1065 37.5566 37.3136 38.435 36.4352C41.8734 32.9968 44 28.2468 44 23.0001C44 12.5067 35.4934 4.00012 25 4.00012C14.5066 4.00012 6 12.5067 6 23.0001C6 28.2468 8.12665 32.9968 11.565 36.4352C12.4434 37.3136 13.4075 38.1065 14.4437 38.8001C14.9592 39.1452 15.4547 39.4658 16.0043 39.7601C16.0043 40.0083 16.0043 41.4216 16.0043 44.0001C27.9733 44.0001 33.9579 44.0001 33.9579 44.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 27.0001C20.2091 27.0001 22 25.2093 22 23.0001L18 19.0001C15.7909 19.0001 14 20.791 14 23.0001C14 25.2093 15.7909 27.0001 18 27.0001Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 27.0001C29.7909 27.0001 28 25.2093 28 23.0001L32 19.0001C34.2091 19.0001 36 20.791 36 23.0001C36 25.2093 34.2091 27.0001 32 27.0001Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 34.0001L24.9379 31.0001L28 33.8964",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Detection.js

/* harmony default export */ var Detection = (IconWrapper('detection', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M6.45012 34.8493L10.4398 31.5016L10.9532 25.6318L18.9331 18.9359L27.7107 11.5706L30.9026 8.8923C33.9875 6.30375 38.5867 6.70613 41.1753 9.79105C43.7638 12.876 43.3615 17.4752 40.2765 20.0638L37.0847 22.7421L28.3071 30.1073L20.3272 36.8033L14.4598 36.2924L10.473 39.6378C9.14922 40.7486 7.17567 40.5759 6.06492 39.2522C4.95548 37.93 5.12794 35.9587 6.45012 34.8493Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.4365 9.71768L38.2075 27.321",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.5755 29.0001L24.3018 24.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pesticide.js

/* harmony default export */ var Pesticide = (IconWrapper('pesticide', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M15 11.3684V4H24H33V11.3684L39 17.4868V19.5263V27.6842V42C39 43.1046 38.1046 44 37 44H11C9.89543 44 9 43.1046 9 42V27.6842V19.5263V17.4868L15 11.3684Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 23H17V35H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 11.5H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31 23V29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31 34V35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Chest.js

/* harmony default export */ var Chest = (IconWrapper('chest', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16.9968 3.5C16.9968 5.76563 16.9968 7.48184 16.9968 8.64861C16.9968 10.3988 16.0333 11.0735 12.4023 12.0065C8.77133 12.9394 7.69632 13.4893 6.84816 15.0995C6.28272 16.1729 6 17.8303 6 20.0715V37.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M34.9416 21.5088C35.1792 24.3856 34.6917 26.8981 33.4792 29.0462C32.2667 31.1943 30.126 32.5029 27.0572 32.9718",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.0587 21.5088C12.82 24.3856 13.3096 26.8981 14.5277 29.0462C15.7457 31.1943 17.9038 32.5029 21.0022 32.9718",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 43.5123C14.3333 41.9573 15 40.2665 15 38.4399C15 36.6133 15 33.8255 15 30.0767",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M35 43.5123C33.6667 41.9573 33 40.2665 33 38.4399C33 36.6133 33 33.8255 33 30.0767",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0003 3.5C31.0003 5.76563 31.0003 7.48184 31.0003 8.64861C31.0003 10.3988 31.9638 11.0735 35.5948 12.0065C39.2257 12.9394 40.3008 13.4893 41.1489 15.0995C41.7144 16.1729 41.9971 17.8303 41.9971 20.0715V37.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Symbol.js

/* harmony default export */ var icons_Symbol = (IconWrapper('symbol', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40.0032H18.0039C11.3346 35.6355 8 30.3009 8 23.9995C8 14.5473 15.0167 7.99976 24.0083 7.99976C33 7.99976 40 14.9998 40 23.9995C40 29.9993 36.6689 35.3338 30.0066 40.0032H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cell.js

/* harmony default export */ var Cell = (IconWrapper('cell', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28.4165 21.8466C28.2998 24.4328 28.9576 26.2456 30.3899 27.2852C32.5385 28.8445 37.8372 29.0274 42.0342 21.8466C46.2313 14.6658 42.1598 10.7653 40.6133 10.1148C39.5823 9.68114 38.546 9.51857 37.5044 9.6271",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31.0138 28.0061C29.7932 29.4197 29.6591 31.1176 30.6115 33.1C32.0401 36.0736 35.6988 35.5388 37.5277 38.0158C38.747 39.6671 39.2088 41.3285 38.9132 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M8.50434 23.6397C10.7641 26.661 16.1663 27.0552 22.5 24.6307C25.0645 23.649 27.7817 22.2053 30.5049 20.2867C32.5577 18.8405 34.0451 17.3644 35.0919 15.92C38.8633 10.7161 36.9159 5.92228 35.0919 4.40641C33.1156 2.76405 29.322 2.08894 22.5 5.03351C21.2777 5.56109 19.9582 6.20487 18.5345 6.98011C15.7374 8.50319 13.4336 10.2233 11.6622 12C7.4997 16.1749 6.27733 20.6623 8.50434 23.6397Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M16.2451 8.83917C16.6842 11.789 17.9165 14.3681 19.9419 16.5765C21.9673 18.7849 24.3883 20.1951 28 21.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M9.98149 24.9998C4.15571 30.6503 2.58552 34.9286 5.27092 37.8347C9.29902 42.1937 13.0878 36.6267 18.1666 36.6267C21.5524 36.6267 24.1636 38.7511 26 42.9998",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M35.0919 15.92C34.0451 17.3644 32.5577 18.8404 30.5049 20.2867C27.7817 22.2053 25.0645 23.649 22.5 24.6307",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M22.4999 5.03351C21.2776 5.56109 19.9581 6.20487 18.5344 6.9801C15.7374 8.50318 13.4335 10.2233 11.6621 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Lung.js

/* harmony default export */ var Lung = (IconWrapper('lung', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18.2442 22.2631C17.9517 17.3076 16.7773 14.7417 14.7208 14.5654C11.4002 14.2807 6.31025 19.7086 4.80125 27.3367C3.29225 34.9649 4.03742 40.4289 6.01197 40.7978C7.98652 41.1668 10.8556 39.0174 12.2168 39.0174C13.578 39.0174 18.2958 40.058 18.2958 38.1732C18.2958 37.2446 18.2958 34.9908 18.2958 30.0703",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29.6236 22.3708C29.9054 17.3448 31.0819 14.743 33.1532 14.5654C36.4739 14.2807 41.5638 19.7086 43.0728 27.3367C44.5818 34.9649 43.8366 40.4289 41.8621 40.7978C39.8875 41.1668 37.0184 39.0174 35.6573 39.0174C34.2961 39.0174 29.5782 40.058 29.5782 38.1732C29.5782 37.2467 29.5782 34.9703 29.5782 30.0703",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.5557 5.00003V19.9106C20.5121 22.2021 18.6 23.3479 14.8193 23.3479",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27.292 5.00003V19.9106C27.3355 22.2021 29.2476 23.3479 33.0283 23.3479",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15 30.0704C18.9553 30.0704 21.9553 29.1311 24 27.2525C26.0594 29.1311 29.069 30.0704 33.0286 30.0704",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Brain.js

/* harmony default export */ var Brain = (IconWrapper('brain', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.036 44.0001C18.0561 40.8045 16.5778 38.4222 14.6011 36.8532C11.636 34.4997 6.92483 35.9624 5.18458 33.5349C3.44433 31.1073 6.40382 26.6431 7.44234 24.009C8.48086 21.375 3.46179 20.4436 4.04776 19.6958C4.43842 19.1973 6.97471 17.7587 11.6567 15.3801C12.987 7.79346 17.9008 4.00014 26.3982 4.00014C39.1441 4.00014 44 14.8061 44 21.679C44 28.552 38.1201 35.9563 29.7441 37.5528C28.9951 38.6436 30.0754 40.7927 32.9848 44.0001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M19.4997 14.5C18.8464 17.0342 19.0408 18.8138 20.0829 19.8385C21.125 20.8633 22.9011 21.5334 25.4112 21.8489C24.8417 25.1176 25.5361 26.6511 27.4942 26.4493C29.4524 26.2475 30.6289 25.4338 31.0239 24.0083C34.0842 24.8684 35.7428 24.1486 35.9997 21.8489C36.3852 18.3993 34.525 15.6475 33.7624 15.6475C32.9997 15.6475 31.0239 15.5547 31.0239 14.5C31.0239 13.4452 28.7159 12.8493 26.6329 12.8493C24.5499 12.8493 25.8035 11.4452 22.9432 12C21.0363 12.3698 19.8885 13.2031 19.4997 14.5Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.5002 25.5001C29.4833 26.1311 28.0878 27.1804 27.5002 28.0001C26.0313 30.0496 24.8398 31.2975 24.5791 32.6082",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AntiCorrosion.js

/* harmony default export */ var AntiCorrosion = (IconWrapper('anti-corrosion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 41.9959C37.3333 42.0988 44 41.0073 44 38.7214C44 35.2927 28.4142 18.0026 24 18.0026C19.5858 18.0026 4 35.651 4 38.7214C4 40.7684 10.6667 41.8599 24 41.9959Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.0601 29.6613L17.4404 34.0002",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M24.5 11.0001C25.8807 11.0001 27 9.88085 27 8.50014C27 7.11943 25.8807 6.00014 24.5 6.00014C23.1193 6.00014 22 7.11943 22 8.50014C22 9.88085 23.1193 11.0001 24.5 11.0001Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M34 16.0001C35.1046 16.0001 36 15.1047 36 14.0001C36 12.8956 35.1046 12.0001 34 12.0001C32.8954 12.0001 32 12.8956 32 14.0001C32 15.1047 32.8954 16.0001 34 16.0001Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 21.0001C13.1046 21.0001 14 20.1047 14 19.0001C14 17.8956 13.1046 17.0001 12 17.0001C10.8954 17.0001 10 17.8956 10 19.0001C10 20.1047 10.8954 21.0001 12 21.0001Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17.5 15.0001C18.3284 15.0001 19 14.3286 19 13.5001C19 12.6717 18.3284 12.0001 17.5 12.0001C16.6716 12.0001 16 12.6717 16 13.5001C16 14.3286 16.6716 15.0001 17.5 15.0001Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Neural.js

/* harmony default export */ var Neural = (IconWrapper('neural', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20.5 33.0001C22.466 33.0001 23.2904 29.4621 25 28.7532C26.7723 28.0183 29.4174 30.0888 30.753 28.7532C32.0887 27.4176 30.4474 24.4513 31.1823 22.679C31.8912 20.9694 35 20.4661 35 18.5001C35 16.5342 31.462 16.0592 30.753 14.3496C30.0181 12.5774 32.0887 9.5827 30.753 8.24709C29.4174 6.91147 26.2656 8.98199 24.4933 8.24709C22.7837 7.53818 22.466 4.00014 20.5 4.00014C18.534 4.00014 18.0041 7.96476 16.2945 8.67366C14.5222 9.40856 11.5826 6.91147 10.247 8.24709C8.91134 9.5827 10.9819 12.2278 10.247 14.0001C9.53805 15.7097 6 16.5342 6 18.5001C6 20.4661 9.53805 20.9694 10.247 22.679C10.9819 24.4513 8.91134 27.4176 10.247 28.7532C11.5826 30.0888 14.5222 28.0183 16.2945 28.7532C18.0041 29.4621 18.534 33.0001 20.5 33.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 22.0001C22.2091 22.0001 24 20.2093 24 18.0001C24 15.791 22.2091 14.0001 20 14.0001C17.7909 14.0001 16 15.791 16 18.0001C16 20.2093 17.7909 22.0001 20 22.0001Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.5692 30.0001C15.3611 36.7991 16.0762 41.0544 18.7144 42.7661C22.6719 45.3338 25.4482 43.327 26.8968 41.8553C28.3454 40.3837 33.0495 33.944 37.0763 33.944C41.1031 33.944 42.315 37.8243 41.9334 39.944C41.679 41.3571 41.022 42.4024 39.9624 43.0798",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Germs.js

/* harmony default export */ var Germs = (IconWrapper('germs', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44.0001C25.3357 44.0001 26.3638 40.2499 27.6262 40.0001C28.9267 39.7429 30.4588 42.9788 31.6554 42.4827C32.8729 41.9778 32.4053 38.8667 33.4874 38.1423C34.5781 37.4121 37.2174 39.067 38.1421 38.1423C39.0668 37.2176 36.6639 34.0908 37.3941 33.0001C38.1186 31.918 41.9777 32.8731 42.4825 31.6556C42.9787 30.459 39.179 28.1132 39.4362 26.8127C39.686 25.5503 44 25.3358 44 24.0001C44 22.6645 40.2497 21.3594 40 20.097C39.7427 18.7965 42.9787 17.5413 42.4825 16.3447C41.9777 15.1272 38.1186 16.0823 37.3941 15.0001C36.6639 13.9095 39.0668 10.7827 38.1421 9.858C37.2174 8.93329 34.0907 10.949 33 10.2189C31.9178 9.49441 32.8729 6.02246 31.6554 5.51761C30.4588 5.02143 28.3005 7.90452 27 7.64724C25.7376 7.39752 25.3357 4.00014 24 4.00014C22.6643 4.00014 22.12 7.39752 20.8577 7.64724C19.5571 7.90452 17.5412 5.02143 16.3446 5.51761C15.1271 6.02246 16.0822 9.13354 15 9.858C13.9093 10.5881 10.7826 8.93329 9.85786 9.858C8.93315 10.7827 11.5248 13.9095 10.7947 15.0001C10.0702 16.0823 6.02232 15.1272 5.51747 16.3447C5.02129 17.5413 8.25728 19.2394 8 20.5399C7.75028 21.8023 4 22.6645 4 24.0001C4 25.3358 8.09721 25.9272 8.34694 27.1896C8.60421 28.4901 5.02129 30.459 5.51747 31.6556C6.02232 32.8731 9.80669 31.918 10.5312 33.0001C11.2613 34.0908 8.93315 37.2176 9.85786 38.1423C10.7826 39.067 13.9093 36.8549 15 37.585C16.0822 38.3095 15.1271 41.9778 16.3446 42.4827C17.5412 42.9788 19.5571 39.7429 20.8577 40.0001C22.12 40.2499 22.6643 44.0001 24 44.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 29.0001C31.2091 29.0001 33 27.2093 33 25.0001C33 22.791 31.2091 21.0001 29 21.0001C26.7909 21.0001 25 22.791 25 25.0001C25 27.2093 26.7909 29.0001 29 29.0001Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.5 26.0001C17.8807 26.0001 19 24.8808 19 23.5001C19 22.1194 17.8807 21.0001 16.5 21.0001C15.1193 21.0001 14 22.1194 14 23.5001C14 24.8808 15.1193 26.0001 16.5 26.0001Z",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Heart.js

/* harmony default export */ var Heart = (IconWrapper('heart', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.5397 20.0186C12.8522 17.9434 11.2675 17.4979 9.78564 18.6821C7.5629 20.4583 6.92453 26.6496 8.71324 32.1086C10.502 37.5676 13.9801 45.0017 21.0016 45.0017C28.0231 45.0017 29.684 37.5222 32.5485 33.0001C35.413 28.478 36.9285 24.1152 34.1208 18.6821",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 18.0368C9.29707 15.4428 7.96374 13.4306 6.99996 12.0002C5.5543 9.85464 9.25107 7.08164 11 8.96807C12.1659 10.2257 13.7148 12.078 15.6466 14.5249",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M15.0236 25.6396C14.5391 19.5759 14.9333 15.6276 16.2062 13.7947C18.1155 11.0455 21.6631 10.0031 25.0035 10.0031C26.9924 10.0031 28.8087 10.8502 30.4525 12.5444",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M41.0003 12.6128C41.5858 14.6492 40.6294 16.5097 37.6844 16.931C34.7393 17.3523 32.5313 18.8332 30.9388 20.079C29.3463 21.3248 26.4983 25.1046 25.9361 27.0023C25.3738 28.9 22.1602 27.1547 21.2971 26.3971C20.434 25.6394 19.5855 23.9806 21.2971 22.2457C23.0086 20.5108 22.6383 20.1646 22.6383 18.4052C22.6383 16.6459 32.0003 10.8263 37.2729 10.2941C38.4449 10.2257 40.4147 10.5763 41.0003 12.6128Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M23.0078 4.00014V9.26283",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20.3066 10.7178C17.2888 6.92534 14.8555 4.80868 13.0068 4.36781",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M17.0039 7.02894L17.9944 2.96156",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M35.6128 10.7174C35.2905 11.8219 35.2905 12.8575 35.6128 13.8241C35.935 14.7908 36.6255 15.8264 37.6842 16.9308",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Composition.js

/* harmony default export */ var Composition = (IconWrapper('composition', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M39.8281 21.786L21.9686 39.6455C18.5544 43.0598 12.9373 42.9784 9.42255 39.4637C5.90784 35.949 5.82643 30.3319 9.24073 26.9176L27.1002 9.05809",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M39.8281 21.786L21.9686 39.6455C18.5544 43.0598 12.9373 42.9784 9.42255 39.4637C5.90784 35.949 5.82643 30.3319 9.24073 26.9176L27.1002 9.05809",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M8.73438 27.4239L34.8784 26.7357",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29.393 20.907C30.1741 20.1259 30.1741 18.8596 29.393 18.0786C28.612 17.2975 27.3457 17.2975 26.5646 18.0786C25.7836 18.8596 25.7836 20.1259 26.5646 20.907C27.3457 21.688 28.612 21.688 29.393 20.907Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.7358 23.7356C24.5169 22.9546 24.5169 21.6882 23.7358 20.9072C22.9548 20.1261 21.6884 20.1261 20.9074 20.9072C20.1263 21.6882 20.1263 22.9546 20.9074 23.7356C21.6884 24.5167 22.9548 24.5167 23.7358 23.7356Z",
      "fill": props.colors[2]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.5645 5.52257L43.3634 25.3216",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Nests.js

/* harmony default export */ var Nests = (IconWrapper('nests', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4.99902 32.3137L20.0339 5.9429C20.958 3.98111 22.6267 3.00021 25.0402 3.00021C28.6603 3.00021 31.0172 7.98647 31.0172 7.98647C31.0172 7.98647 32.3445 8.18423 34.999 8.57974C30.9888 8.64535 28.6699 9.45218 28.0424 11.0002C27.1012 13.3223 30.4983 15.731 31.0172 19.0041C31.5361 22.2771 29.4663 27.8053 24.4882 30.5672C21.1694 32.4085 17.0262 32.8862 12.0583 32.0002L5.95844 43.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M14.9424 26.9782C17.5213 22.3286 19.2169 19.3432 20.0293 18.0218C21.2478 16.0396 26.2745 16.6372 24.4685 21.5845C23.2645 24.8826 20.0891 26.6805 14.9424 26.9782Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32.9678 32.9838C34.1099 30.2473 35.7775 28.589 37.9706 28.0089C40.1637 27.4288 42.1638 27.782 43.971 29.0684C42.8455 31.6643 41.1772 33.3285 38.9661 34.061C36.7549 34.7935 34.7555 34.4345 32.9678 32.9838Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M26.9854 35.1143C27.7422 37.8361 29.7468 39.6564 32.9993 40.5753C36.2518 41.4942 38.9296 40.9692 41.0325 39.0004C38.4317 35.97 36.088 34.3065 34.0015 34.01C31.915 33.7136 29.5763 34.0817 26.9854 35.1143Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Swallow.js

/* harmony default export */ var Swallow = (IconWrapper('swallow', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8.99902 33.3135L24.0339 6.94269C24.958 4.9809 26.6267 4 29.0402 4C32.6603 4 35.0172 8.98626 35.0172 8.98626C35.0172 8.98626 36.3445 9.18401 38.999 9.57953C34.9888 9.64514 32.6699 10.452 32.0424 12C31.1012 14.3221 34.4983 16.7308 35.0172 20.0039C35.5361 23.2769 33.4663 28.8051 28.4882 31.567C25.1694 33.4083 21.0262 33.8859 16.0583 33L9.95844 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M18.9424 27.978C21.5213 23.3284 23.2169 20.3429 24.0293 19.0215C25.2478 17.0394 30.2745 17.637 28.4685 22.5843C27.2645 25.8824 24.0891 27.6803 18.9424 27.978Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Api.js

/* harmony default export */ var Api = (IconWrapper('api', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 22.0001L34 25.0001L23 14.0001L26 11.0001C27.5 9.50002 33 7.00005 37 11.0001C41 15.0001 38.5 20.5 37 22.0001Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L37 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 25.9999L14 22.9999L25 33.9999L22 36.9999C20.5 38.5 15 41 11 36.9999C7 32.9999 9.5 27.5 11 25.9999Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 32L27 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 42L11 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 25L20 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BellRing.js

/* harmony default export */ var BellRing = (IconWrapper('bell-ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "20",
      "r": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 18V20H42V18H44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20H44V18H42V20ZM42 20C42 29.1371 36.4299 36.9732 28.5 40.2978",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 35L10 44H30L26 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "20",
      "r": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20C10 14.4772 14.4772 10 20 10",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BigClock.js

/* harmony default export */ var BigClock = (IconWrapper('big-clock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4C12.9543 4 4 12.8648 4 23.8V44H44V23.8C44 12.8648 35.0457 4 24 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "12",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18V24L28 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockOne.js

/* harmony default export */ var BlockOne = (IconWrapper('block-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 30H18V42H6V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6H42V18H30V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 18H42V30H30V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18H30V30H18V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18H18V30H6V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockTwo.js

/* harmony default export */ var BlockTwo = (IconWrapper('block-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 6H30V18H18V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6H42V18H30V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 6H18V18H6V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18H18V30H6V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 30H18V42H6V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockThree.js

/* harmony default export */ var BlockThree = (IconWrapper('block-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 24H18V36H6V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 24H42V36H30V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 12H18V24H6V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 12H30V24H18V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12H42V24H30V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockFour.js

/* harmony default export */ var BlockFour = (IconWrapper('block-four', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 12H18V24H6V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 12H30V24H18V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12H42V24H30V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H30V36H18V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockFive.js

/* harmony default export */ var BlockFive = (IconWrapper('block-five', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 30H18V42H6V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18H30V30H18V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6H42V18H30V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockSix.js

/* harmony default export */ var BlockSix = (IconWrapper('block-six', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 18H30V30H18V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18H18V30H6V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 18H42V30H30V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockSeven.js

/* harmony default export */ var BlockSeven = (IconWrapper('block-seven', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 18H30V30H18V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 18H42V30H30V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18H18V30H6V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 30H30V42H18V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 6H30V18H18V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockEight.js

/* harmony default export */ var BlockEight = (IconWrapper('block-eight', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6H18V18H6V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 6H30V18H18V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 18H30V30H18V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 30H30V42H18V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6H42V18H30V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockNine.js

/* harmony default export */ var BlockNine = (IconWrapper('block-nine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 14H30V26H18V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 26H30V38H18V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 14H42V26H30V14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 26H18V38H6V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BlockTen.js

/* harmony default export */ var BlockTen = (IconWrapper('block-ten', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6H36V18H24V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6H36V18H24V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 6H24V18H12V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 30H24V42H12V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18H24V30H12V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bookshelf.js

/* harmony default export */ var Bookshelf = (IconWrapper('bookshelf', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 6H40C40 6 44 8 44 13C44 18 40 20 40 20H4C4 20 8 18 8 13C8 8 4 6 4 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 28H8C8 28 4 30 4 35C4 40 8 42 8 42H44C44 42 40 40 40 35C40 30 44 28 44 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Checklist.js

/* harmony default export */ var Checklist = (IconWrapper('checklist', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 10L42 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 10L34 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 30L37 38L33 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "10",
      "width": "22",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "30",
      "width": "22",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChristmasTree.js

/* harmony default export */ var ChristmasTree = (IconWrapper('christmas-tree', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20 14L16 12L24 4L32 12L28 14L36 22L30 24L39 34H9L17 24L12 22L20 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 44H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 34L20 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 34L28 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesBriefs.js

/* harmony default export */ var ClothesBriefs = (IconWrapper('clothes-briefs', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22.1579 37C22.1579 37 21.2572 28.9255 18 25C14.956 21.3315 6 19 6 19L6 14H42L42 19C42 19 33.044 21.3315 30 25C26.7428 28.9254 25.8421 37 25.8421 37H22.1579Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesCardigan.js

/* harmony default export */ var ClothesCardigan = (IconWrapper('clothes-cardigan', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 17V37M11 37V44H37V37M11 37H4V17C4 14 6 10.5 9 8C12 5.5 16 4 16 4H32C32 4 36 5.5 39 8C42 10.5 44 14 44 17V37H37M11 37V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17L16 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4L24 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesCrewNeck.js

/* harmony default export */ var ClothesCrewNeck = (IconWrapper('clothes-crew-neck', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 17V37M11 37V44H37V37M11 37H4V17C4 14 6 10.5 9 8C12 5.5 18 4 18 4H30C30 4 36 5.5 39 8C42 10.5 44 14 44 17V37H37M11 37V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4C30 7.31371 27.3137 10 24 10C20.6863 10 18 7.31371 18 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesDiapers.js

/* harmony default export */ var ClothesDiapers = (IconWrapper('clothes-diapers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 11H42L42 19C42 19 42 27 38 31C34 35 27.8421 37 27.8421 37H20.1579C20.1579 37 14 35 10 31C6 27 6 19 6 19L6 11Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20.1579 37C20.1579 37 20.2572 29.9255 17 26C13.956 22.3315 6 19 6 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.8421 37C27.8421 37 27.7428 29.9254 31 26C34.044 22.3315 42 19 42 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesGlovesTwo.js

/* harmony default export */ var ClothesGlovesTwo = (IconWrapper('clothes-gloves-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 22V15M34 15V15C34 10.3088 34 7.96327 32.7601 6.34743C32.4409 5.93144 32.0686 5.55908 31.6526 5.23988C30.0367 4 27.6912 4 23 4H22C16.3431 4 13.5147 4 11.7574 5.75736C10 7.51472 10 10.3431 10 16V38H34V32C34 32 41 32 41 26C41 24 41 24 41 21C41 15 34 15 34 15Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 38H35C36.6569 38 38 39.3431 38 41C38 42.6569 36.6569 44 35 44H9C7.34315 44 6 42.6569 6 41C6 39.3431 7.34315 38 9 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesGloves.js

/* harmony default export */ var ClothesGloves = (IconWrapper('clothes-gloves', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35 27V17M35 17V16C35 10.3431 35 7.51472 33.2426 5.75736C31.4853 4 28.6569 4 23 4H19C13.3431 4 10.5147 4 8.75736 5.75736C7 7.51472 7 10.3431 7 16V44H35V37C35 37 42 37 42 31C42 29 42 26 42 23C42 17 35 17 35 17Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 23V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 23V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 23V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesHoodie.js

/* harmony default export */ var ClothesHoodie = (IconWrapper('clothes-hoodie', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 22V37M11 37V44H37V37M11 37H4V22C4 19 6 15.5 9 13C12 10.5 16 10 16 10L24 18M11 37V22M37 37H44V22C44 19 42 15.5 39 13C36 10.5 32 10 32 10L24 18M24 18V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 13C12 10.5 16 10 16 10L24 18L32 10C32 10 36 10.5 39 13L41 8.5L39 4H9L7 8.5L9 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesPantsShort.js

/* harmony default export */ var ClothesPantsShort = (IconWrapper('clothes-pants-short', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 36L8.00001 12H40L42 36H26.8421L24 25L21.1579 36H6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12L27 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12L20 19.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesPantsSweat.js

/* harmony default export */ var ClothesPantsSweat = (IconWrapper('clothes-pants-sweat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 19L33 38H42L38 4H10L6 38H15L24 19Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 38L35 44H41V38H34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 44H7V38H14L13 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L28 11.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L20 11.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesPants.js

/* harmony default export */ var ClothesPants = (IconWrapper('clothes-pants', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 44H42L38 4H10L6 44H15L24 19L33 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V9.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4C17 4 17 10 15 12C13 14 8.90002 15 8.90002 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4C31 4 31 10 33 12C35 14 39.1 15 39.1 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesShortSleeve.js

/* harmony default export */ var ClothesShortSleeve = (IconWrapper('clothes-short-sleeve', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4H4V12H10V44H38V12H44V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 32H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4C30 7.31371 27.3137 10 24 10C20.6863 10 18 7.31371 18 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesSkates.js

/* harmony default export */ var ClothesSkates = (IconWrapper('clothes-skates', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 4H8C6.11438 4 5.17157 4 4.58579 4.58579C4 5.17157 4 6.11438 4 8V40C4 41.8856 4 42.8284 4.58579 43.4142C5.17157 44 6.11438 44 8 44H12L16 40L20 44H40C41.8856 44 42.8284 44 43.4142 43.4142C44 42.8284 44 41.8856 44 40V32.4747C44 27.4829 44 24.987 42.5202 23.2917C41.0404 21.5964 38.5674 21.2592 33.6214 20.5847L32.3786 20.4153C27.4326 19.7408 24.9596 19.4036 23.4798 17.7083C22 16.013 22 13.5171 22 8.52531V8C22 6.11438 22 5.17157 21.4142 4.58579C20.8284 4 19.8856 4 18 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 11.5H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "15",
      "cy": "23",
      "r": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesSuit.js

/* harmony default export */ var ClothesSuit = (IconWrapper('clothes-suit', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 21V37M11 37V44H37V37M11 37H4V10L18 4H30L44 10V37H37M11 37V21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4L24 18M24 18L18 4M24 18V37V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4L24 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 18L18 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 4L14 12L18 17.5L16 23L24 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4L35 12L30 17.5L32 23L24 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesSweater.js

/* harmony default export */ var ClothesSweater = (IconWrapper('clothes-sweater', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 19V37M11 37V44H37V37M11 37H4V12L9 7L16 4H32L39 7L44 12V37H37M11 37V19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 21V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 7L24 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4L24 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4L24 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 7L24 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesTurtleneck.js

/* harmony default export */ var ClothesTurtleneck = (IconWrapper('clothes-turtleneck', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 23V37M11 37V44H37V37M11 37H4V23C4 20 6 16.5 9 14C12 11.5 18 10 18 10H30C30 10 36 11.5 39 14C42 16.5 44 20 44 23V37H37M11 37V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 10H18V4H30V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ClothesWindbreaker.js

/* harmony default export */ var ClothesWindbreaker = (IconWrapper('clothes-windbreaker', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 25V37M11 37V44H37V37M11 37H4V18L10.125 13L17 18L24 10L31 18L37.875 13L44 18V37H37M11 37V25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18L24 10L31 18L42 10L39.5 4H9L6 10L17 18Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M19 10H24M29 10H24M24 10L17 18L6 10L9 4H39.5L42 10L31 18L24 10Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ColorCard.js

/* harmony default export */ var ColorCard = (IconWrapper('color-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 44C13.3137 44 16 41.3137 16 38V23.5147V4H4V38C4 41.3137 6.68629 44 10 44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44C13.3137 44 16 41.3137 16 38V23.5147M10 44C6.68629 44 4 41.3137 4 38V4H16V23.5147M10 44H44V32H24.4853M5.75736 42.2426C8.10051 44.5858 11.8995 44.5858 14.2426 42.2426L24.4853 32M16 23.5147L35.0147 4.5L35.4853 4L43.9853 12.5L24.4853 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.2427 42.2426L43.9853 12.5L35.4853 4L16 23.5147",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.4853 32H44V44H12.4999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.4853 32H44V44H12.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44C13.3137 44 16 41.3137 16 38V23.5147V4H4V38C4 41.3137 6.68629 44 10 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Court.js

/* harmony default export */ var Court = (IconWrapper('court', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 36H44V12H4V36H24ZM24 36V28M24 12V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 24C11 26.2091 9.20914 28 7 28H4V20H7C9.20914 20 11 21.7909 11 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 24C37 26.2091 38.7909 28 41 28H44V20H41C38.7909 20 37 21.7909 37 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DashboardTwo.js

/* harmony default export */ var DashboardTwo = (IconWrapper('dashboard-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24M44 24H40M44 24C44 18.4836 41.7666 13.4887 38.1547 9.87045M4 24H8M4 24C4 18.4835 6.23339 13.4887 9.84529 9.87045M24 4V8M24 4C29.5292 4 34.5344 6.24377 38.1547 9.87045M24 4C18.4708 4 13.4656 6.24377 9.84529 9.87045M38.1547 9.87045L35.0252 13M9.84529 9.87045L12.9748 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39.8523 36.1961C36.1954 40.9422 30.4548 44 24 44C17.5452 44 11.8046 40.9422 8.14771 36.1961C12.8209 33.5259 18.2323 32 24 32C29.7677 32 35.179 33.5259 39.8523 36.1961Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DislikeTwo.js

/* harmony default export */ var DislikeTwo = (IconWrapper('dislike-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M15 8C8.92487 8 4 12.9249 4 19C4 30 17 40 24 42.3262C31 40 44 30 44 19C44 12.9249 39.0751 8 33 8C29.2797 8 25.9907 9.8469 24 12.6738C22.0093 9.8469 18.7203 8 15 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M28 20L20 28L28 20Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20L20 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M20 20.0001L28 28L20 20.0001Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 20.0001L28 28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Dislike.js

/* harmony default export */ var Dislike = (IconWrapper('dislike', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 31L21 26L28 20L19 15L20 9.19942C18.4999 8.43256 16.8004 8 15 8C8.92487 8 4 12.9249 4 19C4 30 17 40 24 42C31 40 44 30 44 19C44 12.9249 39.0751 8 33 8C31.1996 8 29.5001 8.43256 28 9.19942",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Division.js

/* harmony default export */ var Division = (IconWrapper('division', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "11",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "37",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24L4 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Drone.js

/* harmony default export */ var Drone = (IconWrapper('drone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 11L19 19M37 37L29 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 11L29 19M11 37L19 29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "19",
      "y": "19",
      "width": "10",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 18C38.3845 18 39.7379 17.5895 40.889 16.8203C42.0401 16.0511 42.9373 14.9579 43.4672 13.6788C43.997 12.3997 44.1356 10.9922 43.8655 9.63437C43.5954 8.2765 42.9287 7.02922 41.9498 6.05026C40.9708 5.07129 39.7235 4.4046 38.3656 4.13451C37.0078 3.86441 35.6003 4.00303 34.3212 4.53285C33.0421 5.06266 31.9489 5.95987 31.1797 7.11101C30.4105 8.26215 30 9.61553 30 11M37 30C38.3845 30 39.7379 30.4105 40.889 31.1797C42.0401 31.9489 42.9373 33.0421 43.4672 34.3212C43.997 35.6003 44.1356 37.0078 43.8655 38.3656C43.5954 39.7235 42.9287 40.9708 41.9498 41.9497C40.9708 42.9287 39.7235 43.5954 38.3656 43.8655C37.0078 44.1356 35.6003 43.997 34.3212 43.4672C33.0421 42.9373 31.9489 42.0401 31.1797 40.889C30.4105 39.7379 30 38.3845 30 37M11 18C9.61553 18 8.26216 17.5895 7.11101 16.8203C5.95987 16.0511 5.06266 14.9579 4.53285 13.6788C4.00303 12.3997 3.86441 10.9922 4.13451 9.63437C4.4046 8.2765 5.07129 7.02922 6.05026 6.05026C7.02922 5.07129 8.2765 4.4046 9.63437 4.13451C10.9922 3.86441 12.3997 4.00303 13.6788 4.53285C14.9579 5.06266 16.0511 5.95987 16.8203 7.11101C17.5895 8.26215 18 9.61553 18 11M11 30C9.61553 30 8.26216 30.4105 7.11101 31.1797C5.95987 31.9489 5.06266 33.0421 4.53285 34.3212C4.00303 35.6003 3.86441 37.0078 4.13451 38.3656C4.4046 39.7235 5.07129 40.9708 6.05026 41.9497C7.02922 42.9287 8.2765 43.5954 9.63437 43.8655C10.9922 44.1356 12.3997 43.997 13.6788 43.4672C14.9579 42.9373 16.0511 42.0401 16.8203 40.889C17.5895 39.7379 18 38.3845 18 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Erase.js

/* harmony default export */ var Erase = (IconWrapper('erase', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 42H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4L7 28L13 34H21L41 14L31 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EveryUser.js

/* harmony default export */ var EveryUser = (IconWrapper('every-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "29",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "29",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "9",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44C24 38.4772 19.5228 34 14 34C8.47715 34 4 38.4772 4 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44C44 38.4772 39.5228 34 34 34C28.4772 34 24 38.4772 24 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 24C34 18.4772 29.5228 14 24 14C18.4772 14 14 18.4772 14 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FactoryBuilding.js

/* harmony default export */ var FactoryBuilding = (IconWrapper('factory-building', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44V4H12V20L28 12V20L44 12V44H4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "28",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "28",
      "width": "8",
      "height": "8",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FigmaMask.js

/* harmony default export */ var FigmaMask = (IconWrapper('figma-mask', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 41.3242C19.978 37.8662 24 31.4027 24 23.9999C24 16.5971 19.978 10.1336 14 6.67554C8.02199 10.1336 4 16.5971 4 23.9999C4 31.4027 8.02199 37.8662 14 41.3242Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FireExtinguisher.js

/* harmony default export */ var FireExtinguisher = (IconWrapper('fire-extinguisher', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 20C6 15.5817 9.58172 12 14 12C18.4183 12 22 15.5817 22 20V44H6V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 44H42L36 26L30 44Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M36 26L30 44H42L36 26ZM36 26V24C36 16.4575 36 12.6863 33.6569 10.3431C31.3137 8 27.5425 8 20 8H18M10 8H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "8",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FireTwo.js

/* harmony default export */ var FireTwo = (IconWrapper('fire-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 21C36 28.1797 30.1797 34 23 34C15.8203 34 10 28.1797 10 21C10 13.8203 15 11 17 4C25 7.49989 25 18 25 18C25 18 27 12 33 10.5C33.5 16 36 17.9342 36 21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 29C26 31.7614 24.6569 34 23 34C21.3431 34 20 31.7614 20 29C20 26.2386 23 24 23 24C23 24 26 26.2386 26 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 36L39 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 44L39 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HospitalTwo.js

/* harmony default export */ var HospitalTwo = (IconWrapper('hospital-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 11H40L44 21H4L8 11H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 21H40V43H8V21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "5",
      "width": "16",
      "height": "16",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "29",
      "width": "8",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "24",
      "y": "29",
      "width": "8",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 13H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 43H12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16L24 10",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HotPot.js

/* harmony default export */ var HotPot = (IconWrapper('hot-pot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 11V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 11L32 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 11L16 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 17H4C4 22.5856 7.57778 27.5028 13 30.3648C16.1558 32.0305 19.9364 33 24 33C28.0636 33 31.8442 32.0305 35 30.3648C40.4222 27.5028 44 22.5856 44 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.4668 39H37.5332",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 30.3647L9 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 30.3647L39 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 25H28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Leaf.js

/* harmony default export */ var Leaf = (IconWrapper('leaf', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 24C37 38.0938 24 44 24 44C24 44 11 39.375 11 24C11 8.625 24 4 24 4C24 4 37 9.90625 37 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36L29 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29L19 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23L29 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Magnet.js

/* harmony default export */ var Magnet = (IconWrapper('magnet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 10V26C6 35.9411 14.0589 44 24 44C33.9411 44 42 35.9411 42 26V10M14 10V26C14 31.5228 18.4772 36 24 36C29.5228 36 34 31.5228 34 26V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4H6V10H14V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 4H42V10H34V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NetworkTree.js

/* harmony default export */ var NetworkTree = (IconWrapper('network-tree', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "34",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "6",
      "width": "32",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 34V26H40V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "34",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "34",
      "width": "8",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 12H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NintendoSwitch.js

/* harmony default export */ var NintendoSwitch = (IconWrapper('nintendo-switch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 18C6 12.3431 6 9.51472 7.75736 7.75736C9.51472 6 12.3431 6 18 6H20V42H18C12.3431 42 9.51472 42 7.75736 40.2426C6 38.4853 6 35.6569 6 30V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 18C42 12.3431 42 9.51472 40.2426 7.75736C38.4853 6 35.6569 6 30 6H28V42H30C35.6569 42 38.4853 42 40.2426 40.2426C42 38.4853 42 35.6569 42 30V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 13L35 15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 33L13 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Palace.js

/* harmony default export */ var Palace = (IconWrapper('palace', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 18H44L24 6L4 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 42L4 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 18V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 18V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 18V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Percentage.js

/* harmony default export */ var Percentage = (IconWrapper('percentage', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "11",
      "cy": "11",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "37",
      "cy": "37",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L6 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Popcorn.js

/* harmony default export */ var Popcorn = (IconWrapper('popcorn', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33.6961 40.8677L39 17H7L12.3039 40.8677C12.6376 42.3694 12.8045 43.1202 13.3529 43.5601C13.9013 44 14.6704 44 16.2087 44H29.7913C31.3296 44 32.0987 44 32.6471 43.5601C33.1955 43.1202 33.3624 42.3694 33.6961 40.8677Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 44L28 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 44L18 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 44H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 17H15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 17C11 17 9.99999 14 11.5 12.5C13 11 16 11.5 16 11.5C16 11.5 16 8.49996 18 7.49996C20 6.49996 23 7.99994 23 7.99994C23 7.99994 25 4.64278 28 5.49998C31 6.35719 31 10 31 10C31 10 33.5 10 35 12C36.5 14 35 17 35 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ProjectorTwo.js

/* harmony default export */ var ProjectorTwo = (IconWrapper('projector-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 38V32H12H36H42V38H36V32H12V38H6Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M6 32H4V16H24M6 32V38H12V32M6 32H12M12 32H36M42 32H44V16H38M42 32V38H36V32M42 32H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 24H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "16",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "16",
      "r": "3",
      "fill": props.colors[2]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PublicToilet.js

/* harmony default export */ var PublicToilet = (IconWrapper('public-toilet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "15",
      "cy": "10",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "33",
      "cy": "10",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20H20L18 42H12L10 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H38L40 31H37L36 42H30L29 31H26L28 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Receiver.js

/* harmony default export */ var Receiver = (IconWrapper('receiver', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.85786 38.1422C17.6684 45.9527 30.3316 45.9527 38.1421 38.1422L9.85786 9.85791C2.04738 17.6684 2.04738 30.3317 9.85786 38.1422Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.8994 33.8994L39.1698 11.9137",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23.9999L37.1716 10.8284",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.1006 14.1005L36.0863 8.83008",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8C44 10.2091 42.2091 12 40 12C39.7154 12 39.4377 11.9703 39.1699 11.9137C38.3984 11.7509 37.7089 11.3658 37.1716 10.8284C36.6342 10.2911 36.2491 9.60161 36.0863 8.83013C36.0297 8.56232 36 8.28463 36 8C36 5.79086 37.7909 4 40 4C42.2091 4 44 5.79086 44 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RoadCone.js

/* harmony default export */ var RoadCone = (IconWrapper('road-cone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 6H21L19.75 10.5L18.5 15L16 24L13.5 33L12.25 37.5L11 42H37L35.5 36.6L32 24L29.5 15L28.25 10.5L27 6Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M37 42H11M37 42H6H11M37 42H42M37 42L35.5 36.6L32 24L29.5 15L28.25 10.5L27 6H21L19.75 10.5L18.5 15L16 24L13.5 33L12.25 37.5L11 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13.5 33H34.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24H16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.5 15H18.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.25 10.5L35.5 36.6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.25 37.5L19.75 10.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ruler.js

/* harmony default export */ var Ruler = (IconWrapper('ruler', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 14L34 4L30.25 7.75L26.5 11.5L19 19L11.5 26.5L7.75 30.25L4 34L14 44L44 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.25 7.75L7.75 30.25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 29L13 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24L20 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 19L23 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14L30 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 9L33 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sapling.js

/* harmony default export */ var Sapling = (IconWrapper('sapling', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 8.00001C22.3137 12.6863 23.0352 21.035 23.0352 21.035C23.0352 21.035 31.3137 21.6863 36 17C40.6863 12.3137 40.0058 4.03509 40.0058 4.03509C40.0058 4.03509 31.6863 3.31372 27 8.00001Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.0352 21.035C23.0352 21.035 22.3137 12.6863 27 8.00001C31.6863 3.31372 40.0058 4.03509 40.0058 4.03509C40.0058 4.03509 40.6863 12.3137 36 17C31.3137 21.6863 23.0352 21.035 23.0352 21.035ZM23.0352 21.035L31 13.0702",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 21C23.8491 24.8434 22.9711 31.9711 22.9711 31.9711C22.9711 31.9711 15.8491 32.8434 12 29C8.15087 25.1566 9.03219 18.0289 9.03219 18.0289C9.03219 18.0289 16.1509 17.1566 20 21Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M22.9711 31.9711C22.9711 31.9711 23.8491 24.8434 20 21C16.1509 17.1566 9.03219 18.0289 9.03219 18.0289C9.03219 18.0289 8.15087 25.1566 12 29C15.8491 32.8434 22.9711 31.9711 22.9711 31.9711ZM22.9711 31.9711L16 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Stethoscope.js

/* harmony default export */ var Stethoscope = (IconWrapper('stethoscope', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10.0526 7H4C4 7 4 16 4 21C4 26 8 32 16 32C24 32 28 26 28 21C28 16 28 7 28 7H21.9474M10.0526 4V10M21.9474 4V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "40",
      "cy": "19",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32C16 38.6274 21.3726 44 28 44C34.6274 44 40 38.6274 40 32V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Strongbox.js

/* harmony default export */ var Strongbox = (IconWrapper('strongbox', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "12",
      "r": "2",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "36",
      "r": "2",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "12",
      "r": "2",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "36",
      "r": "2",
      "fill": props.colors[2]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "9",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TentBanner.js

/* harmony default export */ var TentBanner = (IconWrapper('tent-banner', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M7 43H39L23 17L7 43Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0769 25L23 28L27.9231 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 17V12V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 4H23V12H35L32 8L35 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tent.js

/* harmony default export */ var Tent = (IconWrapper('tent', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 12H38L39.5 18L41 24L44 36H16L13 24L11.5 18L10 12Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 12H38L39.5 18M10 12L4 36H16M10 12L11.5 18M16 36H44L41 24L39.5 18M16 36L13 24L11.5 18M11.5 18H39.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Translate.js

/* harmony default export */ var Translate = (IconWrapper('translate', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 42L39.7143 37M26 42L28.2857 37M28.2857 37L34 24L39.7143 37M28.2857 37H39.7143",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 6L17 9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 11H28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 16C10 16 11.7895 22.2609 16.2632 25.7391C20.7368 29.2174 28 32 28 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 11C24 11 22.2105 19.2174 17.7368 23.7826C13.2632 28.3478 6 32 6 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tree.js

/* harmony default export */ var Tree = (IconWrapper('tree', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13.0448 14C13.5501 8.3935 18.262 4 24 4C29.738 4 34.4499 8.3935 34.9552 14H35C39.9706 14 44 18.0294 44 23C44 27.9706 39.9706 32 35 32H13C8.02944 32 4 27.9706 4 23C4 18.0294 8.02944 14 13 14H13.0448Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28L29 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 25L18 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UserBusiness.js

/* harmony default export */ var UserBusiness = (IconWrapper('user-business', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44C42 34.0589 33.9411 26 24 26C14.0589 26 6 34.0589 6 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44L28 39L24 26L20 39L24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterNo.js

/* harmony default export */ var WaterNo = (IconWrapper('water-no', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9 29C11.7614 29 14 26.7614 14 24C14 26.7614 16.2386 29 19 29C21.7614 29 24 26.7614 24 24C24 26.7614 26.2386 29 29 29C31.7614 29 34 26.7614 34 24C34 26.7614 36.2386 29 39 29C41.7614 29 44 26.7614 44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24C4 26.7614 6.23858 29 9 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 5L29 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 5L19 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Water.js

/* harmony default export */ var Water = (IconWrapper('water', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9 29C11.7614 29 14 26.7614 14 24C14 26.7614 16.2386 29 19 29C21.7614 29 24 26.7614 24 24C24 26.7614 26.2386 29 29 29C31.7614 29 34 26.7614 34 24C34 26.7614 36.2386 29 39 29C41.7614 29 44 26.7614 44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24C4 26.7614 6.23858 29 9 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 13C28 15.2091 26.2091 17 24 17C21.7909 17 20 15.2091 20 13C20 10.7909 24 4 24 4C24 4 28 10.7909 28 13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinCardsOffers.js

/* harmony default export */ var WeixinCardsOffers = (IconWrapper('weixin-cards-offers', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 12L42 16V40L6 36V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 15.5554V8L6.00049 11.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinFavorites.js

/* harmony default export */ var WeixinFavorites = (IconWrapper('weixin-favorites', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 14L24 6L42 14M6 14L24 22M6 14V34L24 42M42 14L24 22M42 14V34L24 42M24 22V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinGames.js

/* harmony default export */ var WeixinGames = (IconWrapper('weixin-games', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 24L24 6L42 24L24 42L6 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 29V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 24H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 19V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24C29 26.7614 26.7614 29 24 29C21.2386 29 19 26.7614 19 24C19 21.2386 21.2386 19 24 19C26.7614 19 29 21.2386 29 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinMarket.js

/* harmony default export */ var WeixinMarket = (IconWrapper('weixin-market', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "14",
      "width": "32",
      "height": "30",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinMiniApp.js

/* harmony default export */ var WeixinMiniApp = (IconWrapper('weixin-mini-app', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 24C29.9889 24 30.9556 23.7068 31.7779 23.1574C32.6001 22.6079 33.241 21.827 33.6194 20.9134C33.9978 19.9998 34.0969 18.9945 33.9039 18.0246C33.711 17.0546 33.2348 16.1637 32.5355 15.4645C31.8363 14.7652 30.9454 14.289 29.9755 14.0961C29.0055 13.9031 28.0002 14.0022 27.0866 14.3806C26.173 14.759 25.3921 15.3999 24.8427 16.2222C24.2932 17.0444 24 18.0111 24 19V29C24 29.9889 23.7068 30.9556 23.1574 31.7779C22.6079 32.6001 21.8271 33.241 20.9134 33.6194C19.9998 33.9978 18.9945 34.0969 18.0246 33.9039C17.0546 33.711 16.1637 33.2348 15.4645 32.5355C14.7652 31.8363 14.289 30.9454 14.0961 29.9755C13.9031 29.0055 14.0022 28.0002 14.3806 27.0866C14.759 26.173 15.3999 25.3921 16.2222 24.8427C17.0444 24.2932 18.0111 24 19 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinPeopleNearby.js

/* harmony default export */ var WeixinPeopleNearby = (IconWrapper('weixin-people-nearby', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "15",
      "cy": "10",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "33",
      "cy": "10",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20H20L18 42H12L10 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 20H38L36 42H30L28 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinScan.js

/* harmony default export */ var WeixinScan = (IconWrapper('weixin-scan', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 30H12L14 35H26L28.0883 41.2649C28.6328 42.8983 30.1613 44 31.883 44H38C40.2091 44 42 42.2091 42 40V30L43 23L39.3536 23.7293C38.5388 23.8922 37.9097 24.542 37.7731 25.3616L37 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 18H36L34 13H22L19.9117 6.73509C19.3672 5.10172 17.8387 4 16.117 4H10C7.79086 4 6 5.79086 6 8V18L5 25L8.64639 24.2707C9.46118 24.1078 10.0903 23.458 10.2269 22.6384L11 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinSearch.js

/* harmony default export */ var WeixinSearch = (IconWrapper('weixin-search', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 16L12.5 17.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 42L14 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 42L21 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 16L22.5 17.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 6L18 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinShake.js

/* harmony default export */ var WeixinShake = (IconWrapper('weixin-shake', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 19L29 6L6 29L19 42L42 19Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 29L19 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 42L42 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18L18 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WeixinTopStories.js

/* harmony default export */ var WeixinTopStories = (IconWrapper('weixin-top-stories', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 4L31.2 11.5292L41.3205 14L38.4 24L41.3205 34L31.2 36.4708L24 44L16.8 36.4708L6.67949 34L9.6 24L6.67949 14L16.8 11.5292L24 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30.9773 11.915L31.3719 19.7439L37.9545 24L31.3719 28.2561L30.9773 36.0849L24 32.5122L17.0228 36.0849L16.6282 28.2561L10.0455 24L16.6282 19.7439L17.0228 11.915L24 15.4877L30.9773 11.915Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/XiaoduHome.js

/* harmony default export */ var XiaoduHome = (IconWrapper('xiaodu-home', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 20L24 6L44 20V42H4V20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.6863 26.6863C14.172 25.2006 15.9358 24.022 17.8771 23.2179C19.8183 22.4139 21.8988 22 24 22C26.1011 22 28.1817 22.4139 30.1229 23.2179C32.0641 24.022 33.828 25.2006 35.3137 26.6863",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18.3431 32.3431C19.086 31.6003 19.9679 31.011 20.9385 30.609C21.9091 30.2069 22.9494 30 24 30C25.0506 30 26.0909 30.2069 27.0615 30.609C28.0321 31.011 28.914 31.6003 29.6569 32.3431",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Xiaodu.js

/* harmony default export */ var Xiaodu = (IconWrapper('xiaodu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4.14317 21.0805C4.4982 17.2939 4.67571 15.4006 6.65595 13.3751C8.63619 11.3496 10.8152 11.0955 15.1734 10.5873C18.0037 10.2573 21.1305 10 24 10C26.8695 10 29.9963 10.2573 32.8266 10.5873C37.1848 11.0955 39.3638 11.3496 41.3441 13.3751C43.3243 15.4006 43.5018 17.2939 43.8568 21.0805C43.9464 22.0361 44 23.0181 44 24C44 24.9819 43.9464 25.9639 43.8568 26.9195C43.5018 30.7061 43.3243 32.5994 41.3441 34.6249C39.3638 36.6504 37.1848 36.9045 32.8266 37.4127C29.9963 37.7427 26.8695 38 24 38C21.1305 38 18.0037 37.7427 15.1734 37.4127C10.8152 36.9045 8.63619 36.6504 6.65595 34.6249C4.67571 32.5994 4.4982 30.7061 4.14317 26.9195C4.05357 25.9639 4 24.9819 4 24C4 23.0181 4.05357 22.0361 4.14317 21.0805Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19V29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 19L28 24L33 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ad.js

/* harmony default export */ var Ad = (IconWrapper('ad', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 38L35 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 10L13 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.1429 28L18 17L14.8571 28H21.1429Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 31L14.8571 28M22 31L21.1429 28M21.1429 28L18 17L14.8571 28M21.1429 28H14.8571",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 24C35 29 31.4183 31 27 31V17C31.4183 17 35 19 35 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AddItem.js

/* harmony default export */ var AddItem = (IconWrapper('add-item', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 30V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 30H24H42V42H6V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "12.5",
      "x2": "6",
      "y2": "11.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "18",
      "x2": "6",
      "y2": "17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "7",
      "x2": "6",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "42",
      "y1": "12.5",
      "x2": "42",
      "y2": "11.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "42",
      "y1": "18",
      "x2": "42",
      "y2": "17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "42",
      "y1": "7",
      "x2": "42",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "42",
      "y1": "18",
      "x2": "41",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "7",
      "y1": "18",
      "x2": "6",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "7",
      "y1": "6",
      "x2": "6",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "14",
      "y1": "6",
      "x2": "13",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "21",
      "y1": "6",
      "x2": "20",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "21",
      "y1": "18",
      "x2": "20",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "28",
      "y1": "6",
      "x2": "27",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "14",
      "y1": "18",
      "x2": "13",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "28",
      "y1": "18",
      "x2": "27",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "35",
      "y1": "6",
      "x2": "34",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "35",
      "y1": "18",
      "x2": "34",
      "y2": "18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "42",
      "y1": "6",
      "x2": "41",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AddSubset.js

/* harmony default export */ var AddSubset = (IconWrapper('add-subset', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 28V35H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 28H42V42H18V35V28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "13.5",
      "x2": "6",
      "y2": "12.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "20",
      "x2": "6",
      "y2": "19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "7",
      "x2": "6",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "13.5",
      "x2": "32",
      "y2": "12.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "20",
      "x2": "32",
      "y2": "19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "7",
      "x2": "32",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "20",
      "x2": "31",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "7",
      "y1": "20",
      "x2": "6",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "7",
      "y1": "6",
      "x2": "6",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "13",
      "y1": "6",
      "x2": "12",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "19.5",
      "y1": "6",
      "x2": "18.5",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "19.5",
      "y1": "20",
      "x2": "18.5",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "26",
      "y1": "6",
      "x2": "25",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "13",
      "y1": "20",
      "x2": "12",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "26",
      "y1": "20",
      "x2": "25",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "6",
      "x2": "31",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AdjacentItem.js

/* harmony default export */ var AdjacentItem = (IconWrapper('adjacent-item', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 29H42V41H14V35V29Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 7H42V19H14V13V7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 13V19H42V7H14V13ZM14 13H6V35H14M14 35V41H42V29H14V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 13H6V35H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 29H42V41H14V35V29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 7H42V19H14V13V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AppletClosed.js

/* harmony default export */ var AppletClosed = (IconWrapper('applet-closed', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6L15 15M42 42L33 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 6L33 15M6 42L15 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AddressBook.js

/* harmony default export */ var AddressBook = (IconWrapper('address-book', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 36V44H40V4H8V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 30H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 24H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 18H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "17",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 35C32 30.5817 28.4183 27 24 27C19.5817 27 16 30.5817 16 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArithmeticButtons.js

/* harmony default export */ var ArithmeticButtons = (IconWrapper('arithmetic-buttons', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "40",
      "rx": "3",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 14H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 14H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 37L17 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 18V10",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 37L11 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 14H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 31H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 37H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4L24 44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 44H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28L4 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 28V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ArrowKeys.js

/* harmony default export */ var ArrowKeys = (IconWrapper('arrow-keys', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 4H34V24H14V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H24V44H4V24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24H44V44H24V24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24H4V44H24M24 24V44M24 24H44V44H24M14 4H34V24H14V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 10V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 14L24 10L28 14",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 34L18 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 38L10 34L14 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 34L30 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 30L38 34L34 38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BadgeTwo.js

/* harmony default export */ var BadgeTwo = (IconWrapper('badge-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 44L24 40L32 44V24.9444C29.877 26.8446 27.0734 28 24 28C20.9266 28 18.123 26.8446 16 24.9444V44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 16C36 19.554 34.455 22.7471 32 24.9444C29.877 26.8446 27.0734 28 24 28C20.9266 28 18.123 26.8446 16 24.9444C13.545 22.7471 12 19.554 12 16C12 9.37258 17.3726 4 24 4C30.6274 4 36 9.37258 36 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 21V11L22 12M24 21H26M24 21H22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BalanceTwo.js

/* harmony default export */ var BalanceTwo = (IconWrapper('balance-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M16 22L10 12L4 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M10 28C13.3137 28 16 25.3137 16 22H4C4 25.3137 6.68629 28 10 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 22L38 12L32 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38 28C41.3137 28 44 25.3137 44 22H32C32 25.3137 34.6863 28 38 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 6V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 12H24H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 12H24H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 42H24H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BasketballStand.js

/* harmony default export */ var BasketballStand = (IconWrapper('basketball-stand', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "5",
      "width": "40",
      "height": "28",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 22V15H17V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 39H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 33H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 27L30 39L31 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 27L18 39L17 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 27L24 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 27L14 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BeachUmbrella.js

/* harmony default export */ var BeachUmbrella = (IconWrapper('beach-umbrella', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14.3408 21.4118L24 24L33.6593 26.5882L43.3186 29.1763C45.6566 20.4505 41.8475 11.5257 34.5458 7C32.9195 5.99199 31.1199 5.2022 29.1764 4.68144C26.9382 4.08171 24.6868 3.88643 22.5 4.05083C14.2626 4.67006 6.94062 10.3925 4.68152 18.8236L14.3408 21.4118Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.1764 4.6814C29.1764 4.6814 23.5356 8.34634 20.3097 12.6583C17.0837 16.9703 16.2726 21.9294 16.2726 21.9294",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.1764 4.6814C29.1764 4.6814 32.229 10.6757 32.8667 16.023C33.5045 21.3702 31.7274 26.0705 31.7274 26.0705",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.68152 18.8236L14.3408 21.4118L24 24L33.6593 26.5882L43.3186 29.1764",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24L18.5 43.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.5 4.05083C24.6868 3.88643 26.9382 4.08171 29.1764 4.68144C31.1199 5.2022 32.9195 5.99199 34.5458 7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BirthdayCake.js

/* harmony default export */ var BirthdayCake = (IconWrapper('birthday-cake', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 40H40V24H8V40Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M40 40H8M40 40H4H8M40 40H44M40 40V24H8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 34L36 32L32 34L28 32L24 34L20 32L16 34L12 32L8 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 24V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24V15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 10V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 10V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 10V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 24V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 24V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bitcoin.js

/* harmony default export */ var Bitcoin = (IconWrapper('bitcoin', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 16H25H27C29.2091 16 31 17.7909 31 20C31 22.2091 29.2091 24 27 24H20V16Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 16V24H27C29.2091 24 31 22.2091 31 20V20C31 17.7909 29.2091 16 27 16H25M20 16H16M20 16V12M20 16H25M25 16V12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 24H29C31.2091 24 33 25.7909 33 28C33 30.2091 31.2091 32 29 32H25H20V24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 32V24H29C31.2091 24 33 25.7909 33 28V28C33 30.2091 31.2091 32 29 32H25M20 32V36M20 32H16H25M20 32H25M25 32V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BrakePads.js

/* harmony default export */ var BrakePads = (IconWrapper('brake-pads', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C26.6264 4 29.2272 4.51732 31.6537 5.52241C34.0802 6.5275 36.285 8.00069 38.1421 9.85787C39.9993 11.715 41.4725 13.9198 42.4776 16.3463C43.4827 18.7728 44 21.3736 44 24L36.0064 24C36.0064 22.4233 35.6959 20.862 35.0925 19.4053C34.4891 17.9487 33.6047 16.6251 32.4898 15.5102C31.3749 14.3953 30.0513 13.5109 28.5947 12.9075C27.138 12.3041 25.5767 11.9936 24 11.9936V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CarBattery.js

/* harmony default export */ var CarBattery = (IconWrapper('car-battery', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "3",
      "y": "12",
      "width": "40",
      "height": "30",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "3",
      "y": "6",
      "width": "8",
      "height": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "35",
      "y": "6",
      "width": "8",
      "height": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 21H15",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 21H37",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 18V24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CarouselVideo.js

/* harmony default export */ var CarouselVideo = (IconWrapper('carousel-video', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "11",
      "y": "7",
      "width": "26",
      "height": "34",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "4",
      "y": "11",
      "width": "7",
      "height": "26",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "37",
      "y": "11",
      "width": "7",
      "height": "26",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 20L28 24L22 28V20Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CeMarking.js

/* harmony default export */ var CeMarking = (IconWrapper('ce-marking', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22 42C12.0589 42 4 33.9411 4 24C4 14.0589 12.0589 6 22 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 42C34.0589 42 26 33.9411 26 24C26 14.0589 34.0589 6 44 6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 24H37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Certificate.js

/* harmony default export */ var Certificate = (IconWrapper('certificate', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 6H6C4.89543 6 4 6.89543 4 8V34C4 35.1046 4.89543 36 6 36H42C43.1046 36 44 35.1046 44 34V8C44 6.89543 43.1046 6 42 6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 14L36 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 21H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 28H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "30",
      "cy": "27",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M30 40L34 42V31.4722C34 31.4722 32.8594 33 30 33C27.1406 33 26 31.5 26 31.5V42L30 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Checkerboard.js

/* harmony default export */ var Checkerboard = (IconWrapper('checkerboard', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 4H7C5.34315 4 4 5.34315 4 7V17V31V41C4 42.6569 5.34315 44 7 44H17H31H41C42.6569 44 44 42.6569 44 41V31V17V7C44 5.34315 42.6569 4 41 4H31H17Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "23",
      "y1": "17",
      "x2": "44",
      "y2": "17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "4",
      "y1": "17",
      "x2": "13",
      "y2": "17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "35",
      "y1": "31",
      "x2": "44",
      "y2": "31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "6",
      "y1": "31",
      "x2": "25",
      "y2": "31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "17",
      "y1": "21",
      "x2": "17",
      "y2": "44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4L31 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 35L31 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4L17 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 31C35 33.2091 33.2091 35 31 35C28.7909 35 27 33.2091 27 31C27 28.7909 28.7909 27 31 27C33.2091 27 35 28.7909 35 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 17C21 19.2091 19.2091 21 17 21C14.7909 21 13 19.2091 13 17C13 14.7909 14.7909 13 17 13C19.2091 13 21 14.7909 21 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChopsticksFork.js

/* harmony default export */ var ChopsticksFork = (IconWrapper('chopsticks-fork', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 5V15C8 20 14 20 14 20C14 20 20 20 20 15V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 4L40 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4L28 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Compass.js

/* harmony default export */ var Compass = (IconWrapper('compass', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 44L22.6875 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 44L25.3125 15.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "12",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37.5702 33C33.662 35.5307 29.0026 37 24 37C18.9974 37 14.3381 35.5307 10.4299 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CooperativeHandshake.js

/* harmony default export */ var CooperativeHandshake = (IconWrapper('cooperative-handshake', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 28L24 40M36 28L32 32M36 28L44 20L32 8L17 23M36 28L28 20L22 26L17 23M24 40L4 20L16 8L24 16L17 23M24 40L28 36M32 32L29 29M32 32L28 36M28 36L25 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Copyright.js

/* harmony default export */ var icons_Copyright = (IconWrapper('copyright', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17H20V24H23H24C27 24 28 22 28 20.5C28 19 27 17 24 17Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 31V24M20 24L20 17H24C27 17 28 19 28 20.5C28 22 27 24 24 24H23M20 24H23M28 31L23 24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Coronavirus.js

/* harmony default export */ var Coronavirus = (IconWrapper('coronavirus', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C12.9543 44 4 35.0457 4 24C4 12.9543 12.9543 4 24 4C35.0457 4 44 12.9543 44 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin,
      "stroke-dasharray": "6 8"
    }
  }), h("path", {
    "attrs": {
      "d": "M7.63489 35.5C8.338 36.4987 9.13023 37.4302 10 38.2829C10.9181 39.1829 11.9227 39.9951 13 40.706",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.8684 43.6262C26.6168 43.8714 25.3234 44 24 44C22.6765 44 21.3831 43.8714 20.1315 43.6262",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.5491 28.2428C43.8445 26.8754 44 25.4559 44 24C44 22.5745 43.8509 21.1838 43.5674 19.8427",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.3651 12.5C39.662 11.5013 38.8698 10.5698 38 9.71714C37.0819 8.81709 36.0773 8.00486 35 7.29405",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20.1552 4.36923C21.3994 4.12694 22.6849 4 24 4C25.3152 4 26.6006 4.12694 27.8449 4.36923",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.63489 12.5C8.338 11.5013 9.13023 10.5698 10 9.71714C10.9181 8.81709 11.9227 8.00486 13 7.29405",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.5 35.294C39.7969 36.2928 39.0047 37.2243 38.1349 38.0769C37.2168 38.977 36.2122 39.7892 35.1349 40.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38L18.3431 29.6569",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 38L29.6569 29.6569",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 10L29.6569 18.3431",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 10L18.3431 18.3431",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.43266 19.8427C4.14914 21.1838 4 22.5745 4 24C4 25.4255 4.14914 26.8162 4.43266 28.1573",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataDisplay.js

/* harmony default export */ var DataDisplay = (IconWrapper('data-display', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22 8V20C22 22.2091 17.9706 24 13 24C8.02944 24 4 22.2091 4 20V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 14C22 16.2091 17.9706 18 13 18C8.02944 18 4 16.2091 4 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8C22 10.2091 17.9706 12 13 12C8.02944 12 4 10.2091 4 8C4 5.79086 8.02944 4 13 4C17.9706 4 22 5.79086 22 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6H38C40.2091 6 42 7.79086 42 10V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H10C7.79086 42 6 40.2091 6 38V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 44H35H29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 38V26H26V38H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataLock.js

/* harmony default export */ var DataLock = (IconWrapper('data-lock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 28C39 28.9564 39 32 39 32H31C31 32 31 30.2091 31 28C31 25.7909 32.7909 24 35 24C37.2091 24 39 25.7909 39 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 32H44V44H26V32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6H38C40.2091 6 42 7.79086 42 10V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H10C7.79086 42 6 40.2091 6 38V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8V20C22 22.2091 17.9706 24 13 24C8.02944 24 4 22.2091 4 20V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 14C22 16.2091 17.9706 18 13 18C8.02944 18 4 16.2091 4 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8C22 10.2091 17.9706 12 13 12C8.02944 12 4 10.2091 4 8C4 5.79086 8.02944 4 13 4C17.9706 4 22 5.79086 22 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataServer.js

/* harmony default export */ var DataServer = (IconWrapper('data-server', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 32H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38H11",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 38H38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 37V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 37V27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataSwitching.js

/* harmony default export */ var DataSwitching = (IconWrapper('data-switching', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22 8V20C22 22.2091 17.9706 24 13 24C8.02944 24 4 22.2091 4 20V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 14C22 16.2091 17.9706 18 13 18C8.02944 18 4 16.2091 4 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8C22 10.2091 17.9706 12 13 12C8.02944 12 4 10.2091 4 8C4 5.79086 8.02944 4 13 4C17.9706 4 22 5.79086 22 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 28V40C44 42.2091 39.9706 44 35 44C30.0294 44 26 42.2091 26 40V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34C44 36.2091 39.9706 38 35 38C30.0294 38 26 36.2091 26 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 28C44 30.2091 39.9706 32 35 32C30.0294 32 26 30.2091 26 28C26 25.7909 30.0294 24 35 24C39.9706 24 44 25.7909 44 28Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6H38C40.2091 6 42 7.79086 42 10V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H10C7.79086 42 6 40.2091 6 38V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DataUser.js

/* harmony default export */ var DataUser = (IconWrapper('data-user', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M22 8V20C22 22.2091 17.9706 24 13 24C8.02944 24 4 22.2091 4 20V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 14C22 16.2091 17.9706 18 13 18C8.02944 18 4 16.2091 4 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8C22 10.2091 17.9706 12 13 12C8.02944 12 4 10.2091 4 8C4 5.79086 8.02944 4 13 4C17.9706 4 22 5.79086 22 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6H38C40.2091 6 42 7.79086 42 10V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H10C7.79086 42 6 40.2091 6 38V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "35",
      "cy": "29",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44H26C26 39.0294 30.0294 35 35 35C39.9706 35 44 39.0294 44 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseAlert.js

/* harmony default export */ var DatabaseAlert = (IconWrapper('database-alert', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 26V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 35V36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseCode.js

/* harmony default export */ var DatabaseCode = (IconWrapper('database-code', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 29L39 31L37 33",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 33L29 31L31 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseConfig.js

/* harmony default export */ var DatabaseConfig = (IconWrapper('database-config', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 27V31M37.4641 29L34 31M37.4641 33L34 31M34 35V31M30.5359 33L34 31M30.5359 29L34 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseDownload.js

/* harmony default export */ var DatabaseDownload = (IconWrapper('database-download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 26V36M34 36L38 32M34 36L30 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseEnter.js

/* harmony default export */ var DatabaseEnter = (IconWrapper('database-enter', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 31L35 27M39 31L35 35M39 31L29 31",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseFail.js

/* harmony default export */ var DatabaseFail = (IconWrapper('database-fail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 34L34 31M34 31L37 28M34 31L31 28M34 31L31 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseFirst.js

/* harmony default export */ var DatabaseFirst = (IconWrapper('database-first', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 35V27L32 29M34 35H36M34 35H32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseForbid.js

/* harmony default export */ var DatabaseForbid = (IconWrapper('database-forbid', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.9998 28L30.9998 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseLock.js

/* harmony default export */ var DatabaseLock = (IconWrapper('database-lock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 31C39 33.7614 36.7614 36 34 36C31.2386 36 29 33.7614 29 31H39Z",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 26C35.6569 26 37 27.3431 37 29V31H31V29C31 27.3431 32.3431 26 34 26Z",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseNetworkPoint.js

/* harmony default export */ var DatabaseNetworkPoint = (IconWrapper('database-network-point', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 36V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 40H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40C28 42.2091 26.2091 44 24 44C21.7909 44 20 42.2091 20 40C20 37.7909 21.7909 36 24 36C26.2091 36 28 37.7909 28 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 17C37 24.1797 31.1797 30 24 30C16.8203 30 11 24.1797 11 17C11 9.8203 16.8203 4 24 4C31.1797 4 37 9.8203 37 17Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M37 17C37 24.1797 31.1797 30 24 30C16.8203 30 11 24.1797 11 17M37 17C37 9.8203 31.1797 4 24 4C16.8203 4 11 9.8203 11 17M37 17H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 17C29 24.1797 26.7614 30 24 30C21.2386 30 19 24.1797 19 17C19 9.8203 21.2386 4 24 4C26.7614 4 29 9.8203 29 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 17H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseNetwork.js

/* harmony default export */ var DatabaseNetwork = (IconWrapper('database-network', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 41C34 41 30.5 35.1375 30.5 31C30.5 26.8625 34 21 34 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 41C34 41 37.5 35.1375 37.5 31C37.5 26.8625 34 21 34 21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabasePoint.js

/* harmony default export */ var DatabasePoint = (IconWrapper('database-point', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 36V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 40H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40C28 42.2091 26.2091 44 24 44C21.7909 44 20 42.2091 20 40C20 37.7909 21.7909 36 24 36C26.2091 36 28 37.7909 28 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 9V25C39 27.7614 32.2843 30 24 30C15.7157 30 9 27.7614 9 25V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 17C39 19.7614 32.2843 22 24 22C15.7157 22 9 19.7614 9 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 9C39 11.7614 32.2843 14 24 14C15.7157 14 9 11.7614 9 9C9 6.23858 15.7157 4 24 4C32.2843 4 39 6.23858 39 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M39 9C39 11.7614 32.2843 14 24 14C15.7157 14 9 11.7614 9 9C9 6.23858 15.7157 4 24 4C32.2843 4 39 6.23858 39 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M39 9C39 11.7614 32.2843 14 24 14C15.7157 14 9 11.7614 9 9C9 6.23858 15.7157 4 24 4C32.2843 4 39 6.23858 39 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 9C39 11.7614 32.2843 14 24 14C15.7157 14 9 11.7614 9 9C9 6.23858 15.7157 4 24 4C32.2843 4 39 6.23858 39 9Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabasePosition.js

/* harmony default export */ var DatabasePosition = (IconWrapper('database-position', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabasePower.js

/* harmony default export */ var DatabasePower = (IconWrapper('database-power', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 26L31 30L37 32L34 36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseProportion.js

/* harmony default export */ var DatabaseProportion = (IconWrapper('database-proportion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 28C35 30 33 32 31 34M31 28L32 27M37 35L38 34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseSearch.js

/* harmony default export */ var DatabaseSearch = (IconWrapper('database-search', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36.8284 33.8284L40.9999 37.9999",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 31C38 32.1046 37.5523 33.1046 36.8284 33.8284C36.1046 34.5523 35.1046 35 34 35C31.7909 35 30 33.2091 30 31C30 28.7909 31.7909 27 34 27C36.2091 27 38 28.7909 38 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseSetting.js

/* harmony default export */ var DatabaseSetting = (IconWrapper('database-setting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 27L37.4641 29V33L34 35L30.5359 33V29L34 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseSuccess.js

/* harmony default export */ var DatabaseSuccess = (IconWrapper('database-success', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5 29L33 34.5L30 31.5",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseSync.js

/* harmony default export */ var DatabaseSync = (IconWrapper('database-sync', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 31C38 33.2091 36.2091 35 34 35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 31C30 28.7909 31.7909 27 34 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DatabaseTime.js

/* harmony default export */ var DatabaseTime = (IconWrapper('database-time', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 31C44 36.5228 39.5228 41 34 41C32.2091 41 30.5281 40.5292 29.0741 39.7046C26.5143 38.2529 24.6579 35.7046 24.1436 32.6983C24.0492 32.1463 24 31.5789 24 31C24 28.4323 24.9678 26.0906 26.5585 24.3198C28.3892 22.2818 31.0449 21 34 21C39.5228 21 44 25.4772 44 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12V20V21C31.0449 21 28.3892 22.2818 26.5585 24.3198C24.9678 26.0906 24 28.4323 24 31C24 31.5789 24.0492 32.1463 24.1436 32.6983C24.6579 35.7046 26.5143 38.2529 29.0741 39.7046C26.4116 40.5096 22.8776 41 19 41C10.7157 41 4 38.7614 4 36V28V20V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 12C34 14.7614 27.2843 17 19 17C10.7157 17 4 14.7614 4 12C4 9.23858 10.7157 7 19 7C27.2843 7 34 9.23858 34 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 28C4 30.7614 10.7157 33 19 33C20.807 33 22.5393 32.8935 24.1436 32.6983",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 20C4 22.7614 10.7157 25 19 25C21.7563 25 24.339 24.7522 26.5585 24.3198",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 31H34V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocAdd.js

/* harmony default export */ var DocAdd = (IconWrapper('doc-add', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V6C40 4.89543 39.1046 4 38 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 17L29 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 22V12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocDetail.js

/* harmony default export */ var DocDetail = (IconWrapper('doc-detail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39 4H11C9.89543 4 9 4.89543 9 6V42C9 43.1046 9.89543 44 11 44H39C40.1046 44 41 43.1046 41 42V6C41 4.89543 40.1046 4 39 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "17",
      "y": "12",
      "width": "14",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocFail.js

/* harmony default export */ var DocFail = (IconWrapper('doc-fail', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V6C40 4.89543 39.1046 4 38 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 21L28 13",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 21L20 13",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocSearchTwo.js

/* harmony default export */ var DocSearchTwo = (IconWrapper('doc-search-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 27V6C40 4.89543 39.1046 4 38 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 12L31 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20L31 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 28H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 37C37 38.3807 36.4404 39.6307 35.5355 40.5355C34.6307 41.4404 33.3807 42 32 42C29.2386 42 27 39.7614 27 37C27 34.2386 29.2386 32 32 32C34.7614 32 37 34.2386 37 37Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M39 44L35.5355 40.5355M35.5355 40.5355C36.4404 39.6307 37 38.3807 37 37C37 34.2386 34.7614 32 32 32C29.2386 32 27 34.2386 27 37C27 39.7614 29.2386 42 32 42C33.3807 42 34.6307 41.4404 35.5355 40.5355Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocSearch.js

/* harmony default export */ var DocSearch = (IconWrapper('doc-search', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V6C40 4.89543 39.1046 4 38 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 16C28 17.3807 27.4404 18.6307 26.5355 19.5355C25.6307 20.4404 24.3807 21 23 21C20.2386 21 18 18.7614 18 16C18 13.2386 20.2386 11 23 11C25.7614 11 28 13.2386 28 16Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M30 23L26.5355 19.5355M26.5355 19.5355C27.4404 18.6307 28 17.3807 28 16C28 13.2386 25.7614 11 23 11C20.2386 11 18 13.2386 18 16C18 18.7614 20.2386 21 23 21C24.3807 21 25.6307 20.4404 26.5355 19.5355Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DocSuccess.js

/* harmony default export */ var DocSuccess = (IconWrapper('doc-success', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V6C40 4.89543 39.1046 4 38 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 30L31 30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 13L22 21L18 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoorHandle.js

/* harmony default export */ var DoorHandle = (IconWrapper('door-handle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "4",
      "width": "26",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 34H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 20V14H23.0004C22.0882 12.7856 20.6358 12 19 12C16.2386 12 14 14.2386 14 17C14 19.7614 16.2386 22 19 22C20.6358 22 22.0882 21.2144 23.0004 20H42Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DoubleBed.js

/* harmony default export */ var DoubleBed = (IconWrapper('double-bed', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 12C8 10.3431 9.34315 9 11 9H37C38.6569 9 40 10.3431 40 12V23H8V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 35V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 35V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 23V21C23 19.3431 21.6569 18 20 18H14C12.3431 18 11 19.3431 11 21V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 23V21C37 19.3431 35.6569 18 34 18H28C26.3431 18 25 19.3431 25 21V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 26C4 24.3431 5.34315 23 7 23H41C42.6569 23 44 24.3431 44 26V35H4V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Elevator.js

/* harmony default export */ var Elevator = (IconWrapper('elevator', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42 41V7H6V41H42Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M42 7V41M42 7H4H6V41M42 7H44M42 41H44M42 41H6M6 41H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 7V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 20V28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 23L33 20L36 23",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 28V20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 25L15 28L18 25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EnergySocket.js

/* harmony default export */ var EnergySocket = (IconWrapper('energy-socket', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 21V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 21V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.4183 32 32 28.4183 32 24V21H16V24C16 28.4183 19.5817 32 24 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/EnterKey.js

/* harmony default export */ var EnterKey = (IconWrapper('enter-key', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 44V4H24V20H4V44H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 28L17 32L21 36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 23V32H17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Envelope.js

/* harmony default export */ var Envelope = (IconWrapper('envelope', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 4H8V44H40V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 36H24H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 4L14 12H34L40 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Escalators.js

/* harmony default export */ var Escalators = (IconWrapper('escalators', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35 13L13 35H4V44H13L35 22H44V13H35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 13L28 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 4H28V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 18L5 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 27H5V21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FiveStarBadge.js

/* harmony default export */ var FiveStarBadge = (IconWrapper('five-star-badge', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23.1033 20.817C23.4701 20.0737 24.5299 20.0737 24.8967 20.817L27.8818 26.8654C28.0275 27.1606 28.3091 27.3652 28.6348 27.4125L35.3096 28.3824C36.1298 28.5016 36.4574 29.5096 35.8638 30.0881L31.0339 34.7962C30.7982 35.0259 30.6906 35.3569 30.7463 35.6813L31.8865 42.3292C32.0266 43.1461 31.1691 43.769 30.4355 43.3834L24.4653 40.2446C24.174 40.0915 23.826 40.0915 23.5347 40.2446L17.5645 43.3834C16.8309 43.769 15.9734 43.1461 16.1135 42.3292L17.2537 35.6813C17.3094 35.3569 17.2018 35.0259 16.9661 34.7962L12.1362 30.0881C11.5426 29.5096 11.8702 28.5016 12.6904 28.3824L19.3652 27.4125C19.6909 27.3652 19.9725 27.1606 20.1182 26.8654L23.1033 20.817Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 4H12V14L24 19L36 14V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Flag.js

/* harmony default export */ var Flag = (IconWrapper('flag', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 44H12H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 44V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 6H12V22H40L36 14L40 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/FlipCamera.js

/* harmony default export */ var FlipCamera = (IconWrapper('flip-camera', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 11H17L19 7H29L31 11H36V27H12V11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "18",
      "r": "4",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38C12.9543 38 4 33.5228 4 28C4 26.5778 4.59379 25.2249 5.66417 24M24 38L20 34M24 38L20 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 37.1679C39.0636 35.6248 44 32.1006 44 28C44 26.5778 43.4062 25.2249 42.3358 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ForkSpoon.js

/* harmony default export */ var ForkSpoon = (IconWrapper('fork-spoon', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 5V15C8 20 14 20 14 20C14 20 20 20 20 15V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 20V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 12C40 16.4183 37.3137 20 34 20C30.6863 20 28 16.4183 28 12C28 7.58172 30.6863 4 34 4C37.3137 4 40 7.58172 40 12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GiftBox.js

/* harmony default export */ var GiftBox = (IconWrapper('gift-box', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 7C4 5.34315 5.34315 4 7 4H24H41C42.6569 4 44 5.34315 44 7V24V41C44 42.6569 42.6569 44 41 44H24H7C5.34315 44 4 42.6569 4 41V24V7Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V4",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 34V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 44H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 4H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.0002 23.9999C24.0002 23.9999 34.2663 19.3905 35.8284 17.8284C37.3905 16.2663 37.3905 13.7337 35.8284 12.1716C34.2663 10.6095 31.7337 10.6095 30.1716 12.1716C28.6095 13.7337 24.0002 23.9999 24.0002 23.9999ZM24.0002 23.9999C24.0002 23.9999 13.7337 19.3905 12.1716 17.8284M24.0002 23.9999C24.0002 23.9999 19.3905 13.7337 17.8284 12.1716M24.0002 23.9999C24.0002 23.9999 34.2661 28.6095 35.8282 30.1716M24.0002 23.9999C24.0002 23.9999 28.6093 34.2663 30.1714 35.8284M24.0002 23.9999C24.0002 23.9999 13.7339 28.6095 12.1718 30.1716C10.6097 31.7337 10.6097 34.2663 12.1718 35.8284C13.7339 37.3905 16.2666 37.3905 17.8287 35.8284C19.3908 34.2663 24.0002 23.9999 24.0002 23.9999Z",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GobletCracking.js

/* harmony default export */ var GobletCracking = (IconWrapper('goblet-cracking', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 44H23H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 16C35 22.5 29.6274 28 23 28C16.3726 28 11 22.6274 11 16C11 9.5 15 4 15 4H31C31 4 35 9.5 35 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 4L21 10L25 11L23 17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 4H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GobletFull.js

/* harmony default export */ var GobletFull = (IconWrapper('goblet-full', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 44H23H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 16C35 17.6751 34.6432 19.2839 34 20.7491C32.1475 24.9696 27.9194 28 23 28C18.2583 28 14.159 25.2498 12.21 21.2576C11.435 19.6699 11 17.8857 11 16C11 13.6271 11.5331 11.3874 12.21 9.5C13.3874 6.21729 15 4 15 4H31C31 4 32.8152 6.49591 34 10.1121C34.574 11.8639 35 13.8787 35 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 16C35 16 28 19 23 16C18 13 11 16 11 16",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 10.1121C34.574 11.8639 35 13.8787 35 16C35 17.6751 34.6432 19.2839 34 20.7491",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.21 9.5C11.5331 11.3874 11 13.6271 11 16C11 17.8857 11.435 19.6699 12.21 21.2576",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Goblet.js

/* harmony default export */ var Goblet = (IconWrapper('goblet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 44H23H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 28V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 16C35 22.5 29.6274 28 23 28C16.3726 28 11 22.6274 11 16C11 9.5 15 4 15 4H31C31 4 35 9.5 35 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GoldMedalTwo.js

/* harmony default export */ var GoldMedalTwo = (IconWrapper('gold-medal-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 32C36 28.446 34.455 25.2529 32 23.0556C29.877 21.1554 27.0734 20 24 20C20.9266 20 18.123 21.1554 16 23.0556C13.545 25.2529 12 28.446 12 32C12 38.6274 17.3726 44 24 44C30.6274 44 36 38.6274 36 32Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4H32V20V23.0556C29.877 21.1554 27.0734 20 24 20C20.9266 20 18.123 21.1554 16 23.0556V20V4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4H32M16 4H8V14L16 20M16 4V20M32 4H40V14L32 20M32 4V20M16 23.0556C18.123 21.1554 20.9266 20 24 20C27.0734 20 29.877 21.1554 32 23.0556M16 23.0556C13.545 25.2529 12 28.446 12 32C12 38.6274 17.3726 44 24 44C30.6274 44 36 38.6274 36 32C36 28.446 34.455 25.2529 32 23.0556M16 23.0556V20M32 23.0556V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 4H40V14L32 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4H8V14L16 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 32C36 28.446 34.455 25.2529 32 23.0556C29.877 21.1554 27.0734 20 24 20C20.9266 20 18.123 21.1554 16 23.0556C13.545 25.2529 12 28.446 12 32C12 38.6274 17.3726 44 24 44C30.6274 44 36 38.6274 36 32Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 4H32V20V23.0556C29.877 21.1554 27.0734 20 24 20C20.9266 20 18.123 21.1554 16 23.0556V20V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 37V27L22 28M24 37H26M24 37H22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GoldMedal.js

/* harmony default export */ var GoldMedal = (IconWrapper('gold-medal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4H31L27 14.3001C31.4614 15.2057 35.2038 18.0914 37.2699 22L44 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4H4L10.7301 22C12.7962 18.0914 16.5386 15.2057 21 14.3001L17 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 29C39 37.2843 32.2843 44 24 44C15.7157 44 9 37.2843 9 29C9 26.4718 9.62546 24.0897 10.7301 22C12.7962 18.0914 16.5386 15.2057 21 14.3001C21.9693 14.1033 22.9726 14 24 14C25.0274 14 26.0307 14.1033 27 14.3001C31.4614 15.2057 35.2038 18.0914 37.2699 22C38.3745 24.0897 39 26.4718 39 29Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 35V22L21 23M24 35H28M24 35H20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GolfCourse.js

/* harmony default export */ var GolfCourse = (IconWrapper('golf-course', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("ellipse", {
    "attrs": {
      "cx": "24",
      "cy": "34",
      "rx": "20",
      "ry": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "32",
      "cy": "34",
      "r": "2",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 9L13 4V14L24 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M13 34V14M13 14V4L24 9L13 14Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Gps.js

/* harmony default export */ var Gps = (IconWrapper('gps', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 13L17 34L24 29L31 34L24 13Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GreenNewEnergy.js

/* harmony default export */ var GreenNewEnergy = (IconWrapper('green-new-energy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.3358 16C39.2496 8.93638 32.2013 4 24 4C15.7987 4 8.75041 8.93638 5.66418 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14C20.2973 17.6298 18 22.6881 18 28.2829C18 28.7833 18.0184 29.2795 18.0545 29.7708C21.7253 33.3967 24 38.4327 24 44C24 38.4327 26.2747 33.3967 29.9455 29.7708C29.9816 29.2795 30 28.7833 30 28.2829C30 22.6881 27.7027 17.6298 24 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 35.0457 12.9543 44 24 44C24 38.4327 21.7253 33.3967 18.0545 29.7708C14.4424 26.2027 9.47841 24 4 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24C44 35.0457 35.0457 44 24 44C24 38.4327 26.2747 33.3967 29.9455 29.7708C33.5576 26.2027 38.5216 24 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HairDryer.js

/* harmony default export */ var HairDryer = (IconWrapper('hair-dryer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.193 21.5438L21.512 40.0962C21.7711 42.1691 20.1548 44 18.0659 44C16.3144 44 14.837 42.6958 14.6197 40.9578L12.2461 21.9689",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 4C8.02944 4 4 8.02944 4 13C4 17.7167 7.62831 21.5859 12.2461 21.9689C12.4947 21.9895 12.7461 22 13 22C14.578 22 16.7395 21.8249 19.193 21.5438L31.5965 19.5219L44 17.5V8.5L28.5 6.25L13 4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 8.20056V17.7995",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9999 17.5L31.5964 19.5219",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8.5L28.5 6.25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 13C16 14.6569 14.6569 16 13 16C11.3431 16 10 14.6569 10 13C10 11.3431 11.3431 10 13 10C14.6569 10 16 11.3431 16 13Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HangerTwo.js

/* harmony default export */ var HangerTwo = (IconWrapper('hanger-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M37 32H40.9098C42.6165 32 44 30.6165 44 28.9098C44 27.7394 43.3387 26.6693 42.2918 26.1459L24 17L5.7082 26.1459C4.6613 26.6693 4 27.7394 4 28.9098C4 30.6165 5.38352 32 7.09017 32H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 30H37V32V44H11V32V30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 17C24 17 28 10.2091 28 8C28 5.79086 26.2091 4 24 4C21.7909 4 20 5.79086 20 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HeadphoneSound.js

/* harmony default export */ var HeadphoneSound = (IconWrapper('headphone-sound', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 28C4 26.8954 4.89543 26 6 26H10V38H6C4.89543 38 4 37.1046 4 36V28Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38 26H42C43.1046 26 44 26.8954 44 28V36C44 37.1046 43.1046 38 42 38H38V26Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 36V24C10 16.268 16.268 10 24 10C31.732 10 38 16.268 38 24V36M10 26H6C4.89543 26 4 26.8954 4 28V36C4 37.1046 4.89543 38 6 38H10V26ZM38 26H42C43.1046 26 44 26.8954 44 28V36C44 37.1046 43.1046 38 42 38H38V26Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32H20L22 26L26 38L28 32H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HotelDoNotClean.js

/* harmony default export */ var HotelDoNotClean = (IconWrapper('hotel-do-not-clean', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 27C13 27 33 27 33 15V44H13V27Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M33 15V14C33 8.47715 28.5228 4 23 4C17.4772 4 13 8.47715 13 14M33 15C33 27 13 27 13 27V44H33V15Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 32L26 38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 32L20 38",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HotelPleaseClean.js

/* harmony default export */ var HotelPleaseClean = (IconWrapper('hotel-please-clean', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 27C13 27 33 27 33 15V44H13V27Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M33 15V14C33 8.47715 28.5228 4 23 4C17.4772 4 13 8.47715 13 14M33 15C33 27 13 27 13 27V44H33V15Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 34L22 37L27 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Imbalance.js

/* harmony default export */ var Imbalance = (IconWrapper('imbalance', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 19V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22L24 19L36 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 30L36 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 30L36 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 36L12 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36L12 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M12 44C16.4183 44 20 40.4183 20 36H4C4 40.4183 7.58172 44 12 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M36 38C40.4183 38 44 34.4183 44 30H28C28 34.4183 31.5817 38 36 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IosFaceRecognition.js

/* harmony default export */ var IosFaceRecognition = (IconWrapper('ios-face-recognition', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 34V44H14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 44H44V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 4H44V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4H4V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 34C16 34 19 37 24 37C29 37 32 34 32 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 14V23C24 25 22 27 20 27H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 14V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 14V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IronDisable.js

/* harmony default export */ var IronDisable = (IconWrapper('iron-disable', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40H44L42 24H20C11.1634 24 4 31.1634 4 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 8H40L42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 26L24 24L22 22",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 22L24 24L22 26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IronThree.js

/* harmony default export */ var IronThree = (IconWrapper('iron-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40H44L42 24H20C11.1634 24 4 31.1634 4 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 8H40L42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 32H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IronTwo.js

/* harmony default export */ var IronTwo = (IconWrapper('iron-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40H44L42 24H20C11.1634 24 4 31.1634 4 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 8H40L42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Iron.js

/* harmony default export */ var Iron = (IconWrapper('iron', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40H44L42 24H20C11.1634 24 4 31.1634 4 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 8H40L42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 32H27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 32H35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Keyhole.js

/* harmony default export */ var Keyhole = (IconWrapper('keyhole', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 15C21.2386 15 19 17.2386 19 20C19 21.6358 19.7856 23.0882 21 24.0004L20 32H28L27.0005 24C28.2147 23.0878 29 21.6356 29 20C29 17.2386 26.7614 15 24 15Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/KnifeFork.js

/* harmony default export */ var KnifeFork = (IconWrapper('knife-fork', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M14 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 5V15C8 20 14 20 14 20C14 20 20 20 20 15V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 12C30 4 38 4 38 4V21H30V12Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38 21H30V12C30 4 38 4 38 4V21ZM38 21V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Lifebuoy.js

/* harmony default export */ var Lifebuoy = (IconWrapper('lifebuoy', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M38.1421 38.1421C45.9526 30.3316 45.9526 17.6684 38.1421 9.85786C30.3316 2.04738 17.6684 2.04738 9.85786 9.85786C2.04738 17.6684 2.04738 30.3316 9.85786 38.1421C17.6684 45.9526 30.3316 45.9526 38.1421 38.1421ZM32.4853 15.5147C37.1716 20.201 37.1716 27.799 32.4853 32.4853C27.799 37.1716 20.201 37.1716 15.5147 32.4853C10.8284 27.799 10.8284 20.201 15.5147 15.5147C20.201 10.8284 27.799 10.8284 32.4853 15.5147Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 38.1421L32.4852 32.4852",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 38.1421L15.5148 32.4852",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9.85791 9.85791L15.5148 15.5148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38.1421 9.85791L32.4852 15.5148",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.4853 32.4853C37.1716 27.799 37.1716 20.201 32.4853 15.5147C27.799 10.8284 20.201 10.8284 15.5147 15.5147C10.8284 20.201 10.8284 27.799 15.5147 32.4853C20.201 37.1716 27.799 37.1716 32.4853 32.4853Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MacFinder.js

/* harmony default export */ var MacFinder = (IconWrapper('mac-finder', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 38V10C44 8.89543 43.1046 8 42 8H6C4.89543 8 4 8.89543 4 10V38C4 39.1046 4.89543 40 6 40H42C43.1046 40 44 39.1046 44 38Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 8C25 8 20 18 21 25H27L28 40",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 40H22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 8H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 16V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 16V18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 29C13 29 17.1905 32 24 32C30.8095 32 35 29 35 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MailDownload.js

/* harmony default export */ var MailDownload = (IconWrapper('mail-download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 17H4V43H44V17H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 5H10V21.5L24 32L38 21.5V5Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 21.5L24 32L38 21.5M10 21.5V5H38V21.5M10 21.5L4 17M38 21.5L44 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 18L24 23M24 23L29 18M24 23V12",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ManualGear.js

/* harmony default export */ var ManualGear = (IconWrapper('manual-gear', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 12V24H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V24V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12V24V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 8C44 10.2091 42.2091 12 40 12C37.7909 12 36 10.2091 36 8C36 5.79086 37.7909 4 40 4C42.2091 4 44 5.79086 44 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 8C28 10.2091 26.2091 12 24 12C21.7909 12 20 10.2091 20 8C20 5.79086 21.7909 4 24 4C26.2091 4 28 5.79086 28 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 8C12 10.2091 10.2091 12 8 12C5.79086 12 4 10.2091 4 8C4 5.79086 5.79086 4 8 4C10.2091 4 12 5.79086 12 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 40C28 42.2091 26.2091 44 24 44C21.7909 44 20 42.2091 20 40C20 37.7909 21.7909 36 24 36C26.2091 36 28 37.7909 28 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40C12 42.2091 10.2091 44 8 44C5.79086 44 4 42.2091 4 40C4 37.7909 5.79086 36 8 36C10.2091 36 12 37.7909 12 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "40",
      "cy": "40",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MicroSlrCamera.js

/* harmony default export */ var MicroSlrCamera = (IconWrapper('micro-slr-camera', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 26C44 28.6393 43.2696 31.1081 42 33.2152C40.8198 35.1737 39.1737 36.8198 37.2152 38C35.1081 39.2696 32.6393 40 30 40C27.3607 40 24.8919 39.2696 22.7848 38C18.7192 35.5502 16 31.0927 16 26C16 20.9073 18.7192 16.4498 22.7848 14C24.8919 12.7304 27.3607 12 30 12C32.6393 12 35.1081 12.7304 37.2152 14C39.1737 15.1802 40.8198 16.8263 42 18.7848C43.2696 20.8919 44 23.3607 44 26Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M4 14V38H22.7848C18.7192 35.5502 16 31.0927 16 26C16 20.9073 18.7192 16.4498 22.7848 14H4Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M37.2152 14C35.1081 12.7304 32.6393 12 30 12C27.3607 12 24.8919 12.7304 22.7848 14M37.2152 14H42V18.7848M37.2152 14C39.1737 15.1802 40.8198 16.8263 42 18.7848M22.7848 14H4V38H22.7848M22.7848 14C18.7192 16.4498 16 20.9073 16 26C16 31.0927 18.7192 35.5502 22.7848 38M37.2152 38C35.1081 39.2696 32.6393 40 30 40C27.3607 40 24.8919 39.2696 22.7848 38M37.2152 38H42V33.2152M37.2152 38C39.1737 36.8198 40.8198 35.1737 42 33.2152M42 18.7848C43.2696 20.8919 44 23.3607 44 26C44 28.6393 43.2696 31.1081 42 33.2152",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "9",
      "width": "9",
      "height": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 22V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 26C36 29.3137 33.3137 32 30 32M24 26C24 22.6863 26.6863 20 30 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MindmapList.js

/* harmony default export */ var MindmapList = (IconWrapper('mindmap-list', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M26 24L44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24L18 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 38H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 38H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 10H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 10H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MindmapMap.js

/* harmony default export */ var MindmapMap = (IconWrapper('mindmap-map', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M26 24L42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 38H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 10H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24L6 24C6 24 7.65685 24 10 24M18 38C12 36 16 24 10 24M18 10C12 12 16 24 10 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Mouse.js

/* harmony default export */ var Mouse = (IconWrapper('mouse', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 16H12V32C12 38.6274 17.3726 44 24 44C30.6274 44 36 38.6274 36 32V16H24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 16C36 9.37258 30.6274 4 24 4V16H36Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C17.3726 4 12 9.37258 12 16H24V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MovieBoard.js

/* harmony default export */ var MovieBoard = (IconWrapper('movie-board', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "16",
      "width": "40",
      "height": "26",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 6H10H18H26H34H44V16H38H30H22H14H4V6Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 6H4V16H14M10 6L14 16M10 6H18M14 16H22M18 6L22 16M18 6H26M22 16H30M26 6L30 16M26 6H34M30 16H38M34 6H44V16H38M34 6L38 16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24H36",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32H24",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MusicRhythm.js

/* harmony default export */ var MusicRhythm = (IconWrapper('music-rhythm', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 42H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 36H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 30H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 24H10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 36H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 30H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 18H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 12H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 6H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 42H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 42H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 36H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 36H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 30H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 30H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 24H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 18H43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NewspaperFolding.js

/* harmony default export */ var NewspaperFolding = (IconWrapper('newspaper-folding', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21 44L20 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44V12H25L26 20L27 28L28 36L21 44H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 20H35",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4H24L25 12L26 20L27 28L28 36H20H4V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 12H17",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20H18",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 28H19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/NotebookAndPen.js

/* harmony default export */ var NotebookAndPen = (IconWrapper('notebook-and-pen', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 6V42H30V6H4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 42V6",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 6H36V38L40 42L44 38V6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 12H44",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 6H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 42H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 6V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 6V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/OnlineMeeting.js

/* harmony default export */ var OnlineMeeting = (IconWrapper('online-meeting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 8H4V38H19L24 43L29 38H44V8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 19V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M20 16V30",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 21V25",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M36 19V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Passport.js

/* harmony default export */ var Passport = (IconWrapper('passport', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 10H32H38V44H10V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 10L32 4V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 34H28",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Pennant.js

/* harmony default export */ var Pennant = (IconWrapper('pennant', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 6V4M12 22V44M12 44H8M12 44H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 44H12H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 6V22L40 14L12 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleDelete.js

/* harmony default export */ var PeopleDelete = (IconWrapper('people-delete', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 31L41 39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 39L41 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleDownload.js

/* harmony default export */ var PeopleDownload = (IconWrapper('people-download', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 40V30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 36L37 40L41 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleSearch.js

/* harmony default export */ var PeopleSearch = (IconWrapper('people-search', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39.9999 41L36.8284 37.8284",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 35C38 36.1046 37.5523 37.1046 36.8284 37.8284C36.1046 38.5523 35.1046 39 34 39C31.7909 39 30 37.2091 30 35C30 32.7909 31.7909 31 34 31C36.2091 31 38 32.7909 38 35Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeopleUpload.js

/* harmony default export */ var PeopleUpload = (IconWrapper('people-upload', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19 20C22.866 20 26 16.866 26 13C26 9.13401 22.866 6 19 6C15.134 6 12 9.13401 12 13C12 16.866 15.134 20 19 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 30V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 34L37 30L33 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 28H18.8C14.3196 28 12.0794 28 10.3681 28.8719C8.86278 29.6389 7.63893 30.8628 6.87195 32.3681C6 34.0794 6 36.3196 6 40.8V42H27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PeoplesTwo.js

/* harmony default export */ var PeoplesTwo = (IconWrapper('peoples-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 20C27.866 20 31 16.866 31 13C31 9.13401 27.866 6 24 6C20.134 6 17 9.13401 17 13C17 16.866 20.134 20 24 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 7.25468C10.1865 8.51963 9 10.6212 9 13C9 15.5463 10.3596 17.7751 12.3924 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 7.25468C37.8135 8.51963 39 10.6212 39 13C39 15.3787 37.8135 17.4804 36 18.7453",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40V42H36V40C36 36.2725 36 34.4087 35.391 32.9385C34.5791 30.9783 33.0217 29.4209 31.0615 28.609C29.5913 28 27.7275 28 24 28C20.2725 28 18.4087 28 16.9385 28.609C14.9783 29.4209 13.4209 30.9783 12.609 32.9385C12 34.4087 12 36.2725 12 40Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.9999 42V40.8C43.9999 36.3196 43.9999 34.0794 43.128 32.3681C42.361 30.8628 41.1371 29.6389 39.6318 28.8719",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.00009 42V40.8C4.00009 36.3196 4.00009 34.0794 4.87204 32.3681C5.63902 30.8628 6.86287 29.6389 8.36816 28.8719",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneVideoCall.js

/* harmony default export */ var PhoneVideoCall = (IconWrapper('phone-video-call', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 51 51",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.3756 9.7941C18.1022 9.7941 18.7716 10.1881 19.1242 10.8234L21.5706 15.2302C21.891 15.8072 21.906 16.5051 21.6109 17.0954L19.254 21.809C19.254 21.809 19.937 25.3204 22.7955 28.1789C25.6539 31.0373 29.1535 31.7085 29.1535 31.7085L33.8665 29.3521C34.4572 29.0567 35.1555 29.072 35.7327 29.3929L40.1521 31.8499C40.7867 32.2027 41.1802 32.8718 41.1802 33.5979L41.1802 38.6714C41.1802 41.2551 38.7803 43.1211 36.3323 42.2951C31.3043 40.5986 23.4997 37.3684 18.5528 32.4215C13.606 27.4747 10.3758 19.67 8.67922 14.6421C7.8532 12.194 9.71929 9.7941 12.3029 9.7941L17.3756 9.7941Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 15H30V5H42V8L47 6V14L42 12V15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlaybackProgress.js

/* harmony default export */ var PlaybackProgress = (IconWrapper('playback-progress', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "4",
      "width": "40",
      "height": "28",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 14L28 18L22 22V14Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 41H4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 41H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 41C15 42.6569 13.6569 44 12 44C10.3431 44 9 42.6569 9 41C9 39.3431 10.3431 38 12 38C13.6569 38 15 39.3431 15 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PullDoor.js

/* harmony default export */ var PullDoor = (IconWrapper('pull-door', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 8V40L24.2 44V4L6 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24.2 8H42V40H24.2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 22V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PushDoor.js

/* harmony default export */ var PushDoor = (IconWrapper('push-door', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 6H42V42H6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 6V42L24 36V12L6 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 22V26",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RedCross.js

/* harmony default export */ var RedCross = (IconWrapper('red-cross', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 12H21V21L12 21V27H21V36H27V27L36 27V21H27V12Z",
      "fill": props.colors[3],
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Ripple.js

/* harmony default export */ var Ripple = (IconWrapper('ripple', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 36C4 36 9 33 14 33C21.2976 33 26.7024 39 34 39C39 39 44 36 44 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24C4 24 9 21 14 21C21.2976 21 26.7024 27 34 27C39 27 44 24 44 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 12C4 12 9 9 14 9C21.2976 9 26.7024 15 34 15C39 15 44 12 44 12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RopeSkipping.js

/* harmony default export */ var RopeSkipping = (IconWrapper('rope-skipping', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 32C10 32 10 14.866 10 11C10 7.13401 13.134 4 17 4C20.866 4 24 7.13401 24 11C24 11 24 33.134 24 37C24 40.866 27.134 44 31 44C34.866 44 38 40.866 38 37V16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 4V16H35V4H41Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M32 16H35M44 16H41M41 16V4H35V16M41 16H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 44V32H13V44H7Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32H13M4 32H7M7 32V44H13V32M7 32H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ShowerHead.js

/* harmony default export */ var ShowerHead = (IconWrapper('shower-head', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 20V22H9V20C9 16.6863 13.0294 14 18 14C22.9706 14 27 16.6863 27 20Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 44V12.5C42 7.80558 36.6274 4 30 4C23.3726 4 18 7.80558 18 12.5V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 29L18 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.1709 28.0303L9.82892 28.97",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4.17094 43.0303L3.82892 43.97",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 44L18 43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 37L18 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.342 35.0603L6.65796 36.9397",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SignalStrength.js

/* harmony default export */ var SignalStrength = (IconWrapper('signal-strength', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38.1421 38.1421C45.9526 30.3316 45.9526 17.6684 38.1421 9.85786C30.3316 2.04738 17.6684 2.04738 9.85786 9.85786C2.04738 17.6684 2.04738 30.3316 9.85786 38.1421M32.4853 32.4853C37.1716 27.799 37.1716 20.201 32.4853 15.5147C27.799 10.8284 20.201 10.8284 15.5147 15.5147C10.8284 20.201 10.8284 27.799 15.5147 32.4853",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24C28 26.2091 26.2091 28 24 28C21.7909 28 20 26.2091 20 24C20 21.7909 21.7909 20 24 20C26.2091 20 28 21.7909 28 24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28ZM24 28V44M24 44H28M24 44H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SingleBed.js

/* harmony default export */ var SingleBed = (IconWrapper('single-bed', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 12C8 10.3431 9.34315 9 11 9H37C38.6569 9 40 10.3431 40 12V23H8V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 35V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 35V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 23V21C32 19.3431 30.6569 18 29 18H19C17.3431 18 16 19.3431 16 21V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 26C4 24.3431 5.34315 23 7 23H41C42.6569 23 44 24.3431 44 26V35H4V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SteeringWheel.js

/* harmony default export */ var SteeringWheel = (IconWrapper('steering-wheel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 24H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24C32 28.4183 28.4183 32 24 32C19.5817 32 16 28.4183 16 24C16 19.5817 19.5817 16 24 16C28.4183 16 32 19.5817 32 24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M32 24C32 28.4183 28.4183 32 24 32C19.5817 32 16 28.4183 16 24C16 19.5817 19.5817 16 24 16C28.4183 16 32 19.5817 32 24Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M32 24C32 28.4183 28.4183 32 24 32C19.5817 32 16 28.4183 16 24C16 19.5817 19.5817 16 24 16C28.4183 16 32 19.5817 32 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SurveillanceCamerasTwo.js

/* harmony default export */ var SurveillanceCamerasTwo = (IconWrapper('surveillance-cameras-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8.62354 9L40.4991 17.541L38.7567 20.18L34.7543 27.3898L33.0119 30.0287L19.006 26.2758L5.00007 22.523L8.62354 9Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.7567 20.18L42.6204 21.2153L40.5499 28.9427L34.7543 27.3898M38.7567 20.18L40.4991 17.541L8.62354 9L5.00007 22.523L19.006 26.2758M38.7567 20.18L34.7543 27.3898M34.7543 27.3898L33.0119 30.0287L19.006 26.2758M19.006 26.2758L19.006 37L5.00007 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SurveillanceCameras.js

/* harmony default export */ var SurveillanceCameras = (IconWrapper('surveillance-cameras', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M23 29V6M23 6H43M23 6H5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.42529 19.5798L40.3008 28.1209L38.5585 30.7598L34.5561 37.9696L32.8137 40.6085L4.80183 33.1028L8.42529 19.5798Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M38.5585 30.7598L42.4222 31.7951L40.3516 39.5225L34.5561 37.9696M38.5585 30.7598L40.3008 28.1209L8.42529 19.5798L4.80183 33.1028L32.8137 40.6085L34.5561 37.9696M38.5585 30.7598L34.5561 37.9696",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TableLamp.js

/* harmony default export */ var TableLamp = (IconWrapper('table-lamp', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 22L8 12L22 4L26 8L23.1429 13L18 22Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M14 42H18M39 42H31M31 42L40 28L23.1429 13M31 42H18M18 22L8 12L22 4L26 8M18 22L26 8M18 22L23.1429 13M26 8L23.1429 13M18 42V39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ThinkingProblem.js

/* harmony default export */ var ThinkingProblem = (IconWrapper('thinking-problem', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 21L43 30L38 31V37H35L29 36L28 43H13L11 32.619C7.92077 29.7028 6 25.5757 6 21C6 12.1634 13.1634 5 22 5C30.8366 5 38 12.1634 38 21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 19C17 16.2386 19.2386 14 22 14C24.7614 14 27 16.2386 27 19C27 21.7614 24.7614 24 22 24V27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 33V34",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TopicDiscussion.js

/* harmony default export */ var TopicDiscussion = (IconWrapper('topic-discussion', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 8H4V38H19L24 43L29 38H44V8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 15L20 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 15L27 32",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M33 20L16 20",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M32 27L15 27",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Trademark.js

/* harmony default export */ var Trademark = (IconWrapper('trademark', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "24",
      "r": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 19H16L20 19",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 19L16 29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 29V19L31 25L36 19V29",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TriangleRuler.js

/* harmony default export */ var TriangleRuler = (IconWrapper('triangle-ruler', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 44L4 4V44H44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M13 35H25L13 23V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 44V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 44V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 44V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 36H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 30H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 18H7",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/UpAndDown.js

/* harmony default export */ var UpAndDown = (IconWrapper('up-and-down', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 36V44H44V12H36V20H28V28H20V36H12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 13L27 4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 4H27V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 27H4V21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 18L4 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VoiceInput.js

/* harmony default export */ var VoiceInput = (IconWrapper('voice-input', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 30C4 36.6274 9.37258 42 16 42C22.6274 42 26 38 27 35L28.5385 30L35 9L44 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.7274 30H28.5386",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "10",
      "y": "9",
      "width": "12",
      "height": "27",
      "rx": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Wheelchair.js

/* harmony default export */ var Wheelchair = (IconWrapper('wheelchair', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29.6219 35.0001C28.2898 40.1757 23.5915 44 18 44C11.3726 44 6 38.6275 6 32.0001C6 27.1571 8.86894 22.9841 13 21.0881",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 12L20 30L35 29L38 40H41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 8C22 10.2091 20.2091 12 18 12C15.7909 12 14 10.2091 14 8C14 5.79086 15.7909 4 18 4C20.2091 4 22 5.79086 22 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 20H33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RefreshOne.js

/* harmony default export */ var RefreshOne = (IconWrapper('refresh-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39.5 24C39.5 25.1046 40.3954 26 41.5 26C42.6046 26 43.5 25.1046 43.5 24H39.5ZM16.6101 7.36573L17.3762 9.21319L16.6101 7.36573ZM13.4993 9.03158L12.3867 7.36962L13.4993 9.03158ZM6.86962 12.8867C6.25515 13.8046 6.50111 15.0468 7.41898 15.6612C8.33686 16.2757 9.57908 16.0298 10.1935 15.1119L6.86962 12.8867ZM7.5 24C7.5 22.8954 6.60457 22 5.5 22C4.39543 22 3.5 22.8954 3.5 24H7.5ZM30.3899 40.6343L29.6238 38.7868L30.3899 40.6343ZM33.5007 38.9684L34.6133 40.6304L33.5007 38.9684ZM40.1304 35.1133C40.7449 34.1954 40.4989 32.9532 39.581 32.3388C38.6631 31.7243 37.4209 31.9702 36.8065 32.8881L40.1304 35.1133ZM43.5 24C43.5 12.9543 34.5457 4 23.5 4V8C32.3366 8 39.5 15.1634 39.5 24H43.5ZM23.5 4C20.792 4 18.2049 4.53931 15.844 5.51826L17.3762 9.21319C19.2599 8.4321 21.327 8 23.5 8V4ZM15.844 5.51826C14.6257 6.02345 13.4686 6.6453 12.3867 7.36962L14.6119 10.6935C15.4778 10.1138 16.403 9.61673 17.3762 9.21319L15.844 5.51826ZM12.3867 7.36962C11.2963 8.0996 10.2819 8.93378 9.35786 9.85786L12.1863 12.6863C12.9267 11.9459 13.7391 11.2778 14.6119 10.6935L12.3867 7.36962ZM9.35786 9.85786C8.43378 10.7819 7.5996 11.7963 6.86962 12.8867L10.1935 15.1119C10.7778 14.2391 11.4459 13.4267 12.1863 12.6863L9.35786 9.85786ZM3.5 24C3.5 35.0457 12.4543 44 23.5 44V40C14.6634 40 7.5 32.8366 7.5 24H3.5ZM23.5 44C26.208 44 28.7951 43.4607 31.156 42.4817L29.6238 38.7868C27.7401 39.5679 25.673 40 23.5 40V44ZM31.156 42.4817C32.3743 41.9766 33.5314 41.3547 34.6133 40.6304L32.3881 37.3065C31.5222 37.8862 30.597 38.3833 29.6238 38.7868L31.156 42.4817ZM34.6133 40.6304C35.7037 39.9004 36.7181 39.0662 37.6421 38.1421L34.8137 35.3137C34.0733 36.0541 33.2609 36.7222 32.3881 37.3065L34.6133 40.6304ZM37.6421 38.1421C38.5662 37.2181 39.4004 36.2037 40.1304 35.1133L36.8065 32.8881C36.2222 33.7609 35.5541 34.5733 34.8137 35.3137L37.6421 38.1421Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M41.5 8V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5.5 24L5.5 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StarOne.js

/* harmony default export */ var StarOne = (IconWrapper('star-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M16.8712 33.0436L15.9976 44.7036C15.9362 45.5229 16.6646 46.0872 17.3161 45.722C21.9289 43.1382 36.3783 33.6479 43.7017 12.7899C44.0376 11.8331 43.1352 10.9697 42.3646 11.5094C38.0387 14.539 28.5846 20.8006 22.7421 21.9934C22.7421 21.9934 26.4836 19.3946 28.7231 15.4053C28.9426 15.0143 28.9244 14.5136 28.6796 14.1606L20.5127 2.38925C20.0287 1.69147 19.0354 1.98057 18.8606 2.87002L16.3181 15.8073L4.38437 26.2226C3.78602 26.7446 3.90808 27.7996 4.5989 28.079L16.8712 33.0436Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M37.9745 28.448C37.2188 29.5025 35.5908 31.6717 34.0876 32.9974C33.7871 33.2624 33.8276 33.7068 34.1724 33.9234L42.1145 38.909C42.5926 39.2091 43.2384 38.8529 43.1576 38.3323C42.7882 35.9496 41.7237 30.9818 39.0328 28.3741C38.7322 28.083 38.2142 28.1136 37.9745 28.448Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InsertTable.js

/* harmony default export */ var InsertTable = (IconWrapper('insert-table', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M41 4H7C5.34315 4 4 5.34315 4 7V41C4 42.6569 5.34315 44 7 44H41C42.6569 44 44 42.6569 44 41V7C44 5.34315 42.6569 4 41 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4L17 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M31 4L31 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 17.0378L44 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M4 30.5187L44 30.481",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TraditionalChineseMedicine.js

/* harmony default export */ var TraditionalChineseMedicine = (IconWrapper('traditional-chinese-medicine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      "d": "M24 42.9999C24.8653 42.9999 26.8503 42.9999 29.9551 42.9999C30.0381 40.263 30.4393 38.7581 31.1586 38.4851C38.6685 35.6356 44 28.4338 44 19.9999H4C4 28.2513 9.10319 35.3233 16.3568 38.294C17.1151 38.6046 17.6815 40.1732 18.056 42.9999C21.0857 42.9999 23.067 42.9999 24 42.9999Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.4434 27.0223C14.803 28.2102 15.2786 29.1909 15.8702 29.9645C16.4484 30.7208 17.1619 31.4222 18.0104 32.0687",
      "stroke": props.colors[2],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M25.2139 20.0263C28.9697 12.2746 31.177 7.70509 31.8358 6.31762C32.8851 4.10779 35.0156 3.57602 36.9808 4.41557C38.9459 5.25511 39.7411 7.65816 38.9162 9.33298C38.4068 10.3674 36.6766 13.9244 33.7258 20.0039",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VolumeNotice.js

/* harmony default export */ var VolumeNotice = (IconWrapper('volume-notice', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V42C17 42 11.7985 32.8391 11.7985 32.8391H6C4.89543 32.8391 4 31.9437 4 30.8391V17.0108C4 15.9062 4.89543 15.0108 6 15.0108H11.7985C11.7985 15.0108 17 6 24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 15L32 15C32.6232 15.5565 33.1881 16.1797 33.6841 16.8588C35.1387 18.8504 36 21.3223 36 24C36 26.6545 35.1535 29.1067 33.7218 31.0893C33.2168 31.7885 32.6391 32.4293 32 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.2358 41.1857C40.0835 37.6953 43.9999 31.305 43.9999 24C43.9999 16.8085 40.2042 10.5035 34.507 6.97906",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VolumeSmall.js

/* harmony default export */ var VolumeSmall = (IconWrapper('volume-small', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 6V42C17 42 11.7985 32.8391 11.7985 32.8391H6C4.89543 32.8391 4 31.9437 4 30.8391V17.0108C4 15.9062 4.89543 15.0108 6 15.0108H11.7985C11.7985 15.0108 17 6 24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 15L32 15C32.6232 15.5565 33.1881 16.1797 33.6841 16.8588C35.1387 18.8504 36 21.3223 36 24C36 26.6545 35.1535 29.1067 33.7218 31.0893C33.2168 31.7885 32.6391 32.4293 32 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VolumeMute.js

/* harmony default export */ var VolumeMute = (IconWrapper('volume-mute', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("mask", {
    "attrs": {
      "id": props.id + '97da3ef6',
      "maskUnits": "userSpaceOnUse",
      "x": "30",
      "y": "18",
      "width": "13",
      "height": "13"
    },
    "style": {
      maskType: 'alpha'
    }
  }, [h("rect", {
    "attrs": {
      "x": "30",
      "y": "18",
      "width": "13",
      "height": "13",
      "fill": props.colors[2]
    }
  })]), h("g", {
    "attrs": {
      "mask": 'url(#' + props.id + '97da3ef6' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.7351 20.2858L32.2498 28.7711",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.2498 20.2858L40.735 28.7711",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]), h("path", {
    "attrs": {
      "d": "M24 6V42C17 42 11.7985 32.8391 11.7985 32.8391H6C4.89543 32.8391 4 31.9437 4 30.8391V17.0108C4 15.9062 4.89543 15.0108 6 15.0108H11.7985C11.7985 15.0108 17 6 24 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sleaves.js

/* harmony default export */ var Sleaves = (IconWrapper('sleaves', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31 43C31 43 18 44 11 36C4 28 4 4.00003 4 4.00003C4 4.00003 28 3.00003 36 9.00003C44 15 42 32 42 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44C44 44 32.8207 35.5515 26 28C19.1793 20.4485 16 13 16 13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 28L27 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 28L16 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/InstagramOne.js

/* harmony default export */ var InstagramOne = (IconWrapper('instagram-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "9",
      "cy": "8.00009",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "5",
      "y": "18.0001",
      "width": "8",
      "height": "25",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 43.0001H21V29.0001C21 22.925 25.9249 18.0001 32 18.0001C38.0751 18.0001 43 22.925 43 29.0001V43.0001H36V28.8126C36 26.6035 34.2091 24.8126 32 24.8126C29.7909 24.8126 28 26.6035 28 28.8126V43.0001Z",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M21 43.0001H19C19 44.1047 19.8954 45.0001 21 45.0001V43.0001ZM28 43.0001V45.0001C29.1046 45.0001 30 44.1047 30 43.0001H28ZM36 43.0001H34C34 44.1047 34.8954 45.0001 36 45.0001V43.0001ZM43 43.0001V45.0001C44.1046 45.0001 45 44.1047 45 43.0001H43ZM21 45.0001H28V41.0001H21V45.0001ZM30 43.0001V28.8126H26V43.0001H30ZM34 28.8126V43.0001H38V28.8126H34ZM36 45.0001H43V41.0001H36V45.0001ZM45 43.0001V29.0001H41V43.0001H45ZM19 29.0001V43.0001H23V29.0001H19ZM45 29.0001C45 21.8204 39.1797 16.0001 32 16.0001V20.0001C36.9706 20.0001 41 24.0295 41 29.0001H45ZM32 26.8126C33.1046 26.8126 34 27.708 34 28.8126H38C38 25.4989 35.3137 22.8126 32 22.8126V26.8126ZM32 16.0001C24.8203 16.0001 19 21.8204 19 29.0001H23C23 24.0295 27.0294 20.0001 32 20.0001V16.0001ZM30 28.8126C30 27.708 30.8954 26.8126 32 26.8126V22.8126C28.6863 22.8126 26 25.4989 26 28.8126H30Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/AirConditioning.js

/* harmony default export */ var AirConditioning = (IconWrapper('air-conditioning', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "8",
      "width": "40",
      "height": "20",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "20",
      "width": "24",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 14H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 36V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 36V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CalculatorOne.js

/* harmony default export */ var CalculatorOne = (IconWrapper('calculator-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M48 0H0V48H48V0Z",
      "fill": props.colors[2]
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "14",
      "y": "11",
      "width": "20",
      "height": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "26",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "32",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "26",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "32",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "26",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "32",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CameraOne.js

/* harmony default export */ var CameraOne = (IconWrapper('camera-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "19",
      "r": "14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "19",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 31L11 43H37L31 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CameraTwo.js

/* harmony default export */ var CameraTwo = (IconWrapper('camera-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "12",
      "y": "4",
      "width": "24",
      "height": "32",
      "rx": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 44L32 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "17",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "29",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/CameraThree.js

/* harmony default export */ var CameraThree = (IconWrapper('camera-three', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "14",
      "width": "36",
      "height": "26",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 14L12.1667 8H19.8333L22 14H10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "29",
      "cy": "27",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 10V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Cup.js

/* harmony default export */ var Cup = (IconWrapper('cup', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 17.012C8 16.4531 8.45311 16 9.01205 16H32.988C33.5469 16 34 16.4531 34 17.012V31C34 38.1797 28.1797 44 21 44V44C13.8203 44 8 38.1797 8 31V17.012Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "8",
      "y": "23",
      "width": "26",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 4V10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 6V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 6V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 34C37.866 34 41 30.866 41 27C41 23.134 37.866 20 34 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DashboardOne.js

/* harmony default export */ var DashboardOne = (IconWrapper('dashboard-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 7C12.9543 7 4 15.9543 4 27C4 32.2301 5.71344 37.4362 9 41H39C42.2866 37.4362 44 32.2301 44 27C44 15.9543 35.0457 7 24 7Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "30",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 28H11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 18L14.4142 19.4142",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M37 28H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 19.4142L35.4142 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DiskOne.js

/* harmony default export */ var DiskOne = (IconWrapper('disk-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M12 17.012C12 16.4531 12.4531 16 13.012 16H34.988C35.5469 16 36 16.4531 36 17.012V32C36 38.6274 30.6274 44 24 44V44C17.3726 44 12 38.6274 12 32V17.012Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "15",
      "y": "4",
      "width": "18",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 9V11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 9V11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 32H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DiskTwo.js

/* harmony default export */ var DiskTwo = (IconWrapper('disk-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "13",
      "width": "32",
      "height": "22",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M4 13H14V35H4V13Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 17C34.8954 17 34 17.8954 34 19C34 20.1046 34.8954 21 36 21V17ZM44 19H46C46 17.8954 45.1046 17 44 17V19ZM44 29V31C45.1046 31 46 30.1046 46 29H44ZM36 27C34.8954 27 34 27.8954 34 29C34 30.1046 34.8954 31 36 31V27ZM36 21H44V17H36V21ZM42 19V29H46V19H42ZM44 27H36V31H44V27Z",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "30",
      "cy": "21",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "30",
      "cy": "27",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DomeLight.js

/* harmony default export */ var DomeLight = (IconWrapper('dome-light', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 8C12.9543 8 4 16.9543 4 28H44C44 16.9543 35.0457 8 24 8Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38C18.4772 38 14 33.5228 14 28H34C34 33.5228 29.5228 38 24 38Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40.034 38.9767L37.966 36.0233",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.2748 36.2253L7.72525 38.7748",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 42L32.8528 40.3617",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15.1335 40.4738L13.7193 41.888",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DroneOne.js

/* harmony default export */ var DroneOne = (IconWrapper('drone-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 18V16C29 13.2386 26.7614 11 24 11V11C21.2386 11 19 13.2386 19 16V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18H31L28.8462 25H19.1538L17 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "5",
      "y": "22",
      "width": "7",
      "height": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "36",
      "y": "22",
      "width": "7",
      "height": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 6C2.89543 6 2 6.89543 2 8C2 9.10457 2.89543 10 4 10V6ZM16 10C17.1046 10 18 9.10457 18 8C18 6.89543 17.1046 6 16 6V10ZM4 10H16V6H4V10Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M31.7321 32C31.1798 31.0434 29.9566 30.7157 29 31.2679C28.0434 31.8202 27.7157 33.0434 28.2679 34L31.7321 32ZM32.2679 40.9282C32.8202 41.8848 34.0434 42.2125 35 41.6603C35.9566 41.108 36.2843 39.8848 35.7321 38.9282L32.2679 40.9282ZM28.2679 34L32.2679 40.9282L35.7321 38.9282L31.7321 32L28.2679 34Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M19.7321 34C20.2843 33.0434 19.9566 31.8202 19 31.2679C18.0434 30.7157 16.8202 31.0434 16.2679 32L19.7321 34ZM12.2679 38.9282C11.7157 39.8848 12.0434 41.108 13 41.6603C13.9566 42.2125 15.1798 41.8848 15.7321 40.9282L12.2679 38.9282ZM16.2679 32L12.2679 38.9282L15.7321 40.9282L19.7321 34L16.2679 32Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M32 6C30.8954 6 30 6.89543 30 8C30 9.10457 30.8954 10 32 10V6ZM44 10C45.1046 10 46 9.10457 46 8C46 6.89543 45.1046 6 44 6V10ZM32 10H44V6H32V10Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ElectricIron.js

/* harmony default export */ var ElectricIron = (IconWrapper('electric-iron', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 18.7125C5 18.319 5.319 18 5.7125 18H19.1519C32.3228 18 43 28.6772 43 41.8481V41.8481C43 41.932 42.932 42 42.8481 42H5V18.7125Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 18V8H25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "15",
      "cy": "27",
      "r": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M5 36H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M29 20C30.3333 18 34.4 13.6 38 16C41.5 18.3333 38.5 24 37 26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ElectronicDoorLock.js

/* harmony default export */ var ElectronicDoorLock = (IconWrapper('electronic-door-lock', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "4",
      "width": "26",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "30",
      "width": "24",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "12",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "18",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "12",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "19",
      "cy": "12",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "19",
      "cy": "18",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "19",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "26",
      "cy": "12",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "26",
      "cy": "18",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "26",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GameConsole.js

/* harmony default export */ var GameConsole = (IconWrapper('game-console', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "10",
      "y": "4",
      "width": "28",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M16 34H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 30V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "10",
      "width": "16",
      "height": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/HairDryerOne.js

/* harmony default export */ var HairDryerOne = (IconWrapper('hair-dryer-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 12.1383C11 12.0592 11.0587 11.9924 11.1371 11.9823L32.0822 9.27971C37.3414 8.60112 42 12.6973 42 18V18C42 23.3027 37.3413 27.3989 32.0822 26.7203L11.1371 24.0177C11.0587 24.0076 11 23.9408 11 23.8617V12.1383Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M11 12L4 8V28L11 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 25L31.3061 40.8981C30.5146 42.7777 28.6738 44 26.6343 44V44C23.0091 44 20.5557 40.3051 21.9625 36.9639L27 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "35",
      "cy": "18",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RemoteControl.js

/* harmony default export */ var RemoteControl = (IconWrapper('remote-control', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "11",
      "y": "4",
      "width": "26",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "34",
      "r": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "18",
      "y": "10",
      "width": "12",
      "height": "8",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 24H25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/IwatchOne.js

/* harmony default export */ var IwatchOne = (IconWrapper('iwatch-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "13",
      "y": "12",
      "width": "22",
      "height": "24",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.9997 23.9341L29 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 24L13.0003 24.0659",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 12V4H17V12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 36V43C31 43.5523 30.5523 44 30 44H18C17.4477 44 17 43.5523 17 43V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Kettle.js

/* harmony default export */ var Kettle = (IconWrapper('kettle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "6",
      "y": "37",
      "width": "36",
      "height": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 36L36 10H4L10.566 17.5493C11.0948 18.1574 11.3568 18.9527 11.2929 19.7561L10 36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 18H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 24H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 30H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 10H44V26H38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19 9V4H28V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/KeyboardOne.js

/* harmony default export */ var KeyboardOne = (IconWrapper('keyboard-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "18",
      "width": "40",
      "height": "24",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "16",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "22",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "26",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "28",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "32",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "38",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 36H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 18V13.125C33 12.5727 33.4477 12.125 34 12.125H39C39.5523 12.125 40 11.6773 40 11.125V6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Microphone.js

/* harmony default export */ var Microphone = (IconWrapper('microphone', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "16",
      "y": "4",
      "width": "16",
      "height": "28",
      "rx": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 21V24C10 31.732 16.268 38 24 38V38C31.732 38 38 31.732 38 24V21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 5V11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 16H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 16H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 22H21",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 22H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M16 42C14.8954 42 14 42.8954 14 44C14 45.1046 14.8954 46 16 46V42ZM32 46C33.1046 46 34 45.1046 34 44C34 42.8954 33.1046 42 32 42V46ZM16 46L32 46V42L16 42V46Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MicroscopeOne.js

/* harmony default export */ var MicroscopeOne = (IconWrapper('microscope-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M9.17208 22.8497C9.11629 22.7939 9.11629 22.7035 9.17208 22.6477L22.8596 8.96014C25.0075 6.81225 28.4899 6.81225 30.6378 8.96014C32.7857 11.108 32.7857 14.5904 30.6378 16.7383L16.9502 30.4259C16.8945 30.4817 16.804 30.4817 16.7482 30.4259L9.17208 22.8497Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M28.1629 6.48526L29.9307 4.71749C31.2975 3.35066 33.5136 3.35066 34.8804 4.71749C36.2473 6.08433 36.2473 8.30041 34.8804 9.66724L33.1127 11.435L28.1629 6.48526Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10.4853 24.1629L6.24262 28.4056L11.1924 33.3553L15.435 29.1127L10.4853 24.1629Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "26.0416",
      "cy": "22.0416",
      "r": "4.5",
      "transform": "rotate(45 26.0416 22.0416)",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M7.65684 18.5061C6.87579 17.725 5.60947 17.725 4.82842 18.5061C4.04737 19.2871 4.04737 20.5535 4.82842 21.3345L7.65684 18.5061ZM18.2634 34.7695C19.0445 35.5506 20.3108 35.5506 21.0919 34.7695C21.8729 33.9885 21.8729 32.7222 21.0919 31.9411L18.2634 34.7695ZM4.82842 21.3345L18.2634 34.7695L21.0919 31.9411L7.65684 18.5061L4.82842 21.3345Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M10 44H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 22C35 22 39 26 39 32C39 38.4 33.8333 41.8333 31 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MicrowaveOven.js

/* harmony default export */ var MicrowaveOven = (IconWrapper('microwave-oven', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "6",
      "width": "40",
      "height": "30",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M38.0002 15H34.0002",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 21H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "10",
      "y": "15",
      "width": "17",
      "height": "12",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "27",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M12 36V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 36V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MonitorOne.js

/* harmony default export */ var MonitorOne = (IconWrapper('monitor-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 8C5 6.89543 5.89543 6 7 6H41C42.1046 6 43 6.89543 43 8V32C43 33.1046 42.1046 34 41 34H7C5.89543 34 5 33.1046 5 32V8Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 26C5 24.8954 5.89543 24 7 24H41C42.1046 24 43 24.8954 43 26V32C43 33.1046 42.1046 34 41 34H7C5.89543 34 5 33.1046 5 32V26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.4383 15.7506C15.7482 16.6131 15.8881 17.8717 16.7506 18.5617C17.6131 19.2518 18.8717 19.1119 19.5617 18.2494L16.4383 15.7506ZM23.5617 13.2494C24.2518 12.3869 24.1119 11.1283 23.2494 10.4383C22.3869 9.74824 21.1283 9.88809 20.4383 10.7506L23.5617 13.2494ZM19.5617 18.2494L23.5617 13.2494L20.4383 10.7506L16.4383 15.7506L19.5617 18.2494Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.4 16.8C22.7373 17.6837 22.9163 18.9373 23.8 19.6C24.6837 20.2627 25.9373 20.0837 26.6 19.2L23.4 16.8ZM29.6 15.2C30.2627 14.3163 30.0837 13.0627 29.2 12.4C28.3163 11.7373 27.0627 11.9163 26.4 12.8L29.6 15.2ZM26.6 19.2L29.6 15.2L26.4 12.8L23.4 16.8L26.6 19.2Z",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "29",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 34L14 42H34L31 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/MouseOne.js

/* harmony default export */ var MouseOne = (IconWrapper('mouse-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "12",
      "y": "12",
      "width": "24",
      "height": "32",
      "rx": "12",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24C12 17.3726 17.3726 12 24 12C30.6274 12 36 17.3726 36 24V25H12V24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M37 13C37 14.1046 37.8954 15 39 15C40.1046 15 41 14.1046 41 13H37ZM26 25V10H22V25H26ZM30 6H31.5V2H30V6ZM37 11.5V13H41V11.5H37ZM31.5 6C34.5376 6 37 8.46243 37 11.5H41C41 6.25329 36.7467 2 31.5 2V6ZM26 10C26 7.79086 27.7909 6 30 6V2C25.5817 2 22 5.58172 22 10H26Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PhoneOne.js

/* harmony default export */ var PhoneOne = (IconWrapper('phone-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "5",
      "y": "5",
      "width": "38",
      "height": "38",
      "rx": "3",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "11",
      "y": "12",
      "width": "8",
      "height": "24",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "25",
      "y": "12",
      "width": "12",
      "height": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "25",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "25",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "25",
      "cy": "36",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "36",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "37",
      "cy": "24",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "37",
      "cy": "30",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "37",
      "cy": "36",
      "r": "2",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PowerSupplyOne.js

/* harmony default export */ var PowerSupplyOne = (IconWrapper('power-supply-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 34H15L8 17.75L10 9H38L40 17.75L33 34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 4V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 4V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34V44H40V36.6316",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 21H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PowerSupply.js

/* harmony default export */ var PowerSupply = (IconWrapper('power-supply', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32.2965 6H15.7035C15.2815 6 14.9049 6.26493 14.7623 6.66214L8.09221 25.2431C8.03184 25.4113 8.01763 25.5926 8.05107 25.7681L9.84516 35.1871C9.935 35.6588 10.3474 36 10.8275 36H37.1725C37.6526 36 38.065 35.6588 38.1548 35.1871L39.9489 25.7681C39.9824 25.5926 39.9682 25.4113 39.9078 25.2431L33.2377 6.66214C33.0951 6.26493 32.7185 6 32.2965 6Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.5 23.4019L19.5 28.5981",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31.5 23.4019L28.5 28.5981",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PrinterOne.js

/* harmony default export */ var PrinterOne = (IconWrapper('printer-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 33H42C43.1046 33 44 32.1046 44 31V15C44 13.8954 43.1046 13 42 13H32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 33H6C4.89543 33 4 32.1046 4 31V15C4 13.8954 4.89543 13 6 13H16",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 13V19H36V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 13V5H32V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 29V43H32V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 35H26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "13",
      "y1": "27",
      "x2": "35",
      "y2": "27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RadioOne.js

/* harmony default export */ var RadioOne = (IconWrapper('radio-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "5",
      "y": "14",
      "width": "38",
      "height": "28",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 22H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 28H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 34H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "18",
      "cy": "28",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M10 14V6H38V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RecordPlayer.js

/* harmony default export */ var RecordPlayer = (IconWrapper('record-player', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "5",
      "y": "8",
      "width": "38",
      "height": "32",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M13 8V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "28",
      "cy": "24",
      "r": "9",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "28",
      "cy": "24",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M5 16H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 24H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M5 32H13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RemoteControlOne.js

/* harmony default export */ var RemoteControlOne = (IconWrapper('remote-control-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 5.44578C11 4.6473 11.6473 4 12.4458 4H35.5542C36.3527 4 37 4.6473 37 5.44578V31C37 38.1797 31.1797 44 24 44V44C16.8203 44 11 38.1797 11 31V5.44578Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M17 16H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 16H31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "10",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "31",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RobotOne.js

/* harmony default export */ var RobotOne = (IconWrapper('robot-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "9",
      "y": "18",
      "width": "30",
      "height": "24",
      "rx": "2",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "26",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "31",
      "cy": "26",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M20 32C18.8954 32 18 32.8954 18 34C18 35.1046 18.8954 36 20 36V32ZM28 36C29.1046 36 30 35.1046 30 34C30 32.8954 29.1046 32 28 32V36ZM20 36H28V32H20V36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 10V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 26V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 26V34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "8",
      "r": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Robot.js

/* harmony default export */ var Robot = (IconWrapper('robot', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "9",
      "y": "17",
      "width": "30",
      "height": "26",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 9L28 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 9L20 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "7",
      "r": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "7",
      "r": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "24",
      "width": "16",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M9 24H4V34H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 24H44V34H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RocketOne.js

/* harmony default export */ var RocketOne = (IconWrapper('rocket-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M20.906 6.06267L22.3359 5.1094C23.3436 4.4376 24.6564 4.4376 25.6641 5.1094L27.094 6.06267C32.658 9.77199 36 16.0166 36 22.7037V33H12V22.7037C12 16.0166 15.342 9.77199 20.906 6.06267Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "20",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M12 22L6 28.2174V33H42V28.2174L36 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 38V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 40V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 40V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Seal.js

/* harmony default export */ var Seal = (IconWrapper('seal', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M5 37C5 35.8954 5.89543 35 7 35H41C42.1046 35 43 35.8954 43 37V42C43 43.1046 42.1046 44 41 44H7C5.89543 44 5 43.1046 5 42V37Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M5 31C5 29.8954 5.89543 29 7 29H41C42.1046 29 43 29.8954 43 31V42C43 43.1046 42.1046 44 41 44H7C5.89543 44 5 43.1046 5 42V31Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M18.763 15.6637C18.9051 15.2657 19.2821 15 19.7047 15H28.2953C28.7179 15 29.0949 15.2657 29.237 15.6637L34 29H14L18.763 15.6637Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "15",
      "y": "4",
      "width": "18",
      "height": "10.8",
      "rx": "5.4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SignalTower.js

/* harmony default export */ var SignalTower = (IconWrapper('signal-tower', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.0813 5.99999C10.9613 10.2853 9.47391 18.7204 13.7592 24.8405C18.0445 30.9605 26.4796 32.4478 32.5997 28.1625L17.0813 5.99999Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 31V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 24.5L6 42H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 6L25 17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41.9059 6.60641C42.2408 5.55383 41.659 4.42906 40.6064 4.09415C39.5538 3.75924 38.4291 4.34102 38.0942 5.39359L41.9059 6.60641ZM31.0942 27.3936C30.7592 28.4462 31.341 29.5709 32.3936 29.9059C33.4462 30.2408 34.5709 29.659 34.9059 28.6064L31.0942 27.3936ZM38.0942 5.39359L31.0942 27.3936L34.9059 28.6064L41.9059 6.60641L38.0942 5.39359Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 4C15.8954 4 15 4.89543 15 6C15 7.10457 15.8954 8 17 8V4ZM40 8C41.1046 8 42 7.10457 42 6C42 4.89543 41.1046 4 40 4V8ZM17 8H40V4H17V8Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SimCard.js

/* harmony default export */ var SimCard = (IconWrapper('sim-card', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M10 44H38C39.1046 44 40 43.1046 40 42V14.8847C40 14.3212 39.7623 13.7839 39.3453 13.4049L29.5721 4.52012C29.204 4.18544 28.7243 4 28.2268 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "17",
      "cy": "14",
      "r": "3",
      "fill": props.colors[0]
    }
  }), h("rect", {
    "attrs": {
      "x": "16",
      "y": "23",
      "width": "16",
      "height": "14",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sound.js

/* harmony default export */ var Sound = (IconWrapper('sound', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "15",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "10",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "10",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "38",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "32",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SpeakerOne.js

/* harmony default export */ var SpeakerOne = (IconWrapper('speaker-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "15",
      "width": "11",
      "height": "18",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 15L33 8V40L15 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 17H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M39 25H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 33H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Stapler.js

/* harmony default export */ var Stapler = (IconWrapper('stapler', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 35H42V43H6V35Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.31361 10.8618L38.3838 21.8064L35.6476 29.324L5.57745 18.3793L8.31361 10.8618Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8.3696 10.7784L22.8821 16.1585C22.898 16.1644 22.9157 16.1563 22.9216 16.1404V16.1404C23.9362 13.4036 22.5401 10.3625 19.8033 9.34795L10.3014 5.82538C10.255 5.80817 10.2034 5.83185 10.1862 5.87827L8.3696 10.7784Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.7547 22.72L15.3866 26.4788C15.1977 26.9977 14.6238 27.2653 14.1049 27.0764L7.52701 24.6823C7.00804 24.4934 6.74045 23.9196 6.92934 23.4006L8.29742 19.6418",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36",
      "cy": "30",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StorageCardOne.js

/* harmony default export */ var StorageCardOne = (IconWrapper('storage-card-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 4H15V12H33V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14.5882 4H10C8.89543 4 8 4.89543 8 6V42C8 43.1046 8.89543 44 10 44H38C39.1046 44 40 43.1046 40 42V6C40 4.89543 39.1046 4 38 4H33.4118",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26.9996 20L19 28.0012H29.004L21.0003 36.0018",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/StorageCardTwo.js

/* harmony default export */ var StorageCardTwo = (IconWrapper('storage-card-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M14 4V14H34V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "14",
      "y": "24",
      "width": "20",
      "height": "20",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 31.5H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Subway.js

/* harmony default export */ var Subway = (IconWrapper('subway', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "6",
      "width": "32",
      "height": "26",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "27",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "27",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("rect", {
    "attrs": {
      "x": "14",
      "y": "12",
      "width": "20",
      "height": "10",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32 32L40 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 32L8 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SurveillanceCamerasOne.js

/* harmony default export */ var SurveillanceCamerasOne = (IconWrapper('surveillance-cameras-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M6 26V42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 33H13L17 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 20L33.4735 37.649C33.795 37.8633 34.2113 37.8732 34.5426 37.6744L44 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7.07803 12.7187C6.53288 12.3553 6.47867 11.5745 6.96837 11.1392L14.4279 4.50854C14.7655 4.20843 15.2624 4.17193 15.6403 4.41949L42.7046 22.1513C43.312 22.5493 43.3061 23.4416 42.6935 23.8314L33.5496 29.6503C33.2155 29.8629 32.7875 29.8583 32.458 29.6387L7.07803 12.7187Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Toilet.js

/* harmony default export */ var Toilet = (IconWrapper('toilet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.9989 10H27.9989V22H19.9989V10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 35L12 44H11.9989H35.9989L31 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33.9989 22V5C33.9989 4.44772 33.5512 4 32.9989 4H14.9989C14.4466 4 13.9989 4.44772 13.9989 5V22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6.0798 22.364C6.03828 22.1772 6.18044 22 6.37181 22H41.6259C41.8173 22 41.9595 22.1772 41.918 22.3641V22.3641C40.694 27.8723 37.2834 32.8158 31.9185 34.5641C29.4347 35.3735 26.6548 36 24 36C21.3448 36 18.5641 35.3733 16.0795 34.5637C10.7147 32.8154 7.30383 27.8722 6.0798 22.364V22.364Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VacuumCleaner.js

/* harmony default export */ var VacuumCleaner = (IconWrapper('vacuum-cleaner', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 34C40 35.1046 39.1046 36 38 36C36.8954 36 36 35.1046 36 34H40ZM28 22.2857C28 23.3903 27.1046 24.2857 26 24.2857C24.8954 24.2857 24 23.3903 24 22.2857H28ZM36 34V10H40V34H36ZM28 10V22.2857H24V10H28ZM32 6C29.7909 6 28 7.79086 28 10H24C24 5.58172 27.5817 2 32 2V6ZM36 10C36 7.79086 34.2091 6 32 6V2C36.4183 2 40 5.58172 40 10H36Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M32.75 34H43.25L44 40H32L32.75 34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 40H25.8864C25.9491 40 26 39.9491 26 39.8864V23.2546C26 15.9343 20.0657 10 12.7454 10V10C9.57228 10 7 12.5723 7 15.7454V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "10",
      "cy": "34",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M14 10V29",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Videocamera.js

/* harmony default export */ var Videocamera = (IconWrapper('videocamera', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "11",
      "width": "32",
      "height": "26",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "24",
      "r": "6",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 29L44 33V15L36 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/VideocameraOne.js

/* harmony default export */ var VideocameraOne = (IconWrapper('videocamera-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "4",
      "y": "21",
      "width": "31",
      "height": "20",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("rect", {
    "attrs": {
      "x": "20",
      "y": "27",
      "width": "9",
      "height": "8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "27",
      "cy": "13",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "13",
      "cy": "13",
      "r": "5",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 35L44 39V23L35 27",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WashingMachine.js

/* harmony default export */ var WashingMachine = (IconWrapper('washing-machine', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M8 15.5H40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "28",
      "cy": "10",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "34",
      "cy": "10",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "30",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WashingMachineOne.js

/* harmony default export */ var WashingMachineOne = (IconWrapper('washing-machine-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "8",
      "y": "4",
      "width": "32",
      "height": "40",
      "rx": "2",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("path", {
    "attrs": {
      "d": "M8 12C8 13.1046 8.89543 14 10 14H38C39.1046 14 40 13.1046 40 12V6C40 4.89543 39.1046 4 38 4H10C8.89543 4 8 4.89543 8 6V12Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "14",
      "cy": "9",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "20",
      "cy": "9",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "24",
      "cy": "29",
      "r": "7",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Arena.js

/* harmony default export */ var Arena = (IconWrapper('arena', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 26L24 36L4 26L24 16L44 26Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 7L44 17L24 27L4 17L24 7Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 26V34L24 44L4 34V26L24 36L44 26Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 14V17V26",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 26V17V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 36V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 16V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Badminton.js

/* harmony default export */ var Badminton = (IconWrapper('badminton', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M19.5 44C21.99 44 24 41.99 24 39.5V19H20L15 39.5C15 41.99 17.01 44 19.5 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 19H16L6.67996 37.9C5.56996 40.51 7.15996 43.64 9.97996 43.97C10.15 43.99 10.32 44 10.5 44C12.99 44 15 41.99 15 39.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.5 44C26.01 44 24 41.99 24 39.5V19H28L33 39.5C33 41.99 30.99 44 28.5 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 19H32L41.32 37.9C42.43 40.51 40.84 43.64 38.02 43.97C37.85 43.99 37.68 44 37.5 44C35.01 44 33 41.99 33 39.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.06 13C16.02 12.67 16 12.34 16 12C16 7.58 19.58 4 24 4C28.42 4 32 7.58 32 12C32 12.34 31.98 12.67 31.94 13H16.06Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BalanceOne.js

/* harmony default export */ var BalanceOne = (IconWrapper('balance-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M35 25C27.89 22.42 20.11 22.42 13 25L12 14C19 11 29 11 36 14L35 25Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 23L21 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 39C42 40.6569 40.6569 42 39 42H9C7.34315 42 6 40.6569 6 39L6 9C6 7.34315 7.34315 6 9 6H39C40.6569 6 42 7.34315 42 9V39Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Baokemeng.js

/* harmony default export */ var Baokemeng = (IconWrapper('baokemeng', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 24H30C30 20.69 27.31 18 24 18C20.69 18 18 20.69 18 24H4C4 12.95 12.95 4 24 4C35.05 4 44 12.95 44 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24H4C4 35.05 12.95 44 24 44C35.05 44 44 35.05 44 24H30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 30C27.3137 30 30 27.3137 30 24C30 20.6863 27.3137 18 24 18C20.6863 18 18 20.6863 18 24C18 27.3137 20.6863 30 24 30Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BasketballOne.js

/* harmony default export */ var BasketballOne = (IconWrapper('basketball-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M18 24C18 17.3762 23.3762 12 30 12C36.6238 12 42 17.3762 42 24",
      "fill": props.colors[1]
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24C18 17.3762 23.3762 12 30 12C36.6238 12 42 17.3762 42 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4H4V36H12V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 24L20 28.5C22 33.5 21.9 38.9 20 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 24L39 28.5C37 33.5 37.09 38.9 39 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.22 32H37.78",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.6899 40H37.3199",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.5 40V24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlayBasketball.js

/* harmony default export */ var PlayBasketball = (IconWrapper('play-basketball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M32 16C34.7614 16 37 13.7614 37 11C37 8.23858 34.7614 6 32 6C29.2386 6 27 8.23858 27 11C27 13.7614 29.2386 16 32 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M23 40L31.11 37.94C31.89 37.75 32.13 36.75 31.53 36.22L23 29L27 21L16.59 17.26C16.09 17.08 15.69 16.72 15.46 16.24L11 8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 29L16.0301 37.79C15.8201 38.04 15.5601 38.24 15.2601 38.36L5 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 21L36.9 23.79C37.37 23.93 37.78 24.23 38.04 24.64L42 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 8C19.6569 8 21 6.65685 21 5C21 3.34315 19.6569 2 18 2C16.3431 2 15 3.34315 15 5C15 6.65685 16.3431 8 18 8Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Bowling.js

/* harmony default export */ var Bowling = (IconWrapper('bowling', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.05 44 44 35.05 44 24C44 12.95 35.05 4 24 4C12.95 4 4 12.95 4 24C4 35.05 12.95 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 26C25.66 26 27 24.66 27 23C27 21.34 25.66 20 24 20C22.34 20 21 21.34 21 23C21 24.66 22.34 26 24 26Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M31 18C32.66 18 34 16.66 34 15C34 13.34 32.66 12 31 12C29.34 12 28 13.34 28 15C28 16.66 29.34 18 31 18Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M17 18C18.66 18 20 16.66 20 15C20 13.34 18.66 12 17 12C15.34 12 14 13.34 14 15C14 16.66 15.34 18 17 18Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/BoxingOne.js

/* harmony default export */ var BoxingOne = (IconWrapper('boxing-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 26H15C17.76 26 20 23.76 20 21C20 18.24 17.76 16 15 16H11C8.24 16 6 18.24 6 21V30C6 33.3137 8.68629 36 12 36H36C39.3137 36 42 33.3137 42 30V26C42 23.7909 40.2091 22 38 22H24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 44H14C12.89 44 12 43.1 12 42V36H36V42C36 43.1 35.1 44 34 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 20C5 20 4 18 4 16V12C4 7.58 7.58 4 12 4H36C40.42 4 44 7.58 44 12V16C44 19.31 41.31 22 38 22H19.9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Boxing.js

/* harmony default export */ var Boxing = (IconWrapper('boxing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 36V42C38 43.1 37.11 44 36 44H17C15.9 44 15 43.11 15 42V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 15V10C11 6.68629 13.6863 4 17 4H28H38C41.3137 4 44 6.68629 44 10V30C44 33.3137 41.3198 36 38.006 36C30.9668 36 19.6598 36 15 36C8 36 4 28 4 23C4 18 4 15 4 15H11Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "11",
      "y1": "14",
      "x2": "11",
      "y2": "22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/ChessOne.js

/* harmony default export */ var ChessOne = (IconWrapper('chess-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40 44H8V40L14 37H34L40 40V44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 19H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.74 19L33 37H15L20.26 19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4C19.5817 4 16 7.58172 16 12C16 15.012 17.6646 17.6353 20.124 19H27.876C30.3354 17.6353 32 15.012 32 12C32 7.58172 28.4183 4 24 4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Chess.js

/* harmony default export */ var Chess = (IconWrapper('chess', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M34 4H14V14H34V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 14L33 37H15L21 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 44H8V40L14 37H34L40 40V44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 23.02H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20.5 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27.5 4V8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Curling.js

/* harmony default export */ var Curling = (IconWrapper('curling', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M38 42H10C6.69 42 4 39.32 4 36V28C4 24.69 6.68 22 10 22H38C41.31 22 44 24.68 44 28V36C44 39.32 41.32 42 38 42Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 32H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 22L16.48 7.2C16.79 6.47 17.51 6 18.31 6H35.5C37.43 6 39 7.57 39 9.5C39 11.43 37.43 13 35.5 13H22V22H10Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DivingBottle.js

/* harmony default export */ var DivingBottle = (IconWrapper('diving-bottle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 40L6.5 41.3514C8.1 42.2162 9.9 42.2162 11.5 41.3514C13.1 40.4865 14.9 40.4865 16.5 41.3514C18.1 42.2162 19.9 42.2162 21.5 41.3514C23.1 40.4865 24.9 40.4865 26.5 41.3514C28.1 42.2162 29.9 42.2162 31.5 41.3514C33.1 40.4865 34.9 40.4865 36.5 41.3514C38.1 42.2162 39.9 42.2162 41.5 41.3514L44 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 11V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 11V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 8V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 8V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "12",
      "y1": "6",
      "x2": "20",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "29",
      "y1": "6",
      "x2": "37",
      "y2": "6",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "10",
      "y": "11",
      "width": "8",
      "height": "24",
      "rx": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "27",
      "y": "11",
      "width": "8",
      "height": "24",
      "rx": "4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 15C27 12.7909 28.7909 11 31 11C33.2091 11 35 12.7909 35 15V19H27V15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 15C10 12.7909 11.7909 11 14 11C16.2091 11 18 12.7909 18 15V19H10V15Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/DivingSuit.js

/* harmony default export */ var DivingSuit = (IconWrapper('diving-suit', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17 24H14.09C8.52 24 4 19.5203 4 14C4 8.47968 8.52 4 14.09 4L20 9L25.91 4C31.48 4 36 8.47968 36 14C36 19.5203 31.48 24 25.91 24H23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 36H14V44H26V36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M26 40H36C40.42 40 44 36.42 44 32V14H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.22 30H20H18.78C17.32 30 16.21 28.69 16.45 27.26L17.67 19.97C17.86 18.83 18.84 18 20 18C21.15 18 22.14 18.83 22.33 19.97L23.55 27.26C23.78 28.69 22.67 30 21.22 30Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/GymnasticsOne.js

/* harmony default export */ var GymnasticsOne = (IconWrapper('gymnastics-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 24C29.7614 24 32 21.7614 32 19C32 16.2386 29.7614 14 27 14C24.2386 14 22 16.2386 22 19C22 21.7614 24.2386 24 27 24Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M23 29L21 36L12 33L8 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 36L22.49 42.48C22.71 43.37 23.51 44 24.43 44H35.01",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 23L23 29L14 20L13 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4C14 4 14.69 4 17 4C29 4 44 5.45 44 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Gymnastics.js

/* harmony default export */ var Gymnastics = (IconWrapper('gymnastics', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 22C26.7614 22 29 19.7614 29 17C29 14.2386 26.7614 12 24 12C21.2386 12 19 14.2386 19 17C19 19.7614 21.2386 22 24 22Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M23 29L21 36L12 34L7 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 36L23 44H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M7 23L23 29L35 27L41.04 22.03",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 4C26 2 36 6 44 15",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Heartbeat.js

/* harmony default export */ var Heartbeat = (IconWrapper('heartbeat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 32L18 23L24 32L30 23L35 31H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 19C44 12.9249 39.0751 8 33 8C29.2797 8 25.9907 9.8469 24 12.6738C22.0093 9.8469 18.7203 8 15 8C8.92487 8 4 12.9249 4 19C4 30 17 40 24 42.3262C25.1936 41.9295 26.5616 41.3098 28.0099 40.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Kungfu.js

/* harmony default export */ var Kungfu = (IconWrapper('kungfu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 17C13.7614 17 16 14.7614 16 12C16 9.23858 13.7614 7 11 7C8.23858 7 6 9.23858 6 12C6 14.7614 8.23858 17 11 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M20 18L28 24L25 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24L44 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 16.8L27 8L20 18L16 27L10 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Muscle.js

/* harmony default export */ var Muscle = (IconWrapper('muscle', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M21.37 36C22.82 30.75 27.89 27 33.73 27.62C39.29 28.21 43.71 32.9 43.99 38.48C44.06 39.95 43.86 41.36 43.43 42.67C43.17 43.47 42.39 44 41.54 44H11.7584C6.71004 44 2.92371 39.3814 3.91377 34.4311L9.99994 4H21.9999L25.9999 11L17.43 17.13L14.9999 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17.4399 17.13L22 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Riding.js

/* harmony default export */ var Riding = (IconWrapper('riding', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 14C35.7614 14 38 11.7614 38 9C38 6.23858 35.7614 4 33 4C30.2386 4 28 6.23858 28 9C28 11.7614 30.2386 14 33 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M40 23H32.37C31.81 23 31.27 22.76 30.89 22.35L25.55 16.57C24.9 15.86 23.84 15.71 23.02 16.21L15.57 20.79C14.94 21.18 14.94 22.1 15.57 22.49L23.03 27.06C23.62 27.42 23.99 28.07 23.99 28.77L24 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "36.5",
      "cy": "36.5",
      "r": "7.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }), h("circle", {
    "attrs": {
      "cx": "11.5",
      "cy": "36.5",
      "r": "7.5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rings.js

/* harmony default export */ var Rings = (IconWrapper('rings', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M13 43C17.42 43 21 39.42 21 35C21 30.58 17.42 27 13 27C8.58 27 5 30.58 5 35C5 39.42 8.58 43 13 43Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 43C39.42 43 43 39.42 43 35C43 30.58 39.42 27 35 27C30.58 27 27 30.58 27 35C27 39.42 30.58 43 35 43Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 5H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 27V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M35 27V5",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 19H17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 19H39",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rollerskates.js

/* harmony default export */ var Rollerskates = (IconWrapper('rollerskates', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4H28V12H44V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 12V34C44 35.11 43.11 36 42 36H8C5.79 36 4 34.21 4 32V26C4 21.58 7.58 18 12 18H28V12H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 24V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M9 44C11.2091 44 13 42.2091 13 40C13 37.7909 11.2091 36 9 36C6.79086 36 5 37.7909 5 40C5 42.2091 6.79086 44 9 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.33 44C21.5391 44 23.33 42.2091 23.33 40C23.33 37.7909 21.5391 36 19.33 36C17.1208 36 15.33 37.7909 15.33 40C15.33 42.2091 17.1208 44 19.33 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29.67 44C31.8792 44 33.67 42.2091 33.67 40C33.67 37.7909 31.8792 36 29.67 36C27.4609 36 25.67 37.7909 25.67 40C25.67 42.2091 27.4609 44 29.67 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 44C42.2091 44 44 42.2091 44 40C44 37.7909 42.2091 36 40 36C37.7909 36 36 37.7909 36 40C36 42.2091 37.7909 44 40 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Rowing.js

/* harmony default export */ var Rowing = (IconWrapper('rowing', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30.02 16C32.7814 16 35.02 13.7614 35.02 11C35.02 8.23858 32.7814 6 30.02 6C27.2586 6 25.02 8.23858 25.02 11C25.02 13.7614 27.2586 16 30.02 16Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M42 31L35 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M32.01 40L26 29L9 40L21 20L44 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/RugbyOne.js

/* harmony default export */ var RugbyOne = (IconWrapper('rugby-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 24C6.2922 32.63 14.3769 39 24 39C33.6231 39 41.7078 32.63 44 24C41.7078 15.37 33.6231 9 24 9C14.3769 9 6.2922 15.37 4 24Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24H34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H8",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20V28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Helmet.js

/* harmony default export */ var Helmet = (IconWrapper('helmet', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M42.34 32C43.41 29.55 44 26.84 44 24C44 12.95 35.05 4 24 4C12.95 4 4 12.95 4 24H24L24.01 32C24.01 35.87 27.14 39 31.01 39C34.88 39 38.01 35.87 38.01 32H42.34Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 34C32.1 34 33 33.1 33 32C33 30.9 32.1 30 31 30C29.9 30 29 30.9 29 32C29 33.1 29.9 34 31 34Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32L6 36C8.23 39.17 10.45 42.37 14 44L26 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Sailboat.js

/* harmony default export */ var Sailboat = (IconWrapper('sailboat', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M8 28L6 24H42L40 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28.0001 4L10 24H28.0001V4Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 11L38 24H28V11Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L6.5 35.3514C8.1 36.2162 9.9 36.2162 11.5 35.3514C13.1 34.4865 14.9 34.4865 16.5 35.3514C18.1 36.2162 19.9 36.2162 21.5 35.3514C23.1 34.4865 24.9 34.4865 26.5 35.3514C28.1 36.2162 29.9 36.2162 31.5 35.3514C33.1 34.4865 34.9 34.4865 36.5 35.3514C38.1 36.2162 39.9 36.2162 41.5 35.3514L44 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40L6.5 41.3514C8.1 42.2162 9.9 42.2162 11.5 41.3514C13.1 40.4865 14.9 40.4865 16.5 41.3514C18.1 42.2162 19.9 42.2162 21.5 41.3514C23.1 40.4865 24.9 40.4865 26.5 41.3514C28.1 42.2162 29.9 42.2162 31.5 41.3514C33.1 40.4865 34.9 40.4865 36.5 41.3514C38.1 42.2162 39.9 42.2162 41.5 41.3514L44 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Skate.js

/* harmony default export */ var Skate = (IconWrapper('skate', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 39.82H4L36.54 21.82H44V39.82Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M3.85767 19.201L7.08972 20.799L24.4102 10.799L24.6423 7.20096",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12.33 24.88C13.9868 24.88 15.33 23.5369 15.33 21.88C15.33 20.2232 13.9868 18.88 12.33 18.88C10.6731 18.88 9.32996 20.2232 9.32996 21.88C9.32996 23.5369 10.6731 24.88 12.33 24.88Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M23.45 18.88C25.1068 18.88 26.45 17.5369 26.45 15.88C26.45 14.2232 25.1068 12.88 23.45 12.88C21.7931 12.88 20.45 14.2232 20.45 15.88C20.45 17.5369 21.7931 18.88 23.45 18.88Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Skating.js

/* harmony default export */ var Skating = (IconWrapper('skating', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 4H28V12H44V4Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 12V34C44 35.11 43.11 36 42 36H8C5.79 36 4 34.21 4 32V26C4 21.58 7.58 18 12 18H28V12H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 24V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 24V18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 44V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 44V36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 44H6C4.89 44 4 43.1 4 42V40.63",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SoccerOne.js

/* harmony default export */ var SoccerOne = (IconWrapper('soccer-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 14C31.7614 14 34 11.7614 34 9C34 6.23858 31.7614 4 29 4C26.2386 4 24 6.23858 24 9C24 11.7614 26.2386 14 29 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M19 46C20.6569 46 22 44.6569 22 43C22 41.3431 20.6569 40 19 40C17.3431 40 16 41.3431 16 43C16 44.6569 17.3431 46 19 46Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24.38 18.91L20 27L27.31 33.02C27.62 33.26 27.84 33.59 27.97 33.96L31 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 27L14.51 34.64C13.97 35.43 12.95 35.73 12.07 35.36L4 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M42 24H35C34.64 24 34.28 23.91 33.96 23.73L30.75 21.92C26.74 19.57 22.35 17.96 17.78 17.14L14.56 16.57C14.11 16.49 13.64 16.57 13.24 16.79L7 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Soccer.js

/* harmony default export */ var Soccer = (IconWrapper('soccer', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M17.8176 4.97985C7.30942 8.38932 1.57044 19.6776 4.97983 30.176C8.38923 40.6743 19.6772 46.4235 30.1754 43.014C40.6835 39.6045 46.4225 28.3162 43.0131 17.8179C39.6037 7.30949 28.3157 1.57037 17.8176 4.97985Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 21L24 13L14 21L18 33H30L34 21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 21L43 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 40L30 33",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 33L12 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 21L5 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 13V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Softball.js

/* harmony default export */ var Softball = (IconWrapper('softball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44C35.05 44 44 35.05 44 24C44 12.95 35.05 4 24 4C12.95 4 4 12.95 4 24C4 35.05 12.95 44 24 44Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 38C13.7 34.37 16 29.59 16 24C16 18.48 13.62 13.62 10 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 38C34.3 34.37 32 29.59 32 24C32 18.48 34.38 13.62 38 10",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 24H20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M30 34L36 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 17L30 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 34L12 31",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 17L18 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Spikedshoes.js

/* harmony default export */ var Spikedshoes = (IconWrapper('spikedshoes', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M44 6H28V14H44V6Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 14V36C44 37.11 43.11 38 42 38H8C5.79 38 4 36.21 4 34V28C4 23.58 7.58 20 12 20H28V14H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 26V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 26V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 42V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M8 42V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 42V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 42V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M41 42V38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwimmingPool.js

/* harmony default export */ var SwimmingPool = (IconWrapper('swimming-pool', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 27V8C36 5.79 37.79 4 40 4H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 27V8C10 5.79 11.79 4 14 4H18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 12H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M10 20H36",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 34L6.5 35.3514C8.1 36.2162 9.9 36.2162 11.5 35.3514C13.1 34.4865 14.9 34.4865 16.5 35.3514C18.1 36.2162 19.9 36.2162 21.5 35.3514C23.1 34.4865 24.9 34.4865 26.5 35.3514C28.1 36.2162 29.9 36.2162 31.5 35.3514C33.1 34.4865 34.9 34.4865 36.5 35.3514C38.1 36.2162 39.9 36.2162 41.5 35.3514L44 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40L6.5 41.3514C8.1 42.2162 9.9 42.2162 11.5 41.3514C13.1 40.4865 14.9 40.4865 16.5 41.3514C18.1 42.2162 19.9 42.2162 21.5 41.3514C23.1 40.4865 24.9 40.4865 26.5 41.3514C28.1 42.2162 29.9 42.2162 31.5 41.3514C33.1 40.4865 34.9 40.4865 36.5 41.3514C38.1 42.2162 39.9 42.2162 41.5 41.3514L44 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SwimmingRing.js

/* harmony default export */ var SwimmingRing = (IconWrapper('swimming-ring', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M28 33.1679C30.3069 32.16 32.16 30.3069 33.1679 28",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M14.832 28C15.84 30.3069 17.6931 32.16 19.9999 33.1679",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M19.9999 14.8321C17.6931 15.84 15.84 17.6931 14.832 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M28 14.8321C30.3069 15.84 32.16 17.6931 33.1679 20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 40.9758C35.1145 39.1681 39.1681 35.1145 40.9758 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M7.02429 30C8.832 35.1145 12.8856 39.1681 18.0001 40.9758",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M18.0001 7.02423C12.8856 8.83194 8.832 12.8855 7.02429 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M30 7.02423C35.1145 8.83194 39.1681 12.8855 40.9758 18",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M27 17H21L18 7L20 4H28L30 7L27 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 21V27L7 30L4 28L4 20L7 18L17 21Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 31H27L30 41L28 44H20L18 41L21 31Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 27V21L41 18C42.08 18.8 42.92 19.2 44 20V28C42.92 28.8 42.08 29.2 41 30L31 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Tabletennis.js

/* harmony default export */ var Tabletennis = (IconWrapper('tabletennis', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31.45 16.96C34.2114 16.96 36.45 14.7214 36.45 11.96C36.45 9.19857 34.2114 6.95999 31.45 6.95999C28.6885 6.95999 26.45 9.19857 26.45 11.96C26.45 14.7214 28.6885 16.96 31.45 16.96Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M36 34L34 23L23 28L10 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 41.03H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("circle", {
    "attrs": {
      "cx": "9",
      "cy": "25",
      "r": "5",
      "fill": props.colors[0]
    }
  }), h("circle", {
    "attrs": {
      "cx": "6",
      "cy": "17",
      "r": "2",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M34 23L44 29L29 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TargetOne.js

/* harmony default export */ var TargetOne = (IconWrapper('target-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 40C32.84 40 40 32.84 40 24C40 15.16 32.84 8.00001 24 8.00001C15.16 8.00001 8 15.16 8 24C8 32.84 15.16 40 24 40Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.42 32 32 28.42 32 24C32 19.58 28.42 16 24 16C19.58 16 16 19.58 16 24C16 28.42 19.58 32 24 32Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 26C25.1 26 26 25.1 26 24C26 22.9 25.1 22 24 22C22.9 22 22 22.9 22 24C22 25.1 22.9 26 24 26Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M24 8.00001V4.00001",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 44L34 37",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M14 37L10 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TargetTwo.js

/* harmony default export */ var TargetTwo = (IconWrapper('target-two', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 41C33.39 41 41 33.39 41 24C41 14.61 33.39 7 24 7C14.61 7 7 14.61 7 24C7 33.39 14.61 41 24 41Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 32C28.42 32 32 28.42 32 24C32 19.58 28.42 16 24 16C19.58 16 16 19.58 16 24C16 28.42 19.58 32 24 32Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 4V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Thin.js

/* harmony default export */ var Thin = (IconWrapper('thin', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M33 25H15C13.41 25 11.23 24.77 10 24C6.35 21.69 5.66004 16.63 8.00004 13L14.0001 4C17.9301 12.43 30.04 12.42 34 4L40 13C42.34 16.63 41.64 21.69 38 24C36.77 24.78 34.59 25 33 25Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 25L14.52 34.55C15.39 37.93 14.46 41.52 12 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 25L33.4801 34.58C32.6101 37.96 33.54 41.52 36 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 42V40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/SpinningTop.js

/* harmony default export */ var SpinningTop = (IconWrapper('spinning-top', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 44V41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 20L24 41L4 20H44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 12H4V20H44V12Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 12V4",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Towel.js

/* harmony default export */ var Towel = (IconWrapper('towel', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 18H4V26H36V18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M36 12V32C36 34.2091 34.2091 36 32 36H12M12 36H8C5.79086 36 4 34.2091 4 32V8C4 5.79086 5.79086 4 8 4H40C42.2091 4 44 5.79086 44 8V40C44 42.21 42.21 44 40 44H16C13.79 44 12 42.21 12 40V36Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/TreadmillOne.js

/* harmony default export */ var TreadmillOne = (IconWrapper('treadmill-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M30 14C32.7614 14 35 11.7614 35 9C35 6.23858 32.7614 4 30 4C27.2386 4 25 6.23858 25 9C25 11.7614 27.2386 14 30 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M11 21L17 16L25 19L22 25L29 31L31 38",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22 25L17 33L9 32",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 44H40L44 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 19L33 24L39 22",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Treadmill.js

/* harmony default export */ var Treadmill = (IconWrapper('treadmill', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M39.75 44H9.31C6.38 44 4 41.62 4 38.69V33.27C4 32.06 5.06 31.13 6.25 31.28L40.27 35.53C42.4 35.8 44 37.61 44 39.75C44 42.1 42.1 44 39.75 44Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 32L4 4H10.43",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M6 31L12 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 15H9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/PlayVolleyball.js

/* harmony default export */ var PlayVolleyball = (IconWrapper('play-volleyball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M29 14C31.7614 14 34 11.7614 34 9C34 6.23858 31.7614 4 29 4C26.2386 4 24 6.23858 24 9C24 11.7614 26.2386 14 29 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M41 24C42.6569 24 44 22.6569 44 21C44 19.3431 42.6569 18 41 18C39.3431 18 38 19.3431 38 21C38 22.6569 39.3431 24 41 24Z",
      "fill": props.colors[0]
    }
  }), h("path", {
    "attrs": {
      "d": "M16 24L13.73 35.26C13.52 36.57 12.12 37.31 10.92 36.76L4 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M38 30L23.76 19.07C22.99 18.5 21.93 18.56 21.22 19.2L16.38 23.63C15.91 24.06 15.95 24.8 16.47 25.18L26 32.15C26.72 32.68 27.01 33.63 26.69 34.47L23.12 44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Volleyball.js

/* harmony default export */ var Volleyball = (IconWrapper('volleyball', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M31.81 42.4054C41.9782 38.0865 46.7173 26.3494 42.4081 16.192C38.0989 6.0345 26.351 1.27569 16.1928 5.59461C6.03464 9.91353 1.2755 21.6506 5.59472 31.808C9.91394 41.9655 21.6518 46.7243 31.81 42.4054Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16 6C14.5062 13.0103 17.9371 20.1966 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M12 40C18.97 37.74 23.74 31.32 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 25C38.55 20.3275 29.5 20.4033 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M17 16C17 16 28.56 7.51 41 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M20 33C20 33 7.59 28.02 7 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34 22C34 22 35.56 36.5 23.72 44.03",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WaterpoloOne.js

/* harmony default export */ var WaterpoloOne = (IconWrapper('waterpolo-one', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 35L6.5 36.3514C8.1 37.2162 9.9 37.2162 11.5 36.3514C13.1 35.4865 14.9 35.4865 16.5 36.3514C18.1 37.2162 19.9 37.2162 21.5 36.3514C23.1 35.4865 24.9 35.4865 26.5 36.3514C28.1 37.2162 29.9 37.2162 31.5 36.3514C33.1 35.4865 34.9 35.4865 36.5 36.3514C38.1 37.2162 39.9 37.2162 41.5 36.3514L44 35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 41L6.5 42.3514C8.1 43.2162 9.9 43.2162 11.5 42.3514C13.1 41.4865 14.9 41.4865 16.5 42.3514C18.1 43.2162 19.9 43.2162 21.5 42.3514C23.1 41.4865 24.9 41.4865 26.5 42.3514C28.1 43.2162 29.9 43.2162 31.5 42.3514C33.1 41.4865 34.9 41.4865 36.5 42.3514C38.1 43.2162 39.9 43.2162 41.5 42.3514L44 41",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25 18C27.7614 18 30 15.7614 30 13C30 10.2386 27.7614 8 25 8C22.2386 8 20 10.2386 20 13C20 15.7614 22.2386 18 25 18Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M25 29L24 25",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 11L11 22L24 24.93H42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 10C12.6569 10 14 8.65685 14 7C14 5.34315 12.6569 4 11 4C9.34315 4 8 5.34315 8 7C8 8.65685 9.34315 10 11 10Z",
      "fill": props.colors[0]
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Waterpolo.js

/* harmony default export */ var Waterpolo = (IconWrapper('waterpolo', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 34L6.5 35.3514C8.1 36.2162 9.9 36.2162 11.5 35.3514C13.1 34.4865 14.9 34.4865 16.5 35.3514C18.1 36.2162 19.9 36.2162 21.5 35.3514C23.1 34.4865 24.9 34.4865 26.5 35.3514C28.1 36.2162 29.9 36.2162 31.5 35.3514C33.1 34.4865 34.9 34.4865 36.5 35.3514C38.1 36.2162 39.9 36.2162 41.5 35.3514L44 34",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 40L6.5 41.3514C8.1 42.2162 9.9 42.2162 11.5 41.3514C13.1 40.4865 14.9 40.4865 16.5 41.3514C18.1 42.2162 19.9 42.2162 21.5 41.3514C23.1 40.4865 24.9 40.4865 26.5 41.3514C28.1 42.2162 29.9 42.2162 31.5 41.3514C33.1 40.4865 34.9 40.4865 36.5 41.3514C38.1 42.2162 39.9 42.2162 41.5 41.3514L44 40",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M43.5878 28C44.3775 24.171 44.0476 20.0621 42.3981 16.1932C38.0895 6.02588 26.3431 1.27715 16.1862 5.596C7.28896 9.37498 2.55042 18.8325 4.38985 27.94",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.0001 6C14.4701 13.17 17.79 20.11 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23.39 28C23.74 26.71 23.95 25.37 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 26C38.55 21.09 30.47 20.56 24 24",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M18 16C18 16 28.56 7.51 41 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 28C10.01 24.73 7.26 20.29 7 14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M34.3101 22.09C34.3101 22.09 34.5301 24.59 33.9301 28.04",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Weightlifting.js

/* harmony default export */ var Weightlifting = (IconWrapper('weightlifting', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 27C26.7614 27 29 24.7614 29 22C29 19.2386 26.7614 17 24 17C21.2386 17 19 19.2386 19 22C19 24.7614 21.2386 27 24 27Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M4 9H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M4 4V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M44 4V14",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M11 9V26.1L24 34L37 26V9",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 34V44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Whistling.js

/* harmony default export */ var Whistling = (IconWrapper('whistling', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 11L4 11V19H15C14.35 20.55 14 22.21 14 24C14 31.21 19.79 37 27 37C34.2 37 40 31.21 40 24C40 16.79 34.21 11 27 11Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M27 11V17",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M40 24H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/WingsuitFlying.js

/* harmony default export */ var WingsuitFlying = (IconWrapper('wingsuit-flying', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M24 14C26.7614 14 29 11.7614 29 9C29 6.23858 26.7614 4 24 4C21.2386 4 19 6.23858 19 9C19 11.7614 21.2386 14 24 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M24 20C15.29 20 8 27.28 8 36H15V44H33V36H40C40.01 27.29 32.71 20 24 20Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 36V23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M33 36L33 23",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M24 44V20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Torch.js

/* harmony default export */ var Torch = (IconWrapper('torch', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M27 34H21V44H27V34Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M31 34H17L14 26H34L31 34Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21 14C23 9.39 27 4 27 4C27 4 33.36 15.49 33.36 19.23C33.36 22.97 30.74 26 27 26H19C16.36 26 14.64 23.86 14.64 21.22C14.64 18.58 19 10 19 10C19 10 19.96 12.01 21 14Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/icons/Hockey.js

/* harmony default export */ var Hockey = (IconWrapper('hockey', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M36 4L30.23 31.41C30.03 32.34 29.22 33 28.27 33H9C7.34 33 6 34.34 6 36V37.55C6 41.03 8.95 43.78 12.43 43.53L29.49 42.31C32.16 42.12 34.38 40.18 34.93 37.56L42 4H36Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M15 16C19.4183 16 23 14.6569 23 13C23 11.3431 19.4183 10 15 10C10.5817 10 7 11.3431 7 13C7 14.6569 10.5817 16 15 16Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M23 13V19C23 20.66 19.42 22 15 22C10.58 22 7 20.66 7 19V13",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
}));
// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/map.js












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































// CONCATENATED MODULE: ./node_modules/@icon-park/vue/es/index.js


// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/CubeMapDraw/src/MapTools.vue?vue&type=script&lang=js&

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var ICONCONFIG = _objectSpread2(_objectSpread2({}, DEFAULT_ICON_CONFIGS), {}, {
  prefix: 'icon'
});

/* harmony default export */ var MapToolsvue_type_script_lang_js_ = ({
  name: 'MapDrawingTools',
  provide: function provide() {
    return {
      ICON_CONFIGS: ICONCONFIG
    };
  },
  props: {
    preview: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    drawType: {
      type: Array,
      default: function _default() {
        return [// { text: '标点', iconName: 'LocalTwo', iconColor: '#3894ff', type: 2 },
          // { text: '画面', iconName: 'MapDraw', iconColor: '#3894ff', type: 2 },
          // { text: '画线', iconName: 'Waves', iconColor: '#3894ff', type: 2 }
        ];
      }
    },
    iconColor: {
      type: String,
      default: function _default() {
        return '#3894ff';
      }
    }
  },
  components: {
    Clear: Clear,
    Waves: Waves,
    MapDraw: MapDraw,
    LocalTwo: LocalTwo,
    ClickTap: ClickTap,
    FullScreen: FullScreen,
    MaterialTwo: MaterialTwo,
    FullScreenPlay: FullScreenPlay
  },
  mounted: function mounted() {// console.log(this.$attrs)
  },
  methods: {
    draw: function draw(type) {
      this.$emit('draw', type);
    }
  }
});
// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/MapTools.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_MapToolsvue_type_script_lang_js_ = (MapToolsvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/CubeMapDraw/src/MapTools.vue?vue&type=style&index=0&id=38552c8e&lang=scss&scoped=true&
var MapToolsvue_type_style_index_0_id_38552c8e_lang_scss_scoped_true_ = __webpack_require__("2ec5");

// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/MapTools.vue






/* normalize component */

var MapTools_component = normalizeComponent(
  src_MapToolsvue_type_script_lang_js_,
  MapToolsvue_type_template_id_38552c8e_scoped_true_render,
  MapToolsvue_type_template_id_38552c8e_scoped_true_staticRenderFns,
  false,
  null,
  "38552c8e",
  null
  
)

/* harmony default export */ var MapTools = (MapTools_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/CubeMapDraw/src/index.vue?vue&type=script&lang=js&







//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var srcvue_type_script_lang_js_ = ({
  name: 'CubeMapDraw',
  props: {
    config: {
      type: Object,
      default: function _default() {}
    },
    drawTypeList: {
      type: Array,
      default: function _default() {
        return [{
          text: '标点',
          iconName: 'LocalTwo',
          iconColor: '#3894ff',
          type: 2
        }, {
          text: '画面',
          iconName: 'MapDraw',
          iconColor: '#3894ff',
          type: 3
        }, {
          text: '画线',
          iconName: 'Waves',
          iconColor: '#3894ff',
          type: 4
        }, {
          text: '清除',
          iconName: 'Clear',
          iconColor: '#F56C6C',
          type: 10
        }];
      }
    },
    polygons: {
      type: Array,
      default: function _default() {
        return [];
      } // validator: (value) => {
      //   return value[0] ? value[0].point : true
      // }

    },
    polylines: {
      type: Array,
      default: function _default() {
        return [];
      } // validator: (value) => {
      //   return value[0] ? value[0].point : true
      // }

    },
    markers: {
      type: Array,
      default: function _default() {
        return [];
      } // validator: (value) => {
      //   return value[0] ? value[0].point : true
      // }

    }
  },
  components: {
    BaiduMap: Map,
    BmControl: Control,
    BmMarker: Marker,
    BmPolyline: Polyline,
    BmPolygon: Polygon,
    BmBoundary: Boundary,
    MapDrawingTools: MapTools
  },
  directives: {
    clickOutside: {
      bind: function bind(el, binding, vnode) {
        function clickHandler(e) {
          if (el.contains(e.target)) return false;
          if (binding.expression) binding.value(e);
        }

        el.__vueClickOutside__ = clickHandler;
        document.addEventListener('click', clickHandler);
      },
      unbind: function unbind(el, binding) {
        document.removeEventListener('click', el.__vueClickOutside__);
        delete el.__vueClickOutside__;
      }
    }
  },
  created: function created() {
    // this.config 作为配置静态数据 初始化配置使用 暂时不考虑可动态的场景
    deepMerge(this.defaultConfig, this.config || {});
  },
  data: function data() {
    return {
      map: null,
      drawingManager: null,
      visible: false,
      contextmenu: {
        left: 0,
        right: 0
      },
      defaultConfig: {
        styleOptions: {
          strokeColor: 'blue',
          // 边线颜色。
          fillColor: '#3689F3',
          // 填充颜色。当参数为空时，圆形将没有填充效果。
          strokeWeight: 2,
          // 边线的宽度，以像素为单位。
          strokeOpacity: 1,
          // 边线透明度，取值范围0 - 1。
          fillOpacity: 0.4,
          // 填充的透明度，取值范围0 - 1。
          strokeStyle: 'dashed' // 边线的样式，solid dashed。

        },
        mapCenter: '深圳市',
        akey: '',
        markers: [],
        polylines: [],
        polygons: [],
        circles: [],
        rectangle: []
      }
    };
  },
  mounted: function mounted() {},
  methods: {
    // 省市区边界初始化完毕
    boundaryLoaded: function boundaryLoaded(points) {
      this.boundaryLoadedpoints = Object.freeze(points);
      this.map && this.map.setViewport(points);
    },
    // 地图初始化完毕
    ready: function ready(_ref) {
      var _this = this;

      var map = _ref.map,
          BMap = _ref.BMap;
      this.BMapLib = initBMapLib();
      this.map = map;
      this.BMap = BMap;
      this.$nextTick().then(function () {
        var styleOptions = _this.defaultConfig.styleOptions; // eslint-disable-next-line no-undef

        _this.drawingManager = new BMapLib.DrawingManager(map, {
          isOpen: false,
          // 是否开启绘制模式
          enableDrawingTool: false,
          // 是否显示工具栏
          enableCalculate: true,
          // 输出面积 单位 米
          drawingToolOptions: {
            anchor: BMAP_ANCHOR_TOP_RIGHT,
            // 位置
            offset: new BMap.Size(5, 5) // 偏离值

          },
          circleOptions: styleOptions,
          // 圆的样式
          polylineOptions: styleOptions,
          // 线的样式
          polygonOptions: styleOptions,
          // 多边形的样式
          rectangleOptions: styleOptions // 矩形的样式

        });
        _this.drawingManager && _this.drawingManager.addEventListener('overlaycomplete', function (n, e) {
          return _this.drawOverlayComplete(e);
        });

        _this.$emit('ready', {
          map: map,
          BMap: BMap,
          BMapLib: _this.BMapLib
        }); // console.log(this.BMapLib, 'this.BMapLib')


        setTimeout(function () {
          // 处理省市区边界视角
          var points = [];
          var boundaryPaths = _this.$refs.boundary ? _this.$refs.boundary.paths : [];
          boundaryPaths.forEach(function (item) {
            item.forEach(function (p) {
              points.push(new BMap.Point(p.lng, p.lat));
            });
          });
          _this.boundaryPaths = Object.freeze(points);

          _this.getBetterViewByOverlays();
        }, 2200);
      });
    },
    getOverLayCenterPoint: function getOverLayCenterPoint(path) {
      var x = 0.0;
      var y = 0.0;

      for (var i = 0; i < path.length; i++) {
        x = x + parseFloat(path[i].lng);
        y = y + parseFloat(path[i].lat);
      }

      x = x / path.length;
      y = y / path.length;
      return {
        lng: x,
        lat: y
      };
    },
    // 选择绘图方式
    draw: function draw(type) {
      switch (type) {
        case 10:
          this.markers.splice(0, this.markers.length);
          this.polygons.splice(0, this.polygons.length);
          this.polylines.splice(0, this.polylines.length);
          this.$emit('update:markers', []);
          this.$emit('update:polylines', []);
          this.$emit('update:polygons', []);
          this.$emit('clear');
          this.drawingManager && this.drawingManager.close();
          console.log('清除全部');
          break;

        case 0:
          this.drawingManager && this.drawingManager.close();
          this.getBetterViewByOverlays();
          break;

        case 1:
          this.drawType = null;
          this.drawingManager && this.drawingManager.close(); // this.getBetterViewByOverlays()

          break;

        case 2:
          this.drawingManager.open();
          this.drawingManager.setDrawingMode('marker');
          break;

        case 3:
          this.drawingManager.open();
          this.drawingManager.setDrawingMode('polygon');
          break;

        case 4:
          this.drawingManager.open();
          this.drawingManager.setDrawingMode('polyline');
          break;

        case 5:
          this.drawingManager.open();
          this.drawingManager.setDrawingMode('circle');
          break;

        case 6:
          this.drawingManager.open();
          this.drawingManager.setDrawingMode('rectangle');
          break;

        default:
          break;
      }
    },
    // 绘制覆盖物完成
    drawOverlayComplete: function drawOverlayComplete(e) {
      if (!e.drawingMode) return; // 立即清除鼠标绘制的东西

      this.map && this.map.removeOverlay(e.overlay);
      var overlay = e.overlay; // const { polygons, polylines, markers, circles, rectangle } = this.defaultConfig

      var drawPolygonTypeList = ['polygon', 'polyline', 'circle', 'rectangle'];

      if (drawPolygonTypeList.includes(e.drawingMode)) {
        var overLayCenterPoint = this.getOverLayCenterPoint(e.overlay.getPath());
        var polygonOverLay = {
          point: overlay.getPath(),
          calculate: e.calculate,
          editing: true,
          centerPoint: overLayCenterPoint
        };

        switch (e.drawingMode) {
          case 'polygon':
            this.polygons && this.polygons.push(polygonOverLay); // : polygons.push(polygonOverLay)

            break;

          case 'polyline':
            this.polylines && this.polylines.push(polygonOverLay); // : polylines.push(polygonOverLay)

            break;

          case 'circle':
            this.circles && this.circles.push(polygonOverLay); // :  circles.push(polygonOverLay)

            break;

          case 'rectangle':
            this.rectangle && this.rectangle.push(polygonOverLay); // : rectangle.push(polygonOverLay)

            break;

          default:
            break;
        }
      } else {
        var _overlay$point = overlay.point,
            lat = _overlay$point.lat,
            lng = _overlay$point.lng;
        this.markers && this.markers.push({
          point: {
            lat: lat,
            lng: lng
          }
        }); // : markers.push({ point: { lat, lng } })
      }
    },
    click: function click(e, item) {// console.log(e, item)
    },
    getBetterViewByOverlays: function getBetterViewByOverlays() {
      var ampPoits = [];
      var markers = this.markers,
          polygons = this.polygons,
          polylines = this.polylines;

      var _iterator = Object(createForOfIteratorHelper["a" /* default */])(markers),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var item = _step.value;
          ampPoits.push(new BMap.Point(item.point.lng, item.point.lat));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var _iterator2 = Object(createForOfIteratorHelper["a" /* default */])(polygons),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _item = _step2.value;

          _item.point.forEach(function (k) {
            ampPoits.push(new BMap.Point(k.lng, k.lat));
          });
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      var _iterator3 = Object(createForOfIteratorHelper["a" /* default */])(polylines),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _item2 = _step3.value;

          _item2.point.forEach(function (k) {
            ampPoits.push(new BMap.Point(k.lng, k.lat));
          });
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      this.map && this.map.setViewport(ampPoits.length ? ampPoits : this.boundaryPaths);
    },
    polygonUpdate: function polygonUpdate(e, item, index, name) {
      if (!item.editing) return;
      item.point = e.target.getPath();
      item.calculate = this.BMapLib.GeoUtils ? this.BMapLib.GeoUtils.getPolygonArea(e.target) : 0;
      item.centerPoint = this.getOverLayCenterPoint(e.target.getPath());
    }
  }
});
// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var CubeMapDraw_srcvue_type_script_lang_js_ = (srcvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/CubeMapDraw/src/index.vue?vue&type=style&index=0&id=093bcea8&scoped=true&lang=scss&
var srcvue_type_style_index_0_id_093bcea8_scoped_true_lang_scss_ = __webpack_require__("0400");

// CONCATENATED MODULE: ./src/components/CubeMapDraw/src/index.vue






/* normalize component */

var src_component = normalizeComponent(
  CubeMapDraw_srcvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "093bcea8",
  null
  
)

/* harmony default export */ var CubeMapDraw_src = (src_component.exports);
// CONCATENATED MODULE: ./src/components/CubeMapDraw/index.js



CubeMapDraw_src.install = function (Vue) {
  Vue.component(CubeMapDraw_src.name, CubeMapDraw_src);
};

/* harmony default export */ var CubeMapDraw = (CubeMapDraw_src);
// CONCATENATED MODULE: ./src/index.js




/*
 * @Author: shiliangL
 * @Date: 2020-11-22 08:53:57
 * @LastEditTime: 2020-11-22 09:00:24
 * @LastEditors: Do not edit
 * @Description:
 * @FilePath: /cube-map-draw/src/index.js
 */

var src_components = [CubeMapDraw];

var install = function install(Vue) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  src_components.forEach(function (component) {
    Vue.component(component.name, component);
  });
};
/* istanbul ignore if */


if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

/* harmony default export */ var src_0 = ({
  version: Object({"NODE_ENV":"production","BASE_URL":"/"}).npm_package_version,
  install: install,
  CubeMapDraw: CubeMapDraw
});
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_0);



/***/ }),

/***/ "fb6a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");
var toIndexedObject = __webpack_require__("fc6a");
var createProperty = __webpack_require__("8418");
var wellKnownSymbol = __webpack_require__("b622");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fea9":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global.Promise;


/***/ })

/******/ });